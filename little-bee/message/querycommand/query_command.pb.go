// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.7.0
// source: message/query_command.proto

package querycommand

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PredicateTypeEnum int32

const (
	PredicateTypeEnum_PREDICATE_TYPE_UNKNOWN     PredicateTypeEnum = 0
	PredicateTypeEnum_PREDICATE_TYPE_EQ          PredicateTypeEnum = 1
	PredicateTypeEnum_PREDICATE_TYPE_LT          PredicateTypeEnum = 2
	PredicateTypeEnum_PREDICATE_TYPE_GT          PredicateTypeEnum = 3
	PredicateTypeEnum_PREDICATE_TYPE_LE          PredicateTypeEnum = 4
	PredicateTypeEnum_PREDICATE_TYPE_GE          PredicateTypeEnum = 5
	PredicateTypeEnum_PREDICATE_TYPE_BETWEEN     PredicateTypeEnum = 6
	PredicateTypeEnum_PREDICATE_TYPE_LIKE        PredicateTypeEnum = 7
	PredicateTypeEnum_PREDICATE_TYPE_NE          PredicateTypeEnum = 8
	PredicateTypeEnum_PREDICATE_TYPE_IS_NULL     PredicateTypeEnum = 9
	PredicateTypeEnum_PREDICATE_TYPE_IS_NOT_NULL PredicateTypeEnum = 10
	PredicateTypeEnum_PREDICATE_TYPE_IN          PredicateTypeEnum = 11
	PredicateTypeEnum_PREDICATE_TYPE_NOT_IN      PredicateTypeEnum = 12
)

// Enum value maps for PredicateTypeEnum.
var (
	PredicateTypeEnum_name = map[int32]string{
		0:  "PREDICATE_TYPE_UNKNOWN",
		1:  "PREDICATE_TYPE_EQ",
		2:  "PREDICATE_TYPE_LT",
		3:  "PREDICATE_TYPE_GT",
		4:  "PREDICATE_TYPE_LE",
		5:  "PREDICATE_TYPE_GE",
		6:  "PREDICATE_TYPE_BETWEEN",
		7:  "PREDICATE_TYPE_LIKE",
		8:  "PREDICATE_TYPE_NE",
		9:  "PREDICATE_TYPE_IS_NULL",
		10: "PREDICATE_TYPE_IS_NOT_NULL",
		11: "PREDICATE_TYPE_IN",
		12: "PREDICATE_TYPE_NOT_IN",
	}
	PredicateTypeEnum_value = map[string]int32{
		"PREDICATE_TYPE_UNKNOWN":     0,
		"PREDICATE_TYPE_EQ":          1,
		"PREDICATE_TYPE_LT":          2,
		"PREDICATE_TYPE_GT":          3,
		"PREDICATE_TYPE_LE":          4,
		"PREDICATE_TYPE_GE":          5,
		"PREDICATE_TYPE_BETWEEN":     6,
		"PREDICATE_TYPE_LIKE":        7,
		"PREDICATE_TYPE_NE":          8,
		"PREDICATE_TYPE_IS_NULL":     9,
		"PREDICATE_TYPE_IS_NOT_NULL": 10,
		"PREDICATE_TYPE_IN":          11,
		"PREDICATE_TYPE_NOT_IN":      12,
	}
)

func (x PredicateTypeEnum) Enum() *PredicateTypeEnum {
	p := new(PredicateTypeEnum)
	*p = x
	return p
}

func (x PredicateTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PredicateTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_query_command_proto_enumTypes[0].Descriptor()
}

func (PredicateTypeEnum) Type() protoreflect.EnumType {
	return &file_message_query_command_proto_enumTypes[0]
}

func (x PredicateTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PredicateTypeEnum.Descriptor instead.
func (PredicateTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{0}
}

type ConnectionTypeEnum int32

const (
	ConnectionTypeEnum_CONNECT_TYPE_UNKNOWN ConnectionTypeEnum = 0
	ConnectionTypeEnum_CONNECT_TYPE_AND     ConnectionTypeEnum = 1
	ConnectionTypeEnum_CONNECT_TYPE_OR      ConnectionTypeEnum = 2
)

// Enum value maps for ConnectionTypeEnum.
var (
	ConnectionTypeEnum_name = map[int32]string{
		0: "CONNECT_TYPE_UNKNOWN",
		1: "CONNECT_TYPE_AND",
		2: "CONNECT_TYPE_OR",
	}
	ConnectionTypeEnum_value = map[string]int32{
		"CONNECT_TYPE_UNKNOWN": 0,
		"CONNECT_TYPE_AND":     1,
		"CONNECT_TYPE_OR":      2,
	}
)

func (x ConnectionTypeEnum) Enum() *ConnectionTypeEnum {
	p := new(ConnectionTypeEnum)
	*p = x
	return p
}

func (x ConnectionTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_query_command_proto_enumTypes[1].Descriptor()
}

func (ConnectionTypeEnum) Type() protoreflect.EnumType {
	return &file_message_query_command_proto_enumTypes[1]
}

func (x ConnectionTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionTypeEnum.Descriptor instead.
func (ConnectionTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{1}
}

type FieldValueTypeEnum int32

const (
	FieldValueTypeEnum_FIELD_VALUE_TYPE_UNKNOWN FieldValueTypeEnum = 0
	FieldValueTypeEnum_FIELD_VALUE_TYPE_INTEGER FieldValueTypeEnum = 1
	FieldValueTypeEnum_FIELD_VALUE_TYPE_FLOAT   FieldValueTypeEnum = 2
	FieldValueTypeEnum_FIELD_VALUE_TYPE_STRING  FieldValueTypeEnum = 3
	FieldValueTypeEnum_FIELD_VALUE_TYPE_TIME    FieldValueTypeEnum = 4
)

// Enum value maps for FieldValueTypeEnum.
var (
	FieldValueTypeEnum_name = map[int32]string{
		0: "FIELD_VALUE_TYPE_UNKNOWN",
		1: "FIELD_VALUE_TYPE_INTEGER",
		2: "FIELD_VALUE_TYPE_FLOAT",
		3: "FIELD_VALUE_TYPE_STRING",
		4: "FIELD_VALUE_TYPE_TIME",
	}
	FieldValueTypeEnum_value = map[string]int32{
		"FIELD_VALUE_TYPE_UNKNOWN": 0,
		"FIELD_VALUE_TYPE_INTEGER": 1,
		"FIELD_VALUE_TYPE_FLOAT":   2,
		"FIELD_VALUE_TYPE_STRING":  3,
		"FIELD_VALUE_TYPE_TIME":    4,
	}
)

func (x FieldValueTypeEnum) Enum() *FieldValueTypeEnum {
	p := new(FieldValueTypeEnum)
	*p = x
	return p
}

func (x FieldValueTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FieldValueTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_query_command_proto_enumTypes[2].Descriptor()
}

func (FieldValueTypeEnum) Type() protoreflect.EnumType {
	return &file_message_query_command_proto_enumTypes[2]
}

func (x FieldValueTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FieldValueTypeEnum.Descriptor instead.
func (FieldValueTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{2}
}

type OrderTypeEnum int32

const (
	OrderTypeEnum_ORDER_TYPE_UNKNOWN OrderTypeEnum = 0
	OrderTypeEnum_ORDER_TYPE_ASC     OrderTypeEnum = 1
	OrderTypeEnum_ORDER_TYPE_DESC    OrderTypeEnum = 2
)

// Enum value maps for OrderTypeEnum.
var (
	OrderTypeEnum_name = map[int32]string{
		0: "ORDER_TYPE_UNKNOWN",
		1: "ORDER_TYPE_ASC",
		2: "ORDER_TYPE_DESC",
	}
	OrderTypeEnum_value = map[string]int32{
		"ORDER_TYPE_UNKNOWN": 0,
		"ORDER_TYPE_ASC":     1,
		"ORDER_TYPE_DESC":    2,
	}
)

func (x OrderTypeEnum) Enum() *OrderTypeEnum {
	p := new(OrderTypeEnum)
	*p = x
	return p
}

func (x OrderTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_query_command_proto_enumTypes[3].Descriptor()
}

func (OrderTypeEnum) Type() protoreflect.EnumType {
	return &file_message_query_command_proto_enumTypes[3]
}

func (x OrderTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderTypeEnum.Descriptor instead.
func (OrderTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{3}
}

type FieldValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldType         FieldValueTypeEnum   `protobuf:"varint,1,opt,name=field_type,json=fieldType,proto3,enum=message.FieldValueTypeEnum" json:"field_type,omitempty"`
	FieldValueInteger int32                `protobuf:"varint,2,opt,name=field_value_integer,json=fieldValueInteger,proto3" json:"field_value_integer,omitempty"`
	FieldValueFloat   float32              `protobuf:"fixed32,3,opt,name=field_value_float,json=fieldValueFloat,proto3" json:"field_value_float,omitempty"`
	FieldValueString  string               `protobuf:"bytes,4,opt,name=field_value_string,json=fieldValueString,proto3" json:"field_value_string,omitempty"`
	FieldValueTime    *timestamp.Timestamp `protobuf:"bytes,5,opt,name=field_value_time,json=fieldValueTime,proto3" json:"field_value_time,omitempty"`
}

func (x *FieldValue) Reset() {
	*x = FieldValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldValue) ProtoMessage() {}

func (x *FieldValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldValue.ProtoReflect.Descriptor instead.
func (*FieldValue) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{0}
}

func (x *FieldValue) GetFieldType() FieldValueTypeEnum {
	if x != nil {
		return x.FieldType
	}
	return FieldValueTypeEnum_FIELD_VALUE_TYPE_UNKNOWN
}

func (x *FieldValue) GetFieldValueInteger() int32 {
	if x != nil {
		return x.FieldValueInteger
	}
	return 0
}

func (x *FieldValue) GetFieldValueFloat() float32 {
	if x != nil {
		return x.FieldValueFloat
	}
	return 0
}

func (x *FieldValue) GetFieldValueString() string {
	if x != nil {
		return x.FieldValueString
	}
	return ""
}

func (x *FieldValue) GetFieldValueTime() *timestamp.Timestamp {
	if x != nil {
		return x.FieldValueTime
	}
	return nil
}

type Predicate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicateType PredicateTypeEnum `protobuf:"varint,1,opt,name=predicate_type,json=predicateType,proto3,enum=message.PredicateTypeEnum" json:"predicate_type,omitempty"`
	FieldName     string            `protobuf:"bytes,2,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	FieldValues   []*FieldValue     `protobuf:"bytes,3,rep,name=field_values,json=fieldValues,proto3" json:"field_values,omitempty"`
}

func (x *Predicate) Reset() {
	*x = Predicate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Predicate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Predicate) ProtoMessage() {}

func (x *Predicate) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Predicate.ProtoReflect.Descriptor instead.
func (*Predicate) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{1}
}

func (x *Predicate) GetPredicateType() PredicateTypeEnum {
	if x != nil {
		return x.PredicateType
	}
	return PredicateTypeEnum_PREDICATE_TYPE_UNKNOWN
}

func (x *Predicate) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *Predicate) GetFieldValues() []*FieldValue {
	if x != nil {
		return x.FieldValues
	}
	return nil
}

type Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PredicatesConnectionType []ConnectionTypeEnum `protobuf:"varint,1,rep,packed,name=predicates_connection_type,json=predicatesConnectionType,proto3,enum=message.ConnectionTypeEnum" json:"predicates_connection_type,omitempty"`
	Predicates               []*Predicate         `protobuf:"bytes,2,rep,name=predicates,proto3" json:"predicates,omitempty"`
}

func (x *Connection) Reset() {
	*x = Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Connection) ProtoMessage() {}

func (x *Connection) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Connection.ProtoReflect.Descriptor instead.
func (*Connection) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{2}
}

func (x *Connection) GetPredicatesConnectionType() []ConnectionTypeEnum {
	if x != nil {
		return x.PredicatesConnectionType
	}
	return nil
}

func (x *Connection) GetPredicates() []*Predicate {
	if x != nil {
		return x.Predicates
	}
	return nil
}

type Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection     []*Connection        `protobuf:"bytes,1,rep,name=connection,proto3" json:"connection,omitempty"`
	ConnectionType []ConnectionTypeEnum `protobuf:"varint,2,rep,packed,name=connection_type,json=connectionType,proto3,enum=message.ConnectionTypeEnum" json:"connection_type,omitempty"`
}

func (x *Filter) Reset() {
	*x = Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{3}
}

func (x *Filter) GetConnection() []*Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *Filter) GetConnectionType() []ConnectionTypeEnum {
	if x != nil {
		return x.ConnectionType
	}
	return nil
}

type OrderBy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldName string        `protobuf:"bytes,1,opt,name=field_name,json=fieldName,proto3" json:"field_name,omitempty"`
	Order     OrderTypeEnum `protobuf:"varint,2,opt,name=order,proto3,enum=message.OrderTypeEnum" json:"order,omitempty"`
}

func (x *OrderBy) Reset() {
	*x = OrderBy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBy) ProtoMessage() {}

func (x *OrderBy) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBy.ProtoReflect.Descriptor instead.
func (*OrderBy) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{4}
}

func (x *OrderBy) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *OrderBy) GetOrder() OrderTypeEnum {
	if x != nil {
		return x.Order
	}
	return OrderTypeEnum_ORDER_TYPE_UNKNOWN
}

type QueryCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filter      *Filter    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy     []*OrderBy `protobuf:"bytes,2,rep,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	PageNumber  int32      `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	RowsPerPage int32      `protobuf:"varint,4,opt,name=rows_per_page,json=rowsPerPage,proto3" json:"rows_per_page,omitempty"`
}

func (x *QueryCommand) Reset() {
	*x = QueryCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_query_command_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCommand) ProtoMessage() {}

func (x *QueryCommand) ProtoReflect() protoreflect.Message {
	mi := &file_message_query_command_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCommand.ProtoReflect.Descriptor instead.
func (*QueryCommand) Descriptor() ([]byte, []int) {
	return file_message_query_command_proto_rawDescGZIP(), []int{5}
}

func (x *QueryCommand) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *QueryCommand) GetOrderBy() []*OrderBy {
	if x != nil {
		return x.OrderBy
	}
	return nil
}

func (x *QueryCommand) GetPageNumber() int32 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *QueryCommand) GetRowsPerPage() int32 {
	if x != nil {
		return x.RowsPerPage
	}
	return 0
}

var File_message_query_command_proto protoreflect.FileDescriptor

var file_message_query_command_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x98, 0x02, 0x0a, 0x0a, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x2c,
	0x0a, 0x12, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x10,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x09, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x12, 0x41, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x0c, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0a, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x1a, 0x70, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x18, 0x70, 0x72, 0x65, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x70, 0x72,
	0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x06, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x56,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x27, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x2b, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x79, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x6f, 0x77, 0x73, 0x50, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x2a, 0xdc, 0x02, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x61, 0x74, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x45, 0x44,
	0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f,
	0x57, 0x4e, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x51, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50,
	0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x54,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45,
	0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x45, 0x10, 0x04,
	0x12, 0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x47, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x45, 0x44, 0x49,
	0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x54, 0x57, 0x45, 0x45,
	0x4e, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4c, 0x49, 0x4b, 0x45, 0x10, 0x07, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x45, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x09, 0x12,
	0x1e, 0x0a, 0x1a, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x0a, 0x12,
	0x15, 0x0a, 0x11, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x45, 0x44, 0x49, 0x43,
	0x41, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x10,
	0x0c, 0x2a, 0x59, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x4e, 0x4e, 0x45,
	0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x52, 0x10, 0x02, 0x2a, 0xa4, 0x01, 0x0a,
	0x12, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x1c, 0x0a, 0x18, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12,
	0x1a, 0x0a, 0x16, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x46,
	0x49, 0x45, 0x4c, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x49, 0x4d,
	0x45, 0x10, 0x04, 0x2a, 0x50, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x12, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x45, 0x53, 0x43, 0x10, 0x02, 0x42, 0x18, 0x5a, 0x16, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_query_command_proto_rawDescOnce sync.Once
	file_message_query_command_proto_rawDescData = file_message_query_command_proto_rawDesc
)

func file_message_query_command_proto_rawDescGZIP() []byte {
	file_message_query_command_proto_rawDescOnce.Do(func() {
		file_message_query_command_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_query_command_proto_rawDescData)
	})
	return file_message_query_command_proto_rawDescData
}

var file_message_query_command_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_message_query_command_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_message_query_command_proto_goTypes = []interface{}{
	(PredicateTypeEnum)(0),      // 0: message.PredicateTypeEnum
	(ConnectionTypeEnum)(0),     // 1: message.ConnectionTypeEnum
	(FieldValueTypeEnum)(0),     // 2: message.FieldValueTypeEnum
	(OrderTypeEnum)(0),          // 3: message.OrderTypeEnum
	(*FieldValue)(nil),          // 4: message.FieldValue
	(*Predicate)(nil),           // 5: message.Predicate
	(*Connection)(nil),          // 6: message.Connection
	(*Filter)(nil),              // 7: message.Filter
	(*OrderBy)(nil),             // 8: message.OrderBy
	(*QueryCommand)(nil),        // 9: message.QueryCommand
	(*timestamp.Timestamp)(nil), // 10: google.protobuf.Timestamp
}
var file_message_query_command_proto_depIdxs = []int32{
	2,  // 0: message.FieldValue.field_type:type_name -> message.FieldValueTypeEnum
	10, // 1: message.FieldValue.field_value_time:type_name -> google.protobuf.Timestamp
	0,  // 2: message.Predicate.predicate_type:type_name -> message.PredicateTypeEnum
	4,  // 3: message.Predicate.field_values:type_name -> message.FieldValue
	1,  // 4: message.Connection.predicates_connection_type:type_name -> message.ConnectionTypeEnum
	5,  // 5: message.Connection.predicates:type_name -> message.Predicate
	6,  // 6: message.Filter.connection:type_name -> message.Connection
	1,  // 7: message.Filter.connection_type:type_name -> message.ConnectionTypeEnum
	3,  // 8: message.OrderBy.order:type_name -> message.OrderTypeEnum
	7,  // 9: message.QueryCommand.filter:type_name -> message.Filter
	8,  // 10: message.QueryCommand.order_by:type_name -> message.OrderBy
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_message_query_command_proto_init() }
func file_message_query_command_proto_init() {
	if File_message_query_command_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_query_command_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_query_command_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Predicate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_query_command_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_query_command_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_query_command_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_query_command_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_query_command_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_query_command_proto_goTypes,
		DependencyIndexes: file_message_query_command_proto_depIdxs,
		EnumInfos:         file_message_query_command_proto_enumTypes,
		MessageInfos:      file_message_query_command_proto_msgTypes,
	}.Build()
	File_message_query_command_proto = out.File
	file_message_query_command_proto_rawDesc = nil
	file_message_query_command_proto_goTypes = nil
	file_message_query_command_proto_depIdxs = nil
}
