// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.7.0
// source: message/little_bee.proto

package littlebee

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignalDiValueEnum int32

const (
	SignalDiValueEnum_SIGNAL_DI_VALUE_0 SignalDiValueEnum = 0
	SignalDiValueEnum_SIGNAL_DI_VALUE_1 SignalDiValueEnum = 1
)

// Enum value maps for SignalDiValueEnum.
var (
	SignalDiValueEnum_name = map[int32]string{
		0: "SIGNAL_DI_VALUE_0",
		1: "SIGNAL_DI_VALUE_1",
	}
	SignalDiValueEnum_value = map[string]int32{
		"SIGNAL_DI_VALUE_0": 0,
		"SIGNAL_DI_VALUE_1": 1,
	}
)

func (x SignalDiValueEnum) Enum() *SignalDiValueEnum {
	p := new(SignalDiValueEnum)
	*p = x
	return p
}

func (x SignalDiValueEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalDiValueEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[0].Descriptor()
}

func (SignalDiValueEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[0]
}

func (x SignalDiValueEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalDiValueEnum.Descriptor instead.
func (SignalDiValueEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{0}
}

type SignalEventTypeEnum int32

const (
	SignalEventTypeEnum_SIGNAL_EVENT_TYPE_UNKNOWN SignalEventTypeEnum = 0
	SignalEventTypeEnum_SIGNAL_EVENT_TYPE_BEGIN   SignalEventTypeEnum = 1
	SignalEventTypeEnum_SIGNAL_EVENT_TYPE_END     SignalEventTypeEnum = 2
)

// Enum value maps for SignalEventTypeEnum.
var (
	SignalEventTypeEnum_name = map[int32]string{
		0: "SIGNAL_EVENT_TYPE_UNKNOWN",
		1: "SIGNAL_EVENT_TYPE_BEGIN",
		2: "SIGNAL_EVENT_TYPE_END",
	}
	SignalEventTypeEnum_value = map[string]int32{
		"SIGNAL_EVENT_TYPE_UNKNOWN": 0,
		"SIGNAL_EVENT_TYPE_BEGIN":   1,
		"SIGNAL_EVENT_TYPE_END":     2,
	}
)

func (x SignalEventTypeEnum) Enum() *SignalEventTypeEnum {
	p := new(SignalEventTypeEnum)
	*p = x
	return p
}

func (x SignalEventTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalEventTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[1].Descriptor()
}

func (SignalEventTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[1]
}

func (x SignalEventTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalEventTypeEnum.Descriptor instead.
func (SignalEventTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{1}
}

type SignalTypeEnum int32

const (
	SignalTypeEnum_SIGNAL_TYPE_UNKNOWN SignalTypeEnum = 0
	SignalTypeEnum_SIGNAL_TYPE_AI      SignalTypeEnum = 1
	SignalTypeEnum_SIGNAL_TYPE_DI      SignalTypeEnum = 2
	SignalTypeEnum_SIGNAL_TYPE_SI      SignalTypeEnum = 3
	SignalTypeEnum_SIGNAL_TYPE_AO      SignalTypeEnum = 4
	SignalTypeEnum_SIGNAL_TYPE_DO      SignalTypeEnum = 5
	SignalTypeEnum_SIGNAL_TYPE_SO      SignalTypeEnum = 6
	SignalTypeEnum_SIGNAL_TYPE_VAI     SignalTypeEnum = 7
	SignalTypeEnum_SIGNAL_TYPE_VDI     SignalTypeEnum = 8
	SignalTypeEnum_SIGNAL_TYPE_VSI     SignalTypeEnum = 9
	SignalTypeEnum_SIGNAL_TYPE_VIDEO   SignalTypeEnum = 10
)

// Enum value maps for SignalTypeEnum.
var (
	SignalTypeEnum_name = map[int32]string{
		0:  "SIGNAL_TYPE_UNKNOWN",
		1:  "SIGNAL_TYPE_AI",
		2:  "SIGNAL_TYPE_DI",
		3:  "SIGNAL_TYPE_SI",
		4:  "SIGNAL_TYPE_AO",
		5:  "SIGNAL_TYPE_DO",
		6:  "SIGNAL_TYPE_SO",
		7:  "SIGNAL_TYPE_VAI",
		8:  "SIGNAL_TYPE_VDI",
		9:  "SIGNAL_TYPE_VSI",
		10: "SIGNAL_TYPE_VIDEO",
	}
	SignalTypeEnum_value = map[string]int32{
		"SIGNAL_TYPE_UNKNOWN": 0,
		"SIGNAL_TYPE_AI":      1,
		"SIGNAL_TYPE_DI":      2,
		"SIGNAL_TYPE_SI":      3,
		"SIGNAL_TYPE_AO":      4,
		"SIGNAL_TYPE_DO":      5,
		"SIGNAL_TYPE_SO":      6,
		"SIGNAL_TYPE_VAI":     7,
		"SIGNAL_TYPE_VDI":     8,
		"SIGNAL_TYPE_VSI":     9,
		"SIGNAL_TYPE_VIDEO":   10,
	}
)

func (x SignalTypeEnum) Enum() *SignalTypeEnum {
	p := new(SignalTypeEnum)
	*p = x
	return p
}

func (x SignalTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[2].Descriptor()
}

func (SignalTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[2]
}

func (x SignalTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalTypeEnum.Descriptor instead.
func (SignalTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{2}
}

type SignalValueTypeEnum int32

const (
	SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN SignalValueTypeEnum = 0
	SignalValueTypeEnum_SIGNAL_VALUE_TYPE_ANALOG  SignalValueTypeEnum = 1
	SignalValueTypeEnum_SIGNAL_VALUE_TYPE_DIGITAL SignalValueTypeEnum = 2
	SignalValueTypeEnum_SIGNAL_VALUE_TYPE_STRING  SignalValueTypeEnum = 3
)

// Enum value maps for SignalValueTypeEnum.
var (
	SignalValueTypeEnum_name = map[int32]string{
		0: "SIGNAL_VALUE_TYPE_UNKNOWN",
		1: "SIGNAL_VALUE_TYPE_ANALOG",
		2: "SIGNAL_VALUE_TYPE_DIGITAL",
		3: "SIGNAL_VALUE_TYPE_STRING",
	}
	SignalValueTypeEnum_value = map[string]int32{
		"SIGNAL_VALUE_TYPE_UNKNOWN": 0,
		"SIGNAL_VALUE_TYPE_ANALOG":  1,
		"SIGNAL_VALUE_TYPE_DIGITAL": 2,
		"SIGNAL_VALUE_TYPE_STRING":  3,
	}
)

func (x SignalValueTypeEnum) Enum() *SignalValueTypeEnum {
	p := new(SignalValueTypeEnum)
	*p = x
	return p
}

func (x SignalValueTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalValueTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[3].Descriptor()
}

func (SignalValueTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[3]
}

func (x SignalValueTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalValueTypeEnum.Descriptor instead.
func (SignalValueTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{3}
}

type SignalValueStateEnum int32

const (
	SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN SignalValueStateEnum = 0
	SignalValueStateEnum_SIGNAL_VALUE_STATE_INVALID SignalValueStateEnum = 1
	SignalValueStateEnum_SIGNAL_VALUE_STATE_VALID   SignalValueStateEnum = 2
)

// Enum value maps for SignalValueStateEnum.
var (
	SignalValueStateEnum_name = map[int32]string{
		0: "SIGNAL_VALUE_STATE_UNKNOWN",
		1: "SIGNAL_VALUE_STATE_INVALID",
		2: "SIGNAL_VALUE_STATE_VALID",
	}
	SignalValueStateEnum_value = map[string]int32{
		"SIGNAL_VALUE_STATE_UNKNOWN": 0,
		"SIGNAL_VALUE_STATE_INVALID": 1,
		"SIGNAL_VALUE_STATE_VALID":   2,
	}
)

func (x SignalValueStateEnum) Enum() *SignalValueStateEnum {
	p := new(SignalValueStateEnum)
	*p = x
	return p
}

func (x SignalValueStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalValueStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[4].Descriptor()
}

func (SignalValueStateEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[4]
}

func (x SignalValueStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalValueStateEnum.Descriptor instead.
func (SignalValueStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{4}
}

type SignalRunStateEnum int32

const (
	SignalRunStateEnum_SIGNAL_RUN_STATE_UNKNOWN SignalRunStateEnum = 0
	SignalRunStateEnum_SIGNAL_RUN_STATE_NORMAL  SignalRunStateEnum = 1
	SignalRunStateEnum_SIGNAL_RUN_STATE_ALARM   SignalRunStateEnum = 2
)

// Enum value maps for SignalRunStateEnum.
var (
	SignalRunStateEnum_name = map[int32]string{
		0: "SIGNAL_RUN_STATE_UNKNOWN",
		1: "SIGNAL_RUN_STATE_NORMAL",
		2: "SIGNAL_RUN_STATE_ALARM",
	}
	SignalRunStateEnum_value = map[string]int32{
		"SIGNAL_RUN_STATE_UNKNOWN": 0,
		"SIGNAL_RUN_STATE_NORMAL":  1,
		"SIGNAL_RUN_STATE_ALARM":   2,
	}
)

func (x SignalRunStateEnum) Enum() *SignalRunStateEnum {
	p := new(SignalRunStateEnum)
	*p = x
	return p
}

func (x SignalRunStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalRunStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[5].Descriptor()
}

func (SignalRunStateEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[5]
}

func (x SignalRunStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalRunStateEnum.Descriptor instead.
func (SignalRunStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{5}
}

type AlarmAckStateEnum int32

const (
	AlarmAckStateEnum_ALARM_ACK_STATE_UNKNOWN     AlarmAckStateEnum = 0
	AlarmAckStateEnum_ALARM_ACK_STATE_CONFIRMED   AlarmAckStateEnum = 1
	AlarmAckStateEnum_ALARM_ACK_STATE_UNCONFIRMED AlarmAckStateEnum = 2
)

// Enum value maps for AlarmAckStateEnum.
var (
	AlarmAckStateEnum_name = map[int32]string{
		0: "ALARM_ACK_STATE_UNKNOWN",
		1: "ALARM_ACK_STATE_CONFIRMED",
		2: "ALARM_ACK_STATE_UNCONFIRMED",
	}
	AlarmAckStateEnum_value = map[string]int32{
		"ALARM_ACK_STATE_UNKNOWN":     0,
		"ALARM_ACK_STATE_CONFIRMED":   1,
		"ALARM_ACK_STATE_UNCONFIRMED": 2,
	}
)

func (x AlarmAckStateEnum) Enum() *AlarmAckStateEnum {
	p := new(AlarmAckStateEnum)
	*p = x
	return p
}

func (x AlarmAckStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AlarmAckStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[6].Descriptor()
}

func (AlarmAckStateEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[6]
}

func (x AlarmAckStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AlarmAckStateEnum.Descriptor instead.
func (AlarmAckStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{6}
}

type ControlCommandTypeEnum int32

const (
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_UNKNOWN  ControlCommandTypeEnum = 0
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_TRUN_ON  ControlCommandTypeEnum = 1
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_TRUN_OFF ControlCommandTypeEnum = 2
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_STRIKE   ControlCommandTypeEnum = 3
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_ANALOG   ControlCommandTypeEnum = 4
	ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_STRING   ControlCommandTypeEnum = 5
)

// Enum value maps for ControlCommandTypeEnum.
var (
	ControlCommandTypeEnum_name = map[int32]string{
		0: "CONTROL_COMMAND_TYPE_UNKNOWN",
		1: "CONTROL_COMMAND_TYPE_TRUN_ON",
		2: "CONTROL_COMMAND_TYPE_TRUN_OFF",
		3: "CONTROL_COMMAND_TYPE_STRIKE",
		4: "CONTROL_COMMAND_TYPE_ANALOG",
		5: "CONTROL_COMMAND_TYPE_STRING",
	}
	ControlCommandTypeEnum_value = map[string]int32{
		"CONTROL_COMMAND_TYPE_UNKNOWN":  0,
		"CONTROL_COMMAND_TYPE_TRUN_ON":  1,
		"CONTROL_COMMAND_TYPE_TRUN_OFF": 2,
		"CONTROL_COMMAND_TYPE_STRIKE":   3,
		"CONTROL_COMMAND_TYPE_ANALOG":   4,
		"CONTROL_COMMAND_TYPE_STRING":   5,
	}
)

func (x ControlCommandTypeEnum) Enum() *ControlCommandTypeEnum {
	p := new(ControlCommandTypeEnum)
	*p = x
	return p
}

func (x ControlCommandTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlCommandTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[7].Descriptor()
}

func (ControlCommandTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[7]
}

func (x ControlCommandTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlCommandTypeEnum.Descriptor instead.
func (ControlCommandTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{7}
}

type ControlCommandResultEnum int32

const (
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_UNKNOWN    ControlCommandResultEnum = 0
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_RECEIVED   ControlCommandResultEnum = 1
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_DELIVERING ControlCommandResultEnum = 2
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_RUNNING    ControlCommandResultEnum = 3
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_SUCCESS    ControlCommandResultEnum = 4
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_FAIL       ControlCommandResultEnum = 5
	ControlCommandResultEnum_CONTROL_COMMAND_RESULT_TIMEOUT    ControlCommandResultEnum = 6
)

// Enum value maps for ControlCommandResultEnum.
var (
	ControlCommandResultEnum_name = map[int32]string{
		0: "CONTROL_COMMAND_RESULT_UNKNOWN",
		1: "CONTROL_COMMAND_RESULT_RECEIVED",
		2: "CONTROL_COMMAND_RESULT_DELIVERING",
		3: "CONTROL_COMMAND_RESULT_RUNNING",
		4: "CONTROL_COMMAND_RESULT_SUCCESS",
		5: "CONTROL_COMMAND_RESULT_FAIL",
		6: "CONTROL_COMMAND_RESULT_TIMEOUT",
	}
	ControlCommandResultEnum_value = map[string]int32{
		"CONTROL_COMMAND_RESULT_UNKNOWN":    0,
		"CONTROL_COMMAND_RESULT_RECEIVED":   1,
		"CONTROL_COMMAND_RESULT_DELIVERING": 2,
		"CONTROL_COMMAND_RESULT_RUNNING":    3,
		"CONTROL_COMMAND_RESULT_SUCCESS":    4,
		"CONTROL_COMMAND_RESULT_FAIL":       5,
		"CONTROL_COMMAND_RESULT_TIMEOUT":    6,
	}
)

func (x ControlCommandResultEnum) Enum() *ControlCommandResultEnum {
	p := new(ControlCommandResultEnum)
	*p = x
	return p
}

func (x ControlCommandResultEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlCommandResultEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[8].Descriptor()
}

func (ControlCommandResultEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[8]
}

func (x ControlCommandResultEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlCommandResultEnum.Descriptor instead.
func (ControlCommandResultEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{8}
}

type ThresholdDirectionEnum int32

const (
	ThresholdDirectionEnum_THRESHOLD_DIRECTION_UNKNOWN ThresholdDirectionEnum = 0
	ThresholdDirectionEnum_THRESHOLD_DIRECTION_LESS    ThresholdDirectionEnum = 1
	ThresholdDirectionEnum_THRESHOLD_DIRECTION_GREAT   ThresholdDirectionEnum = 2
	ThresholdDirectionEnum_THRESHOLD_DIRECTION_EQUAL   ThresholdDirectionEnum = 3
)

// Enum value maps for ThresholdDirectionEnum.
var (
	ThresholdDirectionEnum_name = map[int32]string{
		0: "THRESHOLD_DIRECTION_UNKNOWN",
		1: "THRESHOLD_DIRECTION_LESS",
		2: "THRESHOLD_DIRECTION_GREAT",
		3: "THRESHOLD_DIRECTION_EQUAL",
	}
	ThresholdDirectionEnum_value = map[string]int32{
		"THRESHOLD_DIRECTION_UNKNOWN": 0,
		"THRESHOLD_DIRECTION_LESS":    1,
		"THRESHOLD_DIRECTION_GREAT":   2,
		"THRESHOLD_DIRECTION_EQUAL":   3,
	}
)

func (x ThresholdDirectionEnum) Enum() *ThresholdDirectionEnum {
	p := new(ThresholdDirectionEnum)
	*p = x
	return p
}

func (x ThresholdDirectionEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ThresholdDirectionEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[9].Descriptor()
}

func (ThresholdDirectionEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[9]
}

func (x ThresholdDirectionEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ThresholdDirectionEnum.Descriptor instead.
func (ThresholdDirectionEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{9}
}

type FsuDataParsingTypeEnum int32

const (
	FsuDataParsingTypeEnum_FSU_DATA_PARSING_TYPE_UNKNOWN FsuDataParsingTypeEnum = 0
	FsuDataParsingTypeEnum_FSU_DATA_PARSING_TYPE_BOTTOM  FsuDataParsingTypeEnum = 1
	FsuDataParsingTypeEnum_FSU_DATA_PARSING_TYPE_CENTER  FsuDataParsingTypeEnum = 2
)

// Enum value maps for FsuDataParsingTypeEnum.
var (
	FsuDataParsingTypeEnum_name = map[int32]string{
		0: "FSU_DATA_PARSING_TYPE_UNKNOWN",
		1: "FSU_DATA_PARSING_TYPE_BOTTOM",
		2: "FSU_DATA_PARSING_TYPE_CENTER",
	}
	FsuDataParsingTypeEnum_value = map[string]int32{
		"FSU_DATA_PARSING_TYPE_UNKNOWN": 0,
		"FSU_DATA_PARSING_TYPE_BOTTOM":  1,
		"FSU_DATA_PARSING_TYPE_CENTER":  2,
	}
)

func (x FsuDataParsingTypeEnum) Enum() *FsuDataParsingTypeEnum {
	p := new(FsuDataParsingTypeEnum)
	*p = x
	return p
}

func (x FsuDataParsingTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FsuDataParsingTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[10].Descriptor()
}

func (FsuDataParsingTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[10]
}

func (x FsuDataParsingTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FsuDataParsingTypeEnum.Descriptor instead.
func (FsuDataParsingTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{10}
}

type FsuRunStateEnum int32

const (
	FsuRunStateEnum_FSU_RUN_STATE_UNKNOWN      FsuRunStateEnum = 0
	FsuRunStateEnum_FSU_RUN_STATE_INITIALING   FsuRunStateEnum = 1
	FsuRunStateEnum_FSU_RUN_STATE_CONNECTING   FsuRunStateEnum = 2
	FsuRunStateEnum_FSU_RUN_STATE_CONNECTED    FsuRunStateEnum = 3
	FsuRunStateEnum_FSU_RUN_STATE_DISCONNECTED FsuRunStateEnum = 4
	FsuRunStateEnum_FSU_RUN_STATE_SERVING      FsuRunStateEnum = 5
	FsuRunStateEnum_FSU_RUN_STATE_STOPPED      FsuRunStateEnum = 6
)

// Enum value maps for FsuRunStateEnum.
var (
	FsuRunStateEnum_name = map[int32]string{
		0: "FSU_RUN_STATE_UNKNOWN",
		1: "FSU_RUN_STATE_INITIALING",
		2: "FSU_RUN_STATE_CONNECTING",
		3: "FSU_RUN_STATE_CONNECTED",
		4: "FSU_RUN_STATE_DISCONNECTED",
		5: "FSU_RUN_STATE_SERVING",
		6: "FSU_RUN_STATE_STOPPED",
	}
	FsuRunStateEnum_value = map[string]int32{
		"FSU_RUN_STATE_UNKNOWN":      0,
		"FSU_RUN_STATE_INITIALING":   1,
		"FSU_RUN_STATE_CONNECTING":   2,
		"FSU_RUN_STATE_CONNECTED":    3,
		"FSU_RUN_STATE_DISCONNECTED": 4,
		"FSU_RUN_STATE_SERVING":      5,
		"FSU_RUN_STATE_STOPPED":      6,
	}
)

func (x FsuRunStateEnum) Enum() *FsuRunStateEnum {
	p := new(FsuRunStateEnum)
	*p = x
	return p
}

func (x FsuRunStateEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FsuRunStateEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[11].Descriptor()
}

func (FsuRunStateEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[11]
}

func (x FsuRunStateEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FsuRunStateEnum.Descriptor instead.
func (FsuRunStateEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{11}
}

type SignalTreeObjectTypeEnum int32

const (
	SignalTreeObjectTypeEnum_SIGNAL_TREE_OBJECT_TYPE_UNKNOWN SignalTreeObjectTypeEnum = 0
	SignalTreeObjectTypeEnum_SIGNAL_TREE_OBJECT_TYPE_CENTER  SignalTreeObjectTypeEnum = 1
	SignalTreeObjectTypeEnum_SIGNAL_TREE_OBJECT_TYPE_AREA    SignalTreeObjectTypeEnum = 2
	SignalTreeObjectTypeEnum_SIGNAL_TREE_OBJECT_TYPE_DEVICE  SignalTreeObjectTypeEnum = 3
	SignalTreeObjectTypeEnum_SIGNAL_TREE_OBJECT_TYPE_SIGNAL  SignalTreeObjectTypeEnum = 4
)

// Enum value maps for SignalTreeObjectTypeEnum.
var (
	SignalTreeObjectTypeEnum_name = map[int32]string{
		0: "SIGNAL_TREE_OBJECT_TYPE_UNKNOWN",
		1: "SIGNAL_TREE_OBJECT_TYPE_CENTER",
		2: "SIGNAL_TREE_OBJECT_TYPE_AREA",
		3: "SIGNAL_TREE_OBJECT_TYPE_DEVICE",
		4: "SIGNAL_TREE_OBJECT_TYPE_SIGNAL",
	}
	SignalTreeObjectTypeEnum_value = map[string]int32{
		"SIGNAL_TREE_OBJECT_TYPE_UNKNOWN": 0,
		"SIGNAL_TREE_OBJECT_TYPE_CENTER":  1,
		"SIGNAL_TREE_OBJECT_TYPE_AREA":    2,
		"SIGNAL_TREE_OBJECT_TYPE_DEVICE":  3,
		"SIGNAL_TREE_OBJECT_TYPE_SIGNAL":  4,
	}
)

func (x SignalTreeObjectTypeEnum) Enum() *SignalTreeObjectTypeEnum {
	p := new(SignalTreeObjectTypeEnum)
	*p = x
	return p
}

func (x SignalTreeObjectTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignalTreeObjectTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[12].Descriptor()
}

func (SignalTreeObjectTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[12]
}

func (x SignalTreeObjectTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignalTreeObjectTypeEnum.Descriptor instead.
func (SignalTreeObjectTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{12}
}

type AgentObjectTypeEnum int32

const (
	AgentObjectTypeEnum_AGENT_OBJECT_TYPE_SURVEILLANCE_CENTER AgentObjectTypeEnum = 0
	AgentObjectTypeEnum_AGENT_OBJECT_TYPE_AGENT               AgentObjectTypeEnum = 1
	AgentObjectTypeEnum_AGENT_OBJECT_TYPE_FSU                 AgentObjectTypeEnum = 2
	AgentObjectTypeEnum_AGENT_OBJECT_TYPE_DRIVER              AgentObjectTypeEnum = 3
)

// Enum value maps for AgentObjectTypeEnum.
var (
	AgentObjectTypeEnum_name = map[int32]string{
		0: "AGENT_OBJECT_TYPE_SURVEILLANCE_CENTER",
		1: "AGENT_OBJECT_TYPE_AGENT",
		2: "AGENT_OBJECT_TYPE_FSU",
		3: "AGENT_OBJECT_TYPE_DRIVER",
	}
	AgentObjectTypeEnum_value = map[string]int32{
		"AGENT_OBJECT_TYPE_SURVEILLANCE_CENTER": 0,
		"AGENT_OBJECT_TYPE_AGENT":               1,
		"AGENT_OBJECT_TYPE_FSU":                 2,
		"AGENT_OBJECT_TYPE_DRIVER":              3,
	}
)

func (x AgentObjectTypeEnum) Enum() *AgentObjectTypeEnum {
	p := new(AgentObjectTypeEnum)
	*p = x
	return p
}

func (x AgentObjectTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentObjectTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[13].Descriptor()
}

func (AgentObjectTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[13]
}

func (x AgentObjectTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentObjectTypeEnum.Descriptor instead.
func (AgentObjectTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{13}
}

type MetadataAttributeTypeEnum int32

const (
	MetadataAttributeTypeEnum_METADATA_ATTRIBUTE_TYPE_UNKNOWN MetadataAttributeTypeEnum = 0
	MetadataAttributeTypeEnum_METADATA_ATTRIBUTE_TYPE_SIMPLE  MetadataAttributeTypeEnum = 1
	MetadataAttributeTypeEnum_METADATA_ATTRIBUTE_TYPE_ARRAY   MetadataAttributeTypeEnum = 2
	MetadataAttributeTypeEnum_METADATA_ATTRIBUTE_TYPE_ENUM    MetadataAttributeTypeEnum = 3
)

// Enum value maps for MetadataAttributeTypeEnum.
var (
	MetadataAttributeTypeEnum_name = map[int32]string{
		0: "METADATA_ATTRIBUTE_TYPE_UNKNOWN",
		1: "METADATA_ATTRIBUTE_TYPE_SIMPLE",
		2: "METADATA_ATTRIBUTE_TYPE_ARRAY",
		3: "METADATA_ATTRIBUTE_TYPE_ENUM",
	}
	MetadataAttributeTypeEnum_value = map[string]int32{
		"METADATA_ATTRIBUTE_TYPE_UNKNOWN": 0,
		"METADATA_ATTRIBUTE_TYPE_SIMPLE":  1,
		"METADATA_ATTRIBUTE_TYPE_ARRAY":   2,
		"METADATA_ATTRIBUTE_TYPE_ENUM":    3,
	}
)

func (x MetadataAttributeTypeEnum) Enum() *MetadataAttributeTypeEnum {
	p := new(MetadataAttributeTypeEnum)
	*p = x
	return p
}

func (x MetadataAttributeTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataAttributeTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[14].Descriptor()
}

func (MetadataAttributeTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[14]
}

func (x MetadataAttributeTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataAttributeTypeEnum.Descriptor instead.
func (MetadataAttributeTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{14}
}

type MetadataValueTypeEnum int32

const (
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_UNKNOWN MetadataValueTypeEnum = 0
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_INT     MetadataValueTypeEnum = 1
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_LONG    MetadataValueTypeEnum = 2
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_FLOAT   MetadataValueTypeEnum = 3
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_DOUBLE  MetadataValueTypeEnum = 4
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_STRING  MetadataValueTypeEnum = 5
	MetadataValueTypeEnum_METADATA_VALUE_TYPE_BOOLEAN MetadataValueTypeEnum = 6
)

// Enum value maps for MetadataValueTypeEnum.
var (
	MetadataValueTypeEnum_name = map[int32]string{
		0: "METADATA_VALUE_TYPE_UNKNOWN",
		1: "METADATA_VALUE_TYPE_INT",
		2: "METADATA_VALUE_TYPE_LONG",
		3: "METADATA_VALUE_TYPE_FLOAT",
		4: "METADATA_VALUE_TYPE_DOUBLE",
		5: "METADATA_VALUE_TYPE_STRING",
		6: "METADATA_VALUE_TYPE_BOOLEAN",
	}
	MetadataValueTypeEnum_value = map[string]int32{
		"METADATA_VALUE_TYPE_UNKNOWN": 0,
		"METADATA_VALUE_TYPE_INT":     1,
		"METADATA_VALUE_TYPE_LONG":    2,
		"METADATA_VALUE_TYPE_FLOAT":   3,
		"METADATA_VALUE_TYPE_DOUBLE":  4,
		"METADATA_VALUE_TYPE_STRING":  5,
		"METADATA_VALUE_TYPE_BOOLEAN": 6,
	}
)

func (x MetadataValueTypeEnum) Enum() *MetadataValueTypeEnum {
	p := new(MetadataValueTypeEnum)
	*p = x
	return p
}

func (x MetadataValueTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MetadataValueTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_message_little_bee_proto_enumTypes[15].Descriptor()
}

func (MetadataValueTypeEnum) Type() protoreflect.EnumType {
	return &file_message_little_bee_proto_enumTypes[15]
}

func (x MetadataValueTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MetadataValueTypeEnum.Descriptor instead.
func (MetadataValueTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{15}
}

type EnumValueItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"enumValueItemName"
	EnumValueItemName string `protobuf:"bytes,1,opt,name=enum_value_item_name,json=enumValueItemName,proto3" json:"enumValueItemName"`
	//@gotags: json:"enumValueItemAlias"
	EnumValueItemAlias string `protobuf:"bytes,2,opt,name=enum_value_item_alias,json=enumValueItemAlias,proto3" json:"enumValueItemAlias"`
	//@gotags: json:"enumValueItemValue"
	EnumValueItemValue string `protobuf:"bytes,3,opt,name=enum_value_item_value,json=enumValueItemValue,proto3" json:"enumValueItemValue"`
}

func (x *EnumValueItem) Reset() {
	*x = EnumValueItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValueItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValueItem) ProtoMessage() {}

func (x *EnumValueItem) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValueItem.ProtoReflect.Descriptor instead.
func (*EnumValueItem) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{0}
}

func (x *EnumValueItem) GetEnumValueItemName() string {
	if x != nil {
		return x.EnumValueItemName
	}
	return ""
}

func (x *EnumValueItem) GetEnumValueItemAlias() string {
	if x != nil {
		return x.EnumValueItemAlias
	}
	return ""
}

func (x *EnumValueItem) GetEnumValueItemValue() string {
	if x != nil {
		return x.EnumValueItemValue
	}
	return ""
}

type MetadataAttribute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"metadataAttributeName"
	MetadataAttributeName string `protobuf:"bytes,1,opt,name=metadata_attribute_name,json=metadataAttributeName,proto3" json:"metadataAttributeName"`
	//@gotags: json:"metadataAttributeAlias"
	MetadataAttributeAlias string `protobuf:"bytes,2,opt,name=metadata_attribute_alias,json=metadataAttributeAlias,proto3" json:"metadataAttributeAlias"`
	//@gotags: json:"metadataAttributeTypeEnum"
	MetadataAttributeType MetadataAttributeTypeEnum `protobuf:"varint,3,opt,name=metadata_attribute_type,json=metadataAttributeType,proto3,enum=message.MetadataAttributeTypeEnum" json:"metadataAttributeTypeEnum"`
	//@gotags: json:"metadataValueTypeEnum"
	MetadataValueType MetadataValueTypeEnum `protobuf:"varint,4,opt,name=metadata_value_type,json=metadataValueType,proto3,enum=message.MetadataValueTypeEnum" json:"metadataValueTypeEnum"`
	//@gotags: json:"enumValueItem"
	EnumValueItem []*EnumValueItem `protobuf:"bytes,5,rep,name=enum_value_item,json=enumValueItem,proto3" json:"enumValueItem"`
	//@gotags: json:"metadataAttributeValue"
	MetadataAttributeValue string `protobuf:"bytes,6,opt,name=metadata_attribute_value,json=metadataAttributeValue,proto3" json:"metadataAttributeValue"`
	//@gotags: json:"metadataAttributeArrayValue"
	MetadataAttributeArrayValue []string `protobuf:"bytes,7,rep,name=metadata_attribute_array_value,json=metadataAttributeArrayValue,proto3" json:"metadataAttributeArrayValue"`
	//@gotags: json:"metadataAttributeInputValue"
	MetadataAttributeInputValue string `protobuf:"bytes,8,opt,name=metadata_attribute_input_value,json=metadataAttributeInputValue,proto3" json:"metadataAttributeInputValue"`
}

func (x *MetadataAttribute) Reset() {
	*x = MetadataAttribute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataAttribute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataAttribute) ProtoMessage() {}

func (x *MetadataAttribute) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataAttribute.ProtoReflect.Descriptor instead.
func (*MetadataAttribute) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataAttribute) GetMetadataAttributeName() string {
	if x != nil {
		return x.MetadataAttributeName
	}
	return ""
}

func (x *MetadataAttribute) GetMetadataAttributeAlias() string {
	if x != nil {
		return x.MetadataAttributeAlias
	}
	return ""
}

func (x *MetadataAttribute) GetMetadataAttributeType() MetadataAttributeTypeEnum {
	if x != nil {
		return x.MetadataAttributeType
	}
	return MetadataAttributeTypeEnum_METADATA_ATTRIBUTE_TYPE_UNKNOWN
}

func (x *MetadataAttribute) GetMetadataValueType() MetadataValueTypeEnum {
	if x != nil {
		return x.MetadataValueType
	}
	return MetadataValueTypeEnum_METADATA_VALUE_TYPE_UNKNOWN
}

func (x *MetadataAttribute) GetEnumValueItem() []*EnumValueItem {
	if x != nil {
		return x.EnumValueItem
	}
	return nil
}

func (x *MetadataAttribute) GetMetadataAttributeValue() string {
	if x != nil {
		return x.MetadataAttributeValue
	}
	return ""
}

func (x *MetadataAttribute) GetMetadataAttributeArrayValue() []string {
	if x != nil {
		return x.MetadataAttributeArrayValue
	}
	return nil
}

func (x *MetadataAttribute) GetMetadataAttributeInputValue() string {
	if x != nil {
		return x.MetadataAttributeInputValue
	}
	return ""
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"metadataId" gorm:"primary_key;AUTO_INCREMENT" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,1,opt,name=metadata_id,json=metadataId,proto3" json:"metadataId" gorm:"primary_key;AUTO_INCREMENT" structs:"metadata_id"`
	//@gotags: json:"metadataName" structs:"metadata_name"
	MetadataName string `protobuf:"bytes,2,opt,name=metadata_name,json=metadataName,proto3" json:"metadataName" structs:"metadata_name"`
	//@gotags: json:"metadataAlias" structs:"metadata_alias"
	MetadataAlias string `protobuf:"bytes,3,opt,name=metadata_alias,json=metadataAlias,proto3" json:"metadataAlias" structs:"metadata_alias"`
	//@gotags: json:"metadataAttributeJson" structs:"metadata_attribute_json"
	MetadataAttributeJson string `protobuf:"bytes,4,opt,name=metadata_attribute_json,json=metadataAttributeJson,proto3" json:"metadataAttributeJson" structs:"metadata_attribute_json"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,6,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,8,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,11,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *Metadata) GetMetadataName() string {
	if x != nil {
		return x.MetadataName
	}
	return ""
}

func (x *Metadata) GetMetadataAlias() string {
	if x != nil {
		return x.MetadataAlias
	}
	return ""
}

func (x *Metadata) GetMetadataAttributeJson() string {
	if x != nil {
		return x.MetadataAttributeJson
	}
	return ""
}

func (x *Metadata) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Metadata) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Metadata) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Metadata) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Metadata) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Metadata) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Metadata) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type MetadataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Metadata `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MetadataList) Reset() {
	*x = MetadataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataList) ProtoMessage() {}

func (x *MetadataList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataList.ProtoReflect.Descriptor instead.
func (*MetadataList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{3}
}

func (x *MetadataList) GetItems() []*Metadata {
	if x != nil {
		return x.Items
	}
	return nil
}

type Configure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"configureId" gorm:"primary_key;AUTO_INCREMENT" structs:"configure_id"
	ConfigureId int32 `protobuf:"varint,1,opt,name=configure_id,json=configureId,proto3" json:"configureId" gorm:"primary_key;AUTO_INCREMENT" structs:"configure_id"`
	//@gotags: json:"metadataId" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,2,opt,name=metadata_id,json=metadataId,proto3" json:"metadataId" structs:"metadata_id"`
	//@gotags: json:"configureJson" structs:"configure_json"
	ConfigureJson string `protobuf:"bytes,3,opt,name=configure_json,json=configureJson,proto3" json:"configureJson" structs:"configure_json"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,6,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,8,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,11,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Configure) Reset() {
	*x = Configure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Configure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Configure) ProtoMessage() {}

func (x *Configure) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Configure.ProtoReflect.Descriptor instead.
func (*Configure) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{4}
}

func (x *Configure) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *Configure) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *Configure) GetConfigureJson() string {
	if x != nil {
		return x.ConfigureJson
	}
	return ""
}

func (x *Configure) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Configure) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Configure) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Configure) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Configure) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Configure) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Configure) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type ConfigureList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Configure `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ConfigureList) Reset() {
	*x = ConfigureList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureList) ProtoMessage() {}

func (x *ConfigureList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureList.ProtoReflect.Descriptor instead.
func (*ConfigureList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureList) GetItems() []*Configure {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalIdsList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalIds []int32 `protobuf:"varint,1,rep,packed,name=signal_ids,json=signalIds,proto3" json:"signal_ids,omitempty"`
}

func (x *SignalIdsList) Reset() {
	*x = SignalIdsList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalIdsList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalIdsList) ProtoMessage() {}

func (x *SignalIdsList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalIdsList.ProtoReflect.Descriptor instead.
func (*SignalIdsList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{6}
}

func (x *SignalIdsList) GetSignalIds() []int32 {
	if x != nil {
		return x.SignalIds
	}
	return nil
}

type SignalRawEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalId              int32                `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	SignalName            string               `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	SignalType            SignalTypeEnum       `protobuf:"varint,3,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signal_type,omitempty"`
	EventOccurredTime     *timestamp.Timestamp `protobuf:"bytes,4,opt,name=event_occurred_time,json=eventOccurredTime,proto3" json:"event_occurred_time,omitempty"`
	EventDesc             string               `protobuf:"bytes,5,opt,name=event_desc,json=eventDesc,proto3" json:"event_desc,omitempty"`
	SignalEventType       SignalEventTypeEnum  `protobuf:"varint,6,opt,name=signal_event_type,json=signalEventType,proto3,enum=message.SignalEventTypeEnum" json:"signal_event_type,omitempty"`
	AlarmBeginTime        *timestamp.Timestamp `protobuf:"bytes,7,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarm_begin_time,omitempty"`
	SignalValueState      SignalValueStateEnum `protobuf:"varint,8,opt,name=signal_value_state,json=signalValueState,proto3,enum=message.SignalValueStateEnum" json:"signal_value_state,omitempty"`
	SignalRunState        SignalRunStateEnum   `protobuf:"varint,9,opt,name=signal_run_state,json=signalRunState,proto3,enum=message.SignalRunStateEnum" json:"signal_run_state,omitempty"`
	AlarmLevelNumber      int32                `protobuf:"varint,10,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarm_level_number,omitempty"`
	AlarmThreshholdNumber int32                `protobuf:"varint,11,opt,name=alarm_threshhold_number,json=alarmThreshholdNumber,proto3" json:"alarm_threshhold_number,omitempty"`
	SignalValueType       SignalValueTypeEnum  `protobuf:"varint,12,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signal_value_type,omitempty"`
	DigitalValue          int32                `protobuf:"varint,13,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue           float64              `protobuf:"fixed64,14,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	ValueUnit             string               `protobuf:"bytes,15,opt,name=value_unit,json=valueUnit,proto3" json:"value_unit,omitempty"`
	StringValue           string               `protobuf:"bytes,16,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *SignalRawEvent) Reset() {
	*x = SignalRawEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRawEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRawEvent) ProtoMessage() {}

func (x *SignalRawEvent) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRawEvent.ProtoReflect.Descriptor instead.
func (*SignalRawEvent) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{7}
}

func (x *SignalRawEvent) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalRawEvent) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *SignalRawEvent) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *SignalRawEvent) GetEventOccurredTime() *timestamp.Timestamp {
	if x != nil {
		return x.EventOccurredTime
	}
	return nil
}

func (x *SignalRawEvent) GetEventDesc() string {
	if x != nil {
		return x.EventDesc
	}
	return ""
}

func (x *SignalRawEvent) GetSignalEventType() SignalEventTypeEnum {
	if x != nil {
		return x.SignalEventType
	}
	return SignalEventTypeEnum_SIGNAL_EVENT_TYPE_UNKNOWN
}

func (x *SignalRawEvent) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *SignalRawEvent) GetSignalValueState() SignalValueStateEnum {
	if x != nil {
		return x.SignalValueState
	}
	return SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN
}

func (x *SignalRawEvent) GetSignalRunState() SignalRunStateEnum {
	if x != nil {
		return x.SignalRunState
	}
	return SignalRunStateEnum_SIGNAL_RUN_STATE_UNKNOWN
}

func (x *SignalRawEvent) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *SignalRawEvent) GetAlarmThreshholdNumber() int32 {
	if x != nil {
		return x.AlarmThreshholdNumber
	}
	return 0
}

func (x *SignalRawEvent) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *SignalRawEvent) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *SignalRawEvent) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *SignalRawEvent) GetValueUnit() string {
	if x != nil {
		return x.ValueUnit
	}
	return ""
}

func (x *SignalRawEvent) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

type SignalCurrentStata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalId              int32                `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	SignalValueState      SignalValueStateEnum `protobuf:"varint,2,opt,name=signal_value_state,json=signalValueState,proto3,enum=message.SignalValueStateEnum" json:"signal_value_state,omitempty"`
	SignalRunState        SignalRunStateEnum   `protobuf:"varint,3,opt,name=signal_run_state,json=signalRunState,proto3,enum=message.SignalRunStateEnum" json:"signal_run_state,omitempty"`
	AlarmThreshholdNumber int32                `protobuf:"varint,4,opt,name=alarm_threshhold_number,json=alarmThreshholdNumber,proto3" json:"alarm_threshhold_number,omitempty"`
	AlarmBeginTime        *timestamp.Timestamp `protobuf:"bytes,5,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarm_begin_time,omitempty"`
	AlarmLevelNumber      int32                `protobuf:"varint,6,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarm_level_number,omitempty"`
}

func (x *SignalCurrentStata) Reset() {
	*x = SignalCurrentStata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalCurrentStata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalCurrentStata) ProtoMessage() {}

func (x *SignalCurrentStata) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalCurrentStata.ProtoReflect.Descriptor instead.
func (*SignalCurrentStata) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{8}
}

func (x *SignalCurrentStata) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalCurrentStata) GetSignalValueState() SignalValueStateEnum {
	if x != nil {
		return x.SignalValueState
	}
	return SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN
}

func (x *SignalCurrentStata) GetSignalRunState() SignalRunStateEnum {
	if x != nil {
		return x.SignalRunState
	}
	return SignalRunStateEnum_SIGNAL_RUN_STATE_UNKNOWN
}

func (x *SignalCurrentStata) GetAlarmThreshholdNumber() int32 {
	if x != nil {
		return x.AlarmThreshholdNumber
	}
	return 0
}

func (x *SignalCurrentStata) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *SignalCurrentStata) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

type SignalRealValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalId              int32                `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	SignalUnificationId   int32                `protobuf:"varint,2,opt,name=signal_unification_id,json=signalUnificationId,proto3" json:"signal_unification_id,omitempty"`
	SignalName            string               `protobuf:"bytes,3,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	SignalType            SignalTypeEnum       `protobuf:"varint,4,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signal_type,omitempty"`
	SignalValueState      SignalValueStateEnum `protobuf:"varint,5,opt,name=signal_value_state,json=signalValueState,proto3,enum=message.SignalValueStateEnum" json:"signal_value_state,omitempty"`
	SignalRunState        SignalRunStateEnum   `protobuf:"varint,6,opt,name=signal_run_state,json=signalRunState,proto3,enum=message.SignalRunStateEnum" json:"signal_run_state,omitempty"`
	AlarmThreshholdNumber int32                `protobuf:"varint,7,opt,name=alarm_threshhold_number,json=alarmThreshholdNumber,proto3" json:"alarm_threshhold_number,omitempty"`
	AlarmLevelNumber      int32                `protobuf:"varint,8,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarm_level_number,omitempty"`
	ValueOccurredTime     *timestamp.Timestamp `protobuf:"bytes,9,opt,name=value_occurred_time,json=valueOccurredTime,proto3" json:"value_occurred_time,omitempty"`
	SignalValueType       SignalValueTypeEnum  `protobuf:"varint,10,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signal_value_type,omitempty"`
	DigitalValue          int32                `protobuf:"varint,11,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue           float64              `protobuf:"fixed64,12,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	ValueUnit             string               `protobuf:"bytes,13,opt,name=value_unit,json=valueUnit,proto3" json:"value_unit,omitempty"`
	DecimalPrecision      int32                `protobuf:"varint,14,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimal_precision,omitempty"`
	StringValue           string               `protobuf:"bytes,15,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	DigitalValueDesc      string               `protobuf:"bytes,16,opt,name=digital_value_desc,json=digitalValueDesc,proto3" json:"digital_value_desc,omitempty"`
}

func (x *SignalRealValue) Reset() {
	*x = SignalRealValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRealValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRealValue) ProtoMessage() {}

func (x *SignalRealValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRealValue.ProtoReflect.Descriptor instead.
func (*SignalRealValue) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{9}
}

func (x *SignalRealValue) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalRealValue) GetSignalUnificationId() int32 {
	if x != nil {
		return x.SignalUnificationId
	}
	return 0
}

func (x *SignalRealValue) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *SignalRealValue) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *SignalRealValue) GetSignalValueState() SignalValueStateEnum {
	if x != nil {
		return x.SignalValueState
	}
	return SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN
}

func (x *SignalRealValue) GetSignalRunState() SignalRunStateEnum {
	if x != nil {
		return x.SignalRunState
	}
	return SignalRunStateEnum_SIGNAL_RUN_STATE_UNKNOWN
}

func (x *SignalRealValue) GetAlarmThreshholdNumber() int32 {
	if x != nil {
		return x.AlarmThreshholdNumber
	}
	return 0
}

func (x *SignalRealValue) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *SignalRealValue) GetValueOccurredTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValueOccurredTime
	}
	return nil
}

func (x *SignalRealValue) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *SignalRealValue) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *SignalRealValue) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *SignalRealValue) GetValueUnit() string {
	if x != nil {
		return x.ValueUnit
	}
	return ""
}

func (x *SignalRealValue) GetDecimalPrecision() int32 {
	if x != nil {
		return x.DecimalPrecision
	}
	return 0
}

func (x *SignalRealValue) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

func (x *SignalRealValue) GetDigitalValueDesc() string {
	if x != nil {
		return x.DigitalValueDesc
	}
	return ""
}

type SignalRealValueList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalRealValue `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalRealValueList) Reset() {
	*x = SignalRealValueList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRealValueList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRealValueList) ProtoMessage() {}

func (x *SignalRealValueList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRealValueList.ProtoReflect.Descriptor instead.
func (*SignalRealValueList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{10}
}

func (x *SignalRealValueList) GetItems() []*SignalRealValue {
	if x != nil {
		return x.Items
	}
	return nil
}

type AlarmLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"alarmLevelId" gorm:"primary_key;AUTO_INCREMENT" structs:"alarm_level_id"
	AlarmLevelId int32 `protobuf:"varint,1,opt,name=alarm_level_id,json=alarmLevelId,proto3" json:"alarmLevelId" gorm:"primary_key;AUTO_INCREMENT" structs:"alarm_level_id"`
	//@gotags: json:"alarmLevelNumber" structs:"alarm_level_number"
	AlarmLevelNumber int32 `protobuf:"varint,2,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarmLevelNumber" structs:"alarm_level_number"`
	//@gotags: json:"alarmLevelName" structs:"alarm_level_name"
	AlarmLevelName string `protobuf:"bytes,3,opt,name=alarm_level_name,json=alarmLevelName,proto3" json:"alarmLevelName" structs:"alarm_level_name"`
	//@gotags: json:"alarmLevelAlias" structs:"alarm_level_alias"
	AlarmLevelAlias string `protobuf:"bytes,4,opt,name=alarm_level_alias,json=alarmLevelAlias,proto3" json:"alarmLevelAlias" structs:"alarm_level_alias"`
	//@gotags: json:"alarmLevelNote" structs:"alarm_level_note"
	AlarmLevelNote string `protobuf:"bytes,5,opt,name=alarm_level_note,json=alarmLevelNote,proto3" json:"alarmLevelNote" structs:"alarm_level_note"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,7,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,9,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,12,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *AlarmLevel) Reset() {
	*x = AlarmLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLevel) ProtoMessage() {}

func (x *AlarmLevel) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLevel.ProtoReflect.Descriptor instead.
func (*AlarmLevel) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{11}
}

func (x *AlarmLevel) GetAlarmLevelId() int32 {
	if x != nil {
		return x.AlarmLevelId
	}
	return 0
}

func (x *AlarmLevel) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *AlarmLevel) GetAlarmLevelName() string {
	if x != nil {
		return x.AlarmLevelName
	}
	return ""
}

func (x *AlarmLevel) GetAlarmLevelAlias() string {
	if x != nil {
		return x.AlarmLevelAlias
	}
	return ""
}

func (x *AlarmLevel) GetAlarmLevelNote() string {
	if x != nil {
		return x.AlarmLevelNote
	}
	return ""
}

func (x *AlarmLevel) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AlarmLevel) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AlarmLevel) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AlarmLevel) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AlarmLevel) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AlarmLevel) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *AlarmLevel) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type AlarmLevelList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AlarmLevel `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlarmLevelList) Reset() {
	*x = AlarmLevelList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmLevelList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmLevelList) ProtoMessage() {}

func (x *AlarmLevelList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmLevelList.ProtoReflect.Descriptor instead.
func (*AlarmLevelList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{12}
}

func (x *AlarmLevelList) GetItems() []*AlarmLevel {
	if x != nil {
		return x.Items
	}
	return nil
}

type Alarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"alarmSerialNumber" gorm:"primary_key;" structs:"alarm_serial_number"
	AlarmSerialNumber string `protobuf:"bytes,1,opt,name=alarm_serial_number,json=alarmSerialNumber,proto3" json:"alarmSerialNumber" gorm:"primary_key;" structs:"alarm_serial_number"`
	//@gotags: json:"signalId" structs:"signal_id"
	SignalId int32 `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signalId" structs:"signal_id"`
	//@gotags: json:"signalName" structs:"signal_name"
	SignalName string `protobuf:"bytes,3,opt,name=signal_name,json=signalName,proto3" json:"signalName" structs:"signal_name"`
	//@gotags: json:"signalType" structs:"signal_type"
	SignalType SignalTypeEnum `protobuf:"varint,4,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signalType" structs:"signal_type"`
	//@gotags: json:"alarmBeginTime" gorm:"serializer:pbtimestamp;type:time" structs:"alarm_begin_time"
	AlarmBeginTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarmBeginTime" gorm:"serializer:pbtimestamp;type:time" structs:"alarm_begin_time"`
	//@gotags: json:"alarmEndTime" gorm:"serializer:pbtimestamp;type:time" structs:"alarm_end_time"
	AlarmEndTime *timestamp.Timestamp `protobuf:"bytes,6,opt,name=alarm_end_time,json=alarmEndTime,proto3" json:"alarmEndTime" gorm:"serializer:pbtimestamp;type:time" structs:"alarm_end_time"`
	//@gotags: json:"deviceLocation" structs:"device_location"
	DeviceLocation string `protobuf:"bytes,7,opt,name=device_location,json=deviceLocation,proto3" json:"deviceLocation" structs:"device_location"`
	//@gotags: json:"deviceName" structs:"device_name"
	DeviceName string `protobuf:"bytes,8,opt,name=device_name,json=deviceName,proto3" json:"deviceName" structs:"device_name"`
	//@gotags: json:"deviceTypeId" structs:"device_type_id"
	DeviceTypeId int32 `protobuf:"varint,9,opt,name=device_type_id,json=deviceTypeId,proto3" json:"deviceTypeId" structs:"device_type_id"`
	//@gotags: json:"alarmDesc" structs:"alarm_desc"
	AlarmDesc string `protobuf:"bytes,10,opt,name=alarm_desc,json=alarmDesc,proto3" json:"alarmDesc" structs:"alarm_desc"`
	//@gotags: json:"alarmLevelNumber" structs:"alarm_level_number"
	AlarmLevelNumber int32 `protobuf:"varint,11,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarmLevelNumber" structs:"alarm_level_number"`
	//@gotags: json:"alarmThreshholdNumber" structs:"alarm_threshhold_number"
	AlarmThreshholdNumber int32 `protobuf:"varint,12,opt,name=alarm_threshhold_number,json=alarmThreshholdNumber,proto3" json:"alarmThreshholdNumber" structs:"alarm_threshhold_number"`
	//@gotags: json:"signalValueType" structs:"signal_value_type"
	SignalValueType SignalValueTypeEnum `protobuf:"varint,13,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signalValueType" structs:"signal_value_type"`
	//@gotags: json:"occurredDigitalValue" structs:"occurred_digital_value"
	OccurredDigitalValue int32 `protobuf:"varint,14,opt,name=occurred_digital_value,json=occurredDigitalValue,proto3" json:"occurredDigitalValue" structs:"occurred_digital_value"`
	//@gotags: json:"occurredAnalogValue" structs:"occurred_analog_value"
	OccurredAnalogValue float64 `protobuf:"fixed64,15,opt,name=occurred_analog_value,json=occurredAnalogValue,proto3" json:"occurredAnalogValue" structs:"occurred_analog_value"`
	//@gotags: json:"valueUnit" structs:"value_unit"
	ValueUnit string `protobuf:"bytes,16,opt,name=value_unit,json=valueUnit,proto3" json:"valueUnit" structs:"value_unit"`
	//@gotags: json:"occurredStringValue" structs:"occurred_string_value"
	OccurredStringValue string `protobuf:"bytes,17,opt,name=occurred_string_value,json=occurredStringValue,proto3" json:"occurredStringValue" structs:"occurred_string_value"`
	//@gotags: json:"ackState" structs:"ack_state"
	AckState AlarmAckStateEnum `protobuf:"varint,18,opt,name=ack_state,json=ackState,proto3,enum=message.AlarmAckStateEnum" json:"ackState" structs:"ack_state"`
	//@gotags: json:"ackTime" gorm:"serializer:pbtimestamp;type:time" structs:"ack_time"
	AckTime *timestamp.Timestamp `protobuf:"bytes,19,opt,name=ack_time,json=ackTime,proto3" json:"ackTime" gorm:"serializer:pbtimestamp;type:time" structs:"ack_time"`
	//@gotags: json:"ackUserId" structs:"ack_user_id"
	AckUserId int32 `protobuf:"varint,20,opt,name=ack_user_id,json=ackUserId,proto3" json:"ackUserId" structs:"ack_user_id"`
	//@gotags: json:"ackUserName" structs:"ack_user_name"
	AckUserName string `protobuf:"bytes,21,opt,name=ack_user_name,json=ackUserName,proto3" json:"ackUserName" structs:"ack_user_name"`
}

func (x *Alarm) Reset() {
	*x = Alarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Alarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Alarm) ProtoMessage() {}

func (x *Alarm) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Alarm.ProtoReflect.Descriptor instead.
func (*Alarm) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{13}
}

func (x *Alarm) GetAlarmSerialNumber() string {
	if x != nil {
		return x.AlarmSerialNumber
	}
	return ""
}

func (x *Alarm) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *Alarm) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *Alarm) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *Alarm) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *Alarm) GetAlarmEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmEndTime
	}
	return nil
}

func (x *Alarm) GetDeviceLocation() string {
	if x != nil {
		return x.DeviceLocation
	}
	return ""
}

func (x *Alarm) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Alarm) GetDeviceTypeId() int32 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *Alarm) GetAlarmDesc() string {
	if x != nil {
		return x.AlarmDesc
	}
	return ""
}

func (x *Alarm) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *Alarm) GetAlarmThreshholdNumber() int32 {
	if x != nil {
		return x.AlarmThreshholdNumber
	}
	return 0
}

func (x *Alarm) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *Alarm) GetOccurredDigitalValue() int32 {
	if x != nil {
		return x.OccurredDigitalValue
	}
	return 0
}

func (x *Alarm) GetOccurredAnalogValue() float64 {
	if x != nil {
		return x.OccurredAnalogValue
	}
	return 0
}

func (x *Alarm) GetValueUnit() string {
	if x != nil {
		return x.ValueUnit
	}
	return ""
}

func (x *Alarm) GetOccurredStringValue() string {
	if x != nil {
		return x.OccurredStringValue
	}
	return ""
}

func (x *Alarm) GetAckState() AlarmAckStateEnum {
	if x != nil {
		return x.AckState
	}
	return AlarmAckStateEnum_ALARM_ACK_STATE_UNKNOWN
}

func (x *Alarm) GetAckTime() *timestamp.Timestamp {
	if x != nil {
		return x.AckTime
	}
	return nil
}

func (x *Alarm) GetAckUserId() int32 {
	if x != nil {
		return x.AckUserId
	}
	return 0
}

func (x *Alarm) GetAckUserName() string {
	if x != nil {
		return x.AckUserName
	}
	return ""
}

type AlarmList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Alarm `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AlarmList) Reset() {
	*x = AlarmList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmList) ProtoMessage() {}

func (x *AlarmList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmList.ProtoReflect.Descriptor instead.
func (*AlarmList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{14}
}

func (x *AlarmList) GetItems() []*Alarm {
	if x != nil {
		return x.Items
	}
	return nil
}

type BeginAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmSerialNumber     string               `protobuf:"bytes,1,opt,name=alarm_serial_number,json=alarmSerialNumber,proto3" json:"alarm_serial_number,omitempty"`
	SignalId              int32                `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	SignalName            string               `protobuf:"bytes,3,opt,name=signal_name,json=signalName,proto3" json:"signal_name,omitempty"`
	SignalType            SignalTypeEnum       `protobuf:"varint,4,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signal_type,omitempty"`
	AlarmBeginTime        *timestamp.Timestamp `protobuf:"bytes,5,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarm_begin_time,omitempty"`
	DeviceLocation        string               `protobuf:"bytes,6,opt,name=device_location,json=deviceLocation,proto3" json:"device_location,omitempty"`
	DeviceName            string               `protobuf:"bytes,7,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceTypeId          int32                `protobuf:"varint,8,opt,name=device_type_id,json=deviceTypeId,proto3" json:"device_type_id,omitempty"`
	AlarmDesc             string               `protobuf:"bytes,9,opt,name=alarm_desc,json=alarmDesc,proto3" json:"alarm_desc,omitempty"`
	AlarmLevelNumber      int32                `protobuf:"varint,10,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarm_level_number,omitempty"`
	AlarmThreshholdNumber int32                `protobuf:"varint,11,opt,name=alarm_threshhold_number,json=alarmThreshholdNumber,proto3" json:"alarm_threshhold_number,omitempty"`
	SignalValueType       SignalValueTypeEnum  `protobuf:"varint,12,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signal_value_type,omitempty"`
	OccurredDigitalValue  int32                `protobuf:"varint,13,opt,name=occurred_digital_value,json=occurredDigitalValue,proto3" json:"occurred_digital_value,omitempty"`
	OccurredAnalogValue   float64              `protobuf:"fixed64,14,opt,name=occurred_analog_value,json=occurredAnalogValue,proto3" json:"occurred_analog_value,omitempty"`
	ValueUnit             string               `protobuf:"bytes,15,opt,name=value_unit,json=valueUnit,proto3" json:"value_unit,omitempty"`
	OccurredStringValue   string               `protobuf:"bytes,16,opt,name=occurred_string_value,json=occurredStringValue,proto3" json:"occurred_string_value,omitempty"`
}

func (x *BeginAlarm) Reset() {
	*x = BeginAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeginAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeginAlarm) ProtoMessage() {}

func (x *BeginAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeginAlarm.ProtoReflect.Descriptor instead.
func (*BeginAlarm) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{15}
}

func (x *BeginAlarm) GetAlarmSerialNumber() string {
	if x != nil {
		return x.AlarmSerialNumber
	}
	return ""
}

func (x *BeginAlarm) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *BeginAlarm) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *BeginAlarm) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *BeginAlarm) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *BeginAlarm) GetDeviceLocation() string {
	if x != nil {
		return x.DeviceLocation
	}
	return ""
}

func (x *BeginAlarm) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *BeginAlarm) GetDeviceTypeId() int32 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *BeginAlarm) GetAlarmDesc() string {
	if x != nil {
		return x.AlarmDesc
	}
	return ""
}

func (x *BeginAlarm) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *BeginAlarm) GetAlarmThreshholdNumber() int32 {
	if x != nil {
		return x.AlarmThreshholdNumber
	}
	return 0
}

func (x *BeginAlarm) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *BeginAlarm) GetOccurredDigitalValue() int32 {
	if x != nil {
		return x.OccurredDigitalValue
	}
	return 0
}

func (x *BeginAlarm) GetOccurredAnalogValue() float64 {
	if x != nil {
		return x.OccurredAnalogValue
	}
	return 0
}

func (x *BeginAlarm) GetValueUnit() string {
	if x != nil {
		return x.ValueUnit
	}
	return ""
}

func (x *BeginAlarm) GetOccurredStringValue() string {
	if x != nil {
		return x.OccurredStringValue
	}
	return ""
}

type EndAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmSerialNumber string               `protobuf:"bytes,1,opt,name=alarm_serial_number,json=alarmSerialNumber,proto3" json:"alarm_serial_number,omitempty"`
	SignalId          int32                `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	AlarmBeginTime    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarm_begin_time,omitempty"`
	AlarmEndTime      *timestamp.Timestamp `protobuf:"bytes,4,opt,name=alarm_end_time,json=alarmEndTime,proto3" json:"alarm_end_time,omitempty"`
	AlarmDesc         string               `protobuf:"bytes,5,opt,name=alarm_desc,json=alarmDesc,proto3" json:"alarm_desc,omitempty"`
}

func (x *EndAlarm) Reset() {
	*x = EndAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndAlarm) ProtoMessage() {}

func (x *EndAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndAlarm.ProtoReflect.Descriptor instead.
func (*EndAlarm) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{16}
}

func (x *EndAlarm) GetAlarmSerialNumber() string {
	if x != nil {
		return x.AlarmSerialNumber
	}
	return ""
}

func (x *EndAlarm) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *EndAlarm) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *EndAlarm) GetAlarmEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmEndTime
	}
	return nil
}

func (x *EndAlarm) GetAlarmDesc() string {
	if x != nil {
		return x.AlarmDesc
	}
	return ""
}

type AckAlarm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AlarmSerialNumber string               `protobuf:"bytes,1,opt,name=alarm_serial_number,json=alarmSerialNumber,proto3" json:"alarm_serial_number,omitempty"`
	SignalId          int32                `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	AlarmBeginTime    *timestamp.Timestamp `protobuf:"bytes,3,opt,name=alarm_begin_time,json=alarmBeginTime,proto3" json:"alarm_begin_time,omitempty"`
	AckTime           *timestamp.Timestamp `protobuf:"bytes,4,opt,name=ack_time,json=ackTime,proto3" json:"ack_time,omitempty"`
	AckUserId         string               `protobuf:"bytes,5,opt,name=ack_user_id,json=ackUserId,proto3" json:"ack_user_id,omitempty"`
	AckUserName       string               `protobuf:"bytes,6,opt,name=ack_user_name,json=ackUserName,proto3" json:"ack_user_name,omitempty"`
}

func (x *AckAlarm) Reset() {
	*x = AckAlarm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckAlarm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckAlarm) ProtoMessage() {}

func (x *AckAlarm) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckAlarm.ProtoReflect.Descriptor instead.
func (*AckAlarm) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{17}
}

func (x *AckAlarm) GetAlarmSerialNumber() string {
	if x != nil {
		return x.AlarmSerialNumber
	}
	return ""
}

func (x *AckAlarm) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *AckAlarm) GetAlarmBeginTime() *timestamp.Timestamp {
	if x != nil {
		return x.AlarmBeginTime
	}
	return nil
}

func (x *AckAlarm) GetAckTime() *timestamp.Timestamp {
	if x != nil {
		return x.AckTime
	}
	return nil
}

func (x *AckAlarm) GetAckUserId() string {
	if x != nil {
		return x.AckUserId
	}
	return ""
}

func (x *AckAlarm) GetAckUserName() string {
	if x != nil {
		return x.AckUserName
	}
	return ""
}

type AlarmListWithPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items       []*Alarm `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	HasMore     bool     `protobuf:"varint,2,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
	PagingState string   `protobuf:"bytes,3,opt,name=pagingState,proto3" json:"pagingState,omitempty"`
}

func (x *AlarmListWithPage) Reset() {
	*x = AlarmListWithPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlarmListWithPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlarmListWithPage) ProtoMessage() {}

func (x *AlarmListWithPage) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlarmListWithPage.ProtoReflect.Descriptor instead.
func (*AlarmListWithPage) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{18}
}

func (x *AlarmListWithPage) GetItems() []*Alarm {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AlarmListWithPage) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *AlarmListWithPage) GetPagingState() string {
	if x != nil {
		return x.PagingState
	}
	return ""
}

type ControlCommandRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"controlCommandSerialNumber" gorm:"primary_key;" structs:"control_command_serial_number"
	ControlCommandSerialNumber string `protobuf:"bytes,1,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"controlCommandSerialNumber" gorm:"primary_key;" structs:"control_command_serial_number"`
	//@gotags: json:"operatorUserId" structs:"operator_user_id"
	OperatorUserId string `protobuf:"bytes,2,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operatorUserId" structs:"operator_user_id"`
	//@gotags: json:"operatorUserName" structs:"operator_user_name"
	OperatorUserName string `protobuf:"bytes,3,opt,name=operator_user_name,json=operatorUserName,proto3" json:"operatorUserName" structs:"operator_user_name"`
	//@gotags: json:"signalId" structs:"signal_id"
	SignalId int32 `protobuf:"varint,4,opt,name=signal_id,json=signalId,proto3" json:"signalId" structs:"signal_id"`
	//@gotags: json:"operateTime" gorm:"serializer:pbtimestamp;type:time" structs:"operate_time"
	OperateTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=operate_time,json=operateTime,proto3" json:"operateTime" gorm:"serializer:pbtimestamp;type:time" structs:"operate_time"`
	//@gotags: json:"controlCommandType" structs:"control_command_type"
	ControlCommandType ControlCommandTypeEnum `protobuf:"varint,6,opt,name=control_command_type,json=controlCommandType,proto3,enum=message.ControlCommandTypeEnum" json:"controlCommandType" structs:"control_command_type"`
	//@gotags: json:"controlCommandResult" structs:"control_command_result"
	ControlCommandResult ControlCommandResultEnum `protobuf:"varint,7,opt,name=control_command_result,json=controlCommandResult,proto3,enum=message.ControlCommandResultEnum" json:"controlCommandResult" structs:"control_command_result"`
	//@gotags: json:"delay" structs:"delay"
	Delay int32 `protobuf:"varint,8,opt,name=delay,proto3" json:"delay" structs:"delay"`
	//@gotags: json:"digitalValue" structs:"digital_value"
	DigitalValue int32 `protobuf:"varint,9,opt,name=digital_value,json=digitalValue,proto3" json:"digitalValue" structs:"digital_value"`
	//@gotags: json:"analogValue" structs:"analog_value"
	AnalogValue float64 `protobuf:"fixed64,10,opt,name=analog_value,json=analogValue,proto3" json:"analogValue" structs:"analog_value"`
	//@gotags: json:"stringValue" structs:"string_value"
	StringValue string `protobuf:"bytes,11,opt,name=string_value,json=stringValue,proto3" json:"stringValue" structs:"string_value"`
}

func (x *ControlCommandRecord) Reset() {
	*x = ControlCommandRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCommandRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCommandRecord) ProtoMessage() {}

func (x *ControlCommandRecord) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCommandRecord.ProtoReflect.Descriptor instead.
func (*ControlCommandRecord) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{19}
}

func (x *ControlCommandRecord) GetControlCommandSerialNumber() string {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return ""
}

func (x *ControlCommandRecord) GetOperatorUserId() string {
	if x != nil {
		return x.OperatorUserId
	}
	return ""
}

func (x *ControlCommandRecord) GetOperatorUserName() string {
	if x != nil {
		return x.OperatorUserName
	}
	return ""
}

func (x *ControlCommandRecord) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *ControlCommandRecord) GetOperateTime() *timestamp.Timestamp {
	if x != nil {
		return x.OperateTime
	}
	return nil
}

func (x *ControlCommandRecord) GetControlCommandType() ControlCommandTypeEnum {
	if x != nil {
		return x.ControlCommandType
	}
	return ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_UNKNOWN
}

func (x *ControlCommandRecord) GetControlCommandResult() ControlCommandResultEnum {
	if x != nil {
		return x.ControlCommandResult
	}
	return ControlCommandResultEnum_CONTROL_COMMAND_RESULT_UNKNOWN
}

func (x *ControlCommandRecord) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *ControlCommandRecord) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *ControlCommandRecord) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *ControlCommandRecord) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

type ControlCommandRecordList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ControlCommandRecord `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ControlCommandRecordList) Reset() {
	*x = ControlCommandRecordList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCommandRecordList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCommandRecordList) ProtoMessage() {}

func (x *ControlCommandRecordList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCommandRecordList.ProtoReflect.Descriptor instead.
func (*ControlCommandRecordList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{20}
}

func (x *ControlCommandRecordList) GetItems() []*ControlCommandRecord {
	if x != nil {
		return x.Items
	}
	return nil
}

type ControlCommandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlCommandSerialNumber  string `protobuf:"bytes,1,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"control_command_serial_number,omitempty"`
	ControlCommandReceiveResult bool   `protobuf:"varint,2,opt,name=control_command_receive_result,json=controlCommandReceiveResult,proto3" json:"control_command_receive_result,omitempty"`
}

func (x *ControlCommandResponse) Reset() {
	*x = ControlCommandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCommandResponse) ProtoMessage() {}

func (x *ControlCommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCommandResponse.ProtoReflect.Descriptor instead.
func (*ControlCommandResponse) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{21}
}

func (x *ControlCommandResponse) GetControlCommandSerialNumber() string {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return ""
}

func (x *ControlCommandResponse) GetControlCommandReceiveResult() bool {
	if x != nil {
		return x.ControlCommandReceiveResult
	}
	return false
}

type LogicObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"logicObjectId" gorm:"primary_key;AUTO_INCREMENT" structs:"logic_object_id"
	LogicObjectId int32 `protobuf:"varint,1,opt,name=logic_object_id,json=logicObjectId,proto3" json:"logicObjectId" gorm:"primary_key;AUTO_INCREMENT" structs:"logic_object_id"`
	//@gotags: json:"logicObjectName" structs:"logic_object_name"
	LogicObjectName string `protobuf:"bytes,2,opt,name=logic_object_name,json=logicObjectName,proto3" json:"logicObjectName" structs:"logic_object_name"`
	//@gotags: json:"logicObjectAlias" structs:"logic_object_alias"
	LogicObjectAlias string `protobuf:"bytes,3,opt,name=logic_object_alias,json=logicObjectAlias,proto3" json:"logicObjectAlias" structs:"logic_object_alias"`
	//@gotags: json:"industrialInternetId" structs:"industrial_internet_id"
	IndustrialInternetId string `protobuf:"bytes,4,opt,name=industrial_internet_id,json=industrialInternetId,proto3" json:"industrialInternetId" structs:"industrial_internet_id"`
	//@gotags: json:"parentLogicObjectId" structs:"parent_logic_object_id"
	ParentLogicObjectId int32 `protobuf:"varint,5,opt,name=parent_logic_object_id,json=parentLogicObjectId,proto3" json:"parentLogicObjectId" structs:"parent_logic_object_id"`
	//@gotags: json:"logicObjectTypeId" structs:"logic_object_type_id"
	LogicObjectTypeId int32 `protobuf:"varint,6,opt,name=logic_object_type_id,json=logicObjectTypeId,proto3" json:"logicObjectTypeId" structs:"logic_object_type_id"`
	//@gotags: json:"metadataId" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,7,opt,name=metadataId,proto3" json:"metadataId" structs:"metadata_id"`
	//@gotags: json:"configureId" structs:"configure_id"
	ConfigureId int32 `protobuf:"varint,8,opt,name=configure_id,json=configureId,proto3" json:"configureId" structs:"configure_id"`
	//@gotags: json:"positionAmongBrothers" structs:"position_among_brothers"
	PositionAmongBrothers int32 `protobuf:"varint,9,opt,name=position_among_brothers,json=positionAmongBrothers,proto3" json:"positionAmongBrothers" structs:"position_among_brothers"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,11,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,13,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,16,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *LogicObject) Reset() {
	*x = LogicObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicObject) ProtoMessage() {}

func (x *LogicObject) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicObject.ProtoReflect.Descriptor instead.
func (*LogicObject) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{22}
}

func (x *LogicObject) GetLogicObjectId() int32 {
	if x != nil {
		return x.LogicObjectId
	}
	return 0
}

func (x *LogicObject) GetLogicObjectName() string {
	if x != nil {
		return x.LogicObjectName
	}
	return ""
}

func (x *LogicObject) GetLogicObjectAlias() string {
	if x != nil {
		return x.LogicObjectAlias
	}
	return ""
}

func (x *LogicObject) GetIndustrialInternetId() string {
	if x != nil {
		return x.IndustrialInternetId
	}
	return ""
}

func (x *LogicObject) GetParentLogicObjectId() int32 {
	if x != nil {
		return x.ParentLogicObjectId
	}
	return 0
}

func (x *LogicObject) GetLogicObjectTypeId() int32 {
	if x != nil {
		return x.LogicObjectTypeId
	}
	return 0
}

func (x *LogicObject) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *LogicObject) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *LogicObject) GetPositionAmongBrothers() int32 {
	if x != nil {
		return x.PositionAmongBrothers
	}
	return 0
}

func (x *LogicObject) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *LogicObject) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *LogicObject) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *LogicObject) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *LogicObject) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *LogicObject) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *LogicObject) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type LogicObjectList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LogicObject `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LogicObjectList) Reset() {
	*x = LogicObjectList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicObjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicObjectList) ProtoMessage() {}

func (x *LogicObjectList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicObjectList.ProtoReflect.Descriptor instead.
func (*LogicObjectList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{23}
}

func (x *LogicObjectList) GetItems() []*LogicObject {
	if x != nil {
		return x.Items
	}
	return nil
}

type LogicArea struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"logicObjectId" gorm:"primary_key;" structs:"logic_object_id"
	LogicObjectId int32 `protobuf:"varint,1,opt,name=logic_object_id,json=logicObjectId,proto3" json:"logicObjectId" gorm:"primary_key;" structs:"logic_object_id"`
	//@gotags: json:"areaAlias" structs:"area_alias"
	AreaAlias string `protobuf:"bytes,2,opt,name=area_alias,json=areaAlias,proto3" json:"areaAlias" structs:"area_alias"`
	//@gotags: json:"areaType" structs:"area_type"
	AreaType int32 `protobuf:"varint,3,opt,name=area_type,json=areaType,proto3" json:"areaType" structs:"area_type"`
}

func (x *LogicArea) Reset() {
	*x = LogicArea{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicArea) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicArea) ProtoMessage() {}

func (x *LogicArea) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicArea.ProtoReflect.Descriptor instead.
func (*LogicArea) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{24}
}

func (x *LogicArea) GetLogicObjectId() int32 {
	if x != nil {
		return x.LogicObjectId
	}
	return 0
}

func (x *LogicArea) GetAreaAlias() string {
	if x != nil {
		return x.AreaAlias
	}
	return ""
}

func (x *LogicArea) GetAreaType() int32 {
	if x != nil {
		return x.AreaType
	}
	return 0
}

type LogicAreaList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LogicArea `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LogicAreaList) Reset() {
	*x = LogicAreaList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicAreaList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicAreaList) ProtoMessage() {}

func (x *LogicAreaList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicAreaList.ProtoReflect.Descriptor instead.
func (*LogicAreaList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{25}
}

func (x *LogicAreaList) GetItems() []*LogicArea {
	if x != nil {
		return x.Items
	}
	return nil
}

type LogicDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"logicObjectId" gorm:"primary_key;" structs:"logic_object_id"
	LogicObjectId int32 `protobuf:"varint,1,opt,name=logic_object_id,json=logicObjectId,proto3" json:"logicObjectId" gorm:"primary_key;" structs:"logic_object_id"`
	//@gotags: json:"deviceAlias" structs:"device_alias"
	DeviceAlias string `protobuf:"bytes,2,opt,name=device_alias,json=deviceAlias,proto3" json:"deviceAlias" structs:"device_alias"`
	//@gotags: json:"deviceType" structs:"device_type"
	DeviceType int32 `protobuf:"varint,3,opt,name=device_type,json=deviceType,proto3" json:"deviceType" structs:"device_type"`
}

func (x *LogicDevice) Reset() {
	*x = LogicDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicDevice) ProtoMessage() {}

func (x *LogicDevice) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicDevice.ProtoReflect.Descriptor instead.
func (*LogicDevice) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{26}
}

func (x *LogicDevice) GetLogicObjectId() int32 {
	if x != nil {
		return x.LogicObjectId
	}
	return 0
}

func (x *LogicDevice) GetDeviceAlias() string {
	if x != nil {
		return x.DeviceAlias
	}
	return ""
}

func (x *LogicDevice) GetDeviceType() int32 {
	if x != nil {
		return x.DeviceType
	}
	return 0
}

type LogicDeviceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LogicDevice `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LogicDeviceList) Reset() {
	*x = LogicDeviceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicDeviceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicDeviceList) ProtoMessage() {}

func (x *LogicDeviceList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicDeviceList.ProtoReflect.Descriptor instead.
func (*LogicDeviceList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{27}
}

func (x *LogicDeviceList) GetItems() []*LogicDevice {
	if x != nil {
		return x.Items
	}
	return nil
}

type LogicObjectExtend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogicObject    *LogicObject `protobuf:"bytes,1,opt,name=logicObject,proto3" json:"logicObject,omitempty"`
	LogicArea      *LogicArea   `protobuf:"bytes,2,opt,name=logicArea,proto3" json:"logicArea,omitempty"`
	LogicDevice    *LogicDevice `protobuf:"bytes,3,opt,name=logicDevice,proto3" json:"logicDevice,omitempty"`
	LogicConfigure *Configure   `protobuf:"bytes,4,opt,name=logicConfigure,proto3" json:"logicConfigure,omitempty"`
}

func (x *LogicObjectExtend) Reset() {
	*x = LogicObjectExtend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogicObjectExtend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogicObjectExtend) ProtoMessage() {}

func (x *LogicObjectExtend) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogicObjectExtend.ProtoReflect.Descriptor instead.
func (*LogicObjectExtend) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{28}
}

func (x *LogicObjectExtend) GetLogicObject() *LogicObject {
	if x != nil {
		return x.LogicObject
	}
	return nil
}

func (x *LogicObjectExtend) GetLogicArea() *LogicArea {
	if x != nil {
		return x.LogicArea
	}
	return nil
}

func (x *LogicObjectExtend) GetLogicDevice() *LogicDevice {
	if x != nil {
		return x.LogicDevice
	}
	return nil
}

func (x *LogicObjectExtend) GetLogicConfigure() *Configure {
	if x != nil {
		return x.LogicConfigure
	}
	return nil
}

type AreaType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"areaTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"area_type_id"
	AreaTypeId int32 `protobuf:"varint,1,opt,name=area_type_id,json=areaTypeId,proto3" json:"areaTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"area_type_id"`
	//@gotags: json:"areaTypeName" structs:"area_type_name"
	AreaTypeName string `protobuf:"bytes,2,opt,name=area_type_name,json=areaTypeName,proto3" json:"areaTypeName" structs:"area_type_name"`
	//@gotags: json:"areaTypeNote" structs:"area_type_note"
	AreaTypeNote string `protobuf:"bytes,3,opt,name=area_type_note,json=areaTypeNote,proto3" json:"areaTypeNote" structs:"area_type_note"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,7,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,10,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *AreaType) Reset() {
	*x = AreaType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaType) ProtoMessage() {}

func (x *AreaType) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaType.ProtoReflect.Descriptor instead.
func (*AreaType) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{29}
}

func (x *AreaType) GetAreaTypeId() int32 {
	if x != nil {
		return x.AreaTypeId
	}
	return 0
}

func (x *AreaType) GetAreaTypeName() string {
	if x != nil {
		return x.AreaTypeName
	}
	return ""
}

func (x *AreaType) GetAreaTypeNote() string {
	if x != nil {
		return x.AreaTypeNote
	}
	return ""
}

func (x *AreaType) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AreaType) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *AreaType) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AreaType) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *AreaType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *AreaType) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *AreaType) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type AreaTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AreaType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AreaTypeList) Reset() {
	*x = AreaTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaTypeList) ProtoMessage() {}

func (x *AreaTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaTypeList.ProtoReflect.Descriptor instead.
func (*AreaTypeList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{30}
}

func (x *AreaTypeList) GetItems() []*AreaType {
	if x != nil {
		return x.Items
	}
	return nil
}

type DeviceType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"deviceTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"device_type_id"
	DeviceTypeId int32 `protobuf:"varint,1,opt,name=device_type_id,json=deviceTypeId,proto3" json:"deviceTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"device_type_id"`
	//@gotags: json:"deviceTypeName" structs:"device_type_name"
	DeviceTypeName string `protobuf:"bytes,2,opt,name=device_type_name,json=deviceTypeName,proto3" json:"deviceTypeName" structs:"device_type_name"`
	//@gotags: json:"deviceTypeNote" structs:"device_type_note"
	DeviceTypeNote string `protobuf:"bytes,3,opt,name=device_type_note,json=deviceTypeNote,proto3" json:"deviceTypeNote" structs:"device_type_note"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,7,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,10,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *DeviceType) Reset() {
	*x = DeviceType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceType) ProtoMessage() {}

func (x *DeviceType) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceType.ProtoReflect.Descriptor instead.
func (*DeviceType) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{31}
}

func (x *DeviceType) GetDeviceTypeId() int32 {
	if x != nil {
		return x.DeviceTypeId
	}
	return 0
}

func (x *DeviceType) GetDeviceTypeName() string {
	if x != nil {
		return x.DeviceTypeName
	}
	return ""
}

func (x *DeviceType) GetDeviceTypeNote() string {
	if x != nil {
		return x.DeviceTypeNote
	}
	return ""
}

func (x *DeviceType) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DeviceType) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *DeviceType) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DeviceType) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *DeviceType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *DeviceType) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DeviceType) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DeviceTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DeviceType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DeviceTypeList) Reset() {
	*x = DeviceTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceTypeList) ProtoMessage() {}

func (x *DeviceTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceTypeList.ProtoReflect.Descriptor instead.
func (*DeviceTypeList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{32}
}

func (x *DeviceTypeList) GetItems() []*DeviceType {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalThreshold struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"threshholdId" gorm:"primary_key;AUTO_INCREMENT" structs:"threshhold_id"
	ThresholdId int32 `protobuf:"varint,1,opt,name=threshold_id,json=thresholdId,proto3" json:"threshholdId" gorm:"primary_key;AUTO_INCREMENT" structs:"threshhold_id"`
	//@gotags: json:"signalId" structs:"signal_id"
	SignalId int32 `protobuf:"varint,2,opt,name=signal_id,json=signalId,proto3" json:"signalId" structs:"signal_id"`
	//@gotags: json:"signalType" structs:"signal_type"
	SignalType SignalTypeEnum `protobuf:"varint,3,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signalType" structs:"signal_type"`
	//@gotags: json:"threshholdNumber" structs:"threshhold_number"
	ThresholdNumber int32 `protobuf:"varint,4,opt,name=threshold_number,json=thresholdNumber,proto3" json:"threshholdNumber" structs:"threshhold_number"`
	//@gotags: json:"threshholdValueAi" structs:"threshhold_value_ai"
	ThresholdValueAi float64 `protobuf:"fixed64,5,opt,name=threshold_value_ai,json=thresholdValueAi,proto3" json:"threshholdValueAi" structs:"threshhold_value_ai"`
	//@gotags: json:"threshholdValueDi" structs:"threshhold_value_di"
	ThresholdValueDi int32 `protobuf:"varint,6,opt,name=threshold_value_di,json=thresholdValueDi,proto3" json:"threshholdValueDi" structs:"threshhold_value_di"`
	//@gotags: json:"threshholdDirection" structs:"threshhold_direction"
	ThresholdDirection ThresholdDirectionEnum `protobuf:"varint,7,opt,name=threshold_direction,json=thresholdDirection,proto3,enum=message.ThresholdDirectionEnum" json:"threshholdDirection" structs:"threshhold_direction"`
	//@gotags: json:"threshholdDeadArea" structs:"threshhold_dead_area"
	ThresholdDeadArea float64 `protobuf:"fixed64,8,opt,name=threshold_dead_area,json=thresholdDeadArea,proto3" json:"threshholdDeadArea" structs:"threshhold_dead_area"`
	//@gotags: json:"isNotify" structs:"is_notify"
	IsNotify bool `protobuf:"varint,9,opt,name=is_notify,json=isNotify,proto3" json:"isNotify" structs:"is_notify"`
	//@gotags: json:"alarmLevelNumber" structs:"alarm_level_number"
	AlarmLevelNumber int32 `protobuf:"varint,10,opt,name=alarm_level_number,json=alarmLevelNumber,proto3" json:"alarmLevelNumber" structs:"alarm_level_number"`
	//@gotags: json:"upNotifyNote" structs:"up_notify_note"
	UpNotifyNote string `protobuf:"bytes,11,opt,name=up_notify_note,json=upNotifyNote,proto3" json:"upNotifyNote" structs:"up_notify_note"`
	//@gotags: json:"downNotifyNote" structs:"down_notify_note"
	DownNotifyNote string `protobuf:"bytes,12,opt,name=down_notify_note,json=downNotifyNote,proto3" json:"downNotifyNote" structs:"down_notify_note"`
	//@gotags: json:"alarmDelay" structs:"alarm_delay"
	AlarmDelay int32 `protobuf:"varint,13,opt,name=alarm_delay,json=alarmDelay,proto3" json:"alarmDelay" structs:"alarm_delay"`
	//@gotags: json:"recoverAlarmDelay" structs:"recover_alarm_delay"
	RecoverAlarmDelay int32 `protobuf:"varint,14,opt,name=recover_alarm_delay,json=recoverAlarmDelay,proto3" json:"recoverAlarmDelay" structs:"recover_alarm_delay"`
}

func (x *SignalThreshold) Reset() {
	*x = SignalThreshold{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalThreshold) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalThreshold) ProtoMessage() {}

func (x *SignalThreshold) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalThreshold.ProtoReflect.Descriptor instead.
func (*SignalThreshold) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{33}
}

func (x *SignalThreshold) GetThresholdId() int32 {
	if x != nil {
		return x.ThresholdId
	}
	return 0
}

func (x *SignalThreshold) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalThreshold) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *SignalThreshold) GetThresholdNumber() int32 {
	if x != nil {
		return x.ThresholdNumber
	}
	return 0
}

func (x *SignalThreshold) GetThresholdValueAi() float64 {
	if x != nil {
		return x.ThresholdValueAi
	}
	return 0
}

func (x *SignalThreshold) GetThresholdValueDi() int32 {
	if x != nil {
		return x.ThresholdValueDi
	}
	return 0
}

func (x *SignalThreshold) GetThresholdDirection() ThresholdDirectionEnum {
	if x != nil {
		return x.ThresholdDirection
	}
	return ThresholdDirectionEnum_THRESHOLD_DIRECTION_UNKNOWN
}

func (x *SignalThreshold) GetThresholdDeadArea() float64 {
	if x != nil {
		return x.ThresholdDeadArea
	}
	return 0
}

func (x *SignalThreshold) GetIsNotify() bool {
	if x != nil {
		return x.IsNotify
	}
	return false
}

func (x *SignalThreshold) GetAlarmLevelNumber() int32 {
	if x != nil {
		return x.AlarmLevelNumber
	}
	return 0
}

func (x *SignalThreshold) GetUpNotifyNote() string {
	if x != nil {
		return x.UpNotifyNote
	}
	return ""
}

func (x *SignalThreshold) GetDownNotifyNote() string {
	if x != nil {
		return x.DownNotifyNote
	}
	return ""
}

func (x *SignalThreshold) GetAlarmDelay() int32 {
	if x != nil {
		return x.AlarmDelay
	}
	return 0
}

func (x *SignalThreshold) GetRecoverAlarmDelay() int32 {
	if x != nil {
		return x.RecoverAlarmDelay
	}
	return 0
}

type SignalThresholdList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalThreshold `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalThresholdList) Reset() {
	*x = SignalThresholdList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalThresholdList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalThresholdList) ProtoMessage() {}

func (x *SignalThresholdList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalThresholdList.ProtoReflect.Descriptor instead.
func (*SignalThresholdList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{34}
}

func (x *SignalThresholdList) GetItems() []*SignalThreshold {
	if x != nil {
		return x.Items
	}
	return nil
}

type Signal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;AUTO_INCREMENT" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;AUTO_INCREMENT" structs:"signal_id"`
	//@gotags: json:"signalName" structs:"signal_name"
	SignalName string `protobuf:"bytes,2,opt,name=signal_name,json=signalName,proto3" json:"signalName" structs:"signal_name"`
	//@gotags: json:"signalAlias" structs:"signal_alias"
	SignalAlias string `protobuf:"bytes,3,opt,name=signal_alias,json=signalAlias,proto3" json:"signalAlias" structs:"signal_alias"`
	//@gotags: json:"industrialInternetId" structs:"industrial_internet_id"
	IndustrialInternetId string `protobuf:"bytes,4,opt,name=industrial_internet_id,json=industrialInternetId,proto3" json:"industrialInternetId" structs:"industrial_internet_id"`
	//@gotags: json:"signalUnificationId" structs:"signal_unification_id"
	SignalUnificationId int32 `protobuf:"varint,5,opt,name=signal_unification_id,json=signalUnificationId,proto3" json:"signalUnificationId" structs:"signal_unification_id"`
	//@gotags: json:"signalType" structs:"signal_type"
	SignalType SignalTypeEnum `protobuf:"varint,6,opt,name=signal_type,json=signalType,proto3,enum=message.SignalTypeEnum" json:"signalType" structs:"signal_type"`
	//@gotags: json:"parentLogicId" structs:"parent_logic_id"
	ParentLogicId int32 `protobuf:"varint,7,opt,name=parent_logic_id,json=parentLogicId,proto3" json:"parentLogicId" structs:"parent_logic_id"`
	//@gotags: json:"positionAmongBrothers" structs:"position_among_brothers"
	PositionAmongBrothers int32 `protobuf:"varint,8,opt,name=position_among_brothers,json=positionAmongBrothers,proto3" json:"positionAmongBrothers" structs:"position_among_brothers"`
	//@gotags: json:"applied" structs:"applied"
	Applied bool `protobuf:"varint,9,opt,name=applied,proto3" json:"applied" structs:"applied"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,11,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,13,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,14,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,16,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Signal) Reset() {
	*x = Signal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Signal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signal) ProtoMessage() {}

func (x *Signal) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signal.ProtoReflect.Descriptor instead.
func (*Signal) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{35}
}

func (x *Signal) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *Signal) GetSignalName() string {
	if x != nil {
		return x.SignalName
	}
	return ""
}

func (x *Signal) GetSignalAlias() string {
	if x != nil {
		return x.SignalAlias
	}
	return ""
}

func (x *Signal) GetIndustrialInternetId() string {
	if x != nil {
		return x.IndustrialInternetId
	}
	return ""
}

func (x *Signal) GetSignalUnificationId() int32 {
	if x != nil {
		return x.SignalUnificationId
	}
	return 0
}

func (x *Signal) GetSignalType() SignalTypeEnum {
	if x != nil {
		return x.SignalType
	}
	return SignalTypeEnum_SIGNAL_TYPE_UNKNOWN
}

func (x *Signal) GetParentLogicId() int32 {
	if x != nil {
		return x.ParentLogicId
	}
	return 0
}

func (x *Signal) GetPositionAmongBrothers() int32 {
	if x != nil {
		return x.PositionAmongBrothers
	}
	return 0
}

func (x *Signal) GetApplied() bool {
	if x != nil {
		return x.Applied
	}
	return false
}

func (x *Signal) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Signal) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Signal) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Signal) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Signal) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Signal) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Signal) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type SignalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Signal `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalList) Reset() {
	*x = SignalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalList) ProtoMessage() {}

func (x *SignalList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalList.ProtoReflect.Descriptor instead.
func (*SignalList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{36}
}

func (x *SignalList) GetItems() []*Signal {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalDi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"isFlip" structs:"is_flip"
	IsFlip bool `protobuf:"varint,2,opt,name=is_flip,json=isFlip,proto3" json:"isFlip" structs:"is_flip"`
	//@gotags: json:"recordPeriod" structs:"record_period"
	RecordPeriod int32 `protobuf:"varint,3,opt,name=record_period,json=recordPeriod,proto3" json:"recordPeriod" structs:"record_period"`
	//@gotags: json:"highDesc" structs:"high_desc"
	HighDesc string `protobuf:"bytes,4,opt,name=high_desc,json=highDesc,proto3" json:"highDesc" structs:"high_desc"`
	//@gotags: json:"lowDesc" structs:"low_desc"
	LowDesc string `protobuf:"bytes,5,opt,name=low_desc,json=lowDesc,proto3" json:"lowDesc" structs:"low_desc"`
}

func (x *SignalDi) Reset() {
	*x = SignalDi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalDi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalDi) ProtoMessage() {}

func (x *SignalDi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalDi.ProtoReflect.Descriptor instead.
func (*SignalDi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{37}
}

func (x *SignalDi) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalDi) GetIsFlip() bool {
	if x != nil {
		return x.IsFlip
	}
	return false
}

func (x *SignalDi) GetRecordPeriod() int32 {
	if x != nil {
		return x.RecordPeriod
	}
	return 0
}

func (x *SignalDi) GetHighDesc() string {
	if x != nil {
		return x.HighDesc
	}
	return ""
}

func (x *SignalDi) GetLowDesc() string {
	if x != nil {
		return x.LowDesc
	}
	return ""
}

type SignalDiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalDi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalDiList) Reset() {
	*x = SignalDiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalDiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalDiList) ProtoMessage() {}

func (x *SignalDiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalDiList.ProtoReflect.Descriptor instead.
func (*SignalDiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{38}
}

func (x *SignalDiList) GetItems() []*SignalDi {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalAi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"multipleRate" structs:"multiple_rate"
	MultipleRate float64 `protobuf:"fixed64,2,opt,name=multiple_rate,json=multipleRate,proto3" json:"multipleRate" structs:"multiple_rate"`
	//@gotags: json:"offsetValue" structs:"offset_value"
	OffsetValue float64 `protobuf:"fixed64,3,opt,name=offset_value,json=offsetValue,proto3" json:"offsetValue" structs:"offset_value"`
	//@gotags: json:"recordPeriod" structs:"record_period"
	RecordPeriod int32 `protobuf:"varint,4,opt,name=record_period,json=recordPeriod,proto3" json:"recordPeriod" structs:"record_period"`
	//@gotags: json:"decimalPrecision" structs:"decimal_precision"
	DecimalPrecision int32 `protobuf:"varint,5,opt,name=decimal_precision,json=decimalPrecision,proto3" json:"decimalPrecision" structs:"decimal_precision"`
	//@gotags: json:"valueUnit" structs:"value_unit"
	ValueUnit string `protobuf:"bytes,6,opt,name=value_unit,json=valueUnit,proto3" json:"valueUnit" structs:"value_unit"`
}

func (x *SignalAi) Reset() {
	*x = SignalAi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalAi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalAi) ProtoMessage() {}

func (x *SignalAi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalAi.ProtoReflect.Descriptor instead.
func (*SignalAi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{39}
}

func (x *SignalAi) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalAi) GetMultipleRate() float64 {
	if x != nil {
		return x.MultipleRate
	}
	return 0
}

func (x *SignalAi) GetOffsetValue() float64 {
	if x != nil {
		return x.OffsetValue
	}
	return 0
}

func (x *SignalAi) GetRecordPeriod() int32 {
	if x != nil {
		return x.RecordPeriod
	}
	return 0
}

func (x *SignalAi) GetDecimalPrecision() int32 {
	if x != nil {
		return x.DecimalPrecision
	}
	return 0
}

func (x *SignalAi) GetValueUnit() string {
	if x != nil {
		return x.ValueUnit
	}
	return ""
}

type SignalAiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalAi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalAiList) Reset() {
	*x = SignalAiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalAiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalAiList) ProtoMessage() {}

func (x *SignalAiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalAiList.ProtoReflect.Descriptor instead.
func (*SignalAiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{40}
}

func (x *SignalAiList) GetItems() []*SignalAi {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalSi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"recordPeriod" structs:"record_period"
	RecordPeriod int32 `protobuf:"varint,2,opt,name=record_period,json=recordPeriod,proto3" json:"recordPeriod" structs:"record_period"`
}

func (x *SignalSi) Reset() {
	*x = SignalSi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalSi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalSi) ProtoMessage() {}

func (x *SignalSi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalSi.ProtoReflect.Descriptor instead.
func (*SignalSi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{41}
}

func (x *SignalSi) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalSi) GetRecordPeriod() int32 {
	if x != nil {
		return x.RecordPeriod
	}
	return 0
}

type SignalSiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalSi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalSiList) Reset() {
	*x = SignalSiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalSiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalSiList) ProtoMessage() {}

func (x *SignalSiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalSiList.ProtoReflect.Descriptor instead.
func (*SignalSiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{42}
}

func (x *SignalSiList) GetItems() []*SignalSi {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalAcquisition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"agentId" structs:"agent_id"
	AgentId int32 `protobuf:"varint,2,opt,name=agent_id,json=agentId,proto3" json:"agentId" structs:"agent_id"`
	//@gotags: json:"fsuId" structs:"fsu_id"
	FsuId int32 `protobuf:"varint,3,opt,name=fsu_id,json=fsuId,proto3" json:"fsuId" structs:"fsu_id"`
	//@gotags: json:"driverId" structs:"driver_id"
	DriverId int32 `protobuf:"varint,4,opt,name=driver_id,json=driverId,proto3" json:"driverId" structs:"driver_id"`
	//@gotags: json:"x" structs:"x"
	X int32 `protobuf:"varint,5,opt,name=x,proto3" json:"x" structs:"x"`
	//@gotags: json:"y" structs:"y"
	Y int32 `protobuf:"varint,6,opt,name=y,proto3" json:"y" structs:"y"`
	//@gotags: json:"z" structs:"z"
	Z int32 `protobuf:"varint,7,opt,name=z,proto3" json:"z" structs:"z"`
	//@gotags: json:"signalBindMetadataId" structs:"signal_bind_metadata_id"
	SignalBindMetadataId int32 `protobuf:"varint,8,opt,name=signal_bind_metadata_id,json=signalBindMetadataId,proto3" json:"signalBindMetadataId" structs:"signal_bind_metadata_id"`
	//@gotags: json:"signalBindConfigureId" structs:"signal_bind_configure_id"
	SignalBindConfigureId int32 `protobuf:"varint,9,opt,name=signal_bind_configure_id,json=signalBindConfigureId,proto3" json:"signalBindConfigureId" structs:"signal_bind_configure_id"`
}

func (x *SignalAcquisition) Reset() {
	*x = SignalAcquisition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalAcquisition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalAcquisition) ProtoMessage() {}

func (x *SignalAcquisition) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalAcquisition.ProtoReflect.Descriptor instead.
func (*SignalAcquisition) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{43}
}

func (x *SignalAcquisition) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalAcquisition) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *SignalAcquisition) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *SignalAcquisition) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *SignalAcquisition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SignalAcquisition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SignalAcquisition) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *SignalAcquisition) GetSignalBindMetadataId() int32 {
	if x != nil {
		return x.SignalBindMetadataId
	}
	return 0
}

func (x *SignalAcquisition) GetSignalBindConfigureId() int32 {
	if x != nil {
		return x.SignalBindConfigureId
	}
	return 0
}

type SignalAcquisitionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalAcquisition `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalAcquisitionList) Reset() {
	*x = SignalAcquisitionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalAcquisitionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalAcquisitionList) ProtoMessage() {}

func (x *SignalAcquisitionList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalAcquisitionList.ProtoReflect.Descriptor instead.
func (*SignalAcquisitionList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{44}
}

func (x *SignalAcquisitionList) GetItems() []*SignalAcquisition {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalVirtual struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"signalExpress" structs:"signal_express"
	SignalExpress string `protobuf:"bytes,2,opt,name=signal_express,json=signalExpress,proto3" json:"signalExpress" structs:"signal_express"`
}

func (x *SignalVirtual) Reset() {
	*x = SignalVirtual{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalVirtual) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalVirtual) ProtoMessage() {}

func (x *SignalVirtual) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalVirtual.ProtoReflect.Descriptor instead.
func (*SignalVirtual) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{45}
}

func (x *SignalVirtual) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalVirtual) GetSignalExpress() string {
	if x != nil {
		return x.SignalExpress
	}
	return ""
}

type SignalVirtualList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalVirtual `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalVirtualList) Reset() {
	*x = SignalVirtualList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalVirtualList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalVirtualList) ProtoMessage() {}

func (x *SignalVirtualList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalVirtualList.ProtoReflect.Descriptor instead.
func (*SignalVirtualList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{46}
}

func (x *SignalVirtualList) GetItems() []*SignalVirtual {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalId" gorm:"primary_key;" structs:"signal_id"
	SignalId int32 `protobuf:"varint,1,opt,name=signal_id,json=signalId,proto3" json:"signalId" gorm:"primary_key;" structs:"signal_id"`
	//@gotags: json:"videoPlayType" structs:"video_play_type"
	VideoPlayType int32 `protobuf:"varint,2,opt,name=video_play_type,json=videoPlayType,proto3" json:"videoPlayType" structs:"video_play_type"`
	//@gotags: json:"videoBindMetadataId" structs:"video_bind_metadata_id"
	VideoBindMetadataId int32 `protobuf:"varint,3,opt,name=video_bind_metadata_id,json=videoBindMetadataId,proto3" json:"videoBindMetadataId" structs:"video_bind_metadata_id"`
	//@gotags: json:"videoBindConfigureId" structs:"video_bind_configure_id"
	VideoBindConfigureId int32 `protobuf:"varint,4,opt,name=video_bind_configure_id,json=videoBindConfigureId,proto3" json:"videoBindConfigureId" structs:"video_bind_configure_id"`
}

func (x *SignalVideo) Reset() {
	*x = SignalVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalVideo) ProtoMessage() {}

func (x *SignalVideo) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalVideo.ProtoReflect.Descriptor instead.
func (*SignalVideo) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{47}
}

func (x *SignalVideo) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *SignalVideo) GetVideoPlayType() int32 {
	if x != nil {
		return x.VideoPlayType
	}
	return 0
}

func (x *SignalVideo) GetVideoBindMetadataId() int32 {
	if x != nil {
		return x.VideoBindMetadataId
	}
	return 0
}

func (x *SignalVideo) GetVideoBindConfigureId() int32 {
	if x != nil {
		return x.VideoBindConfigureId
	}
	return 0
}

type SignalVideoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalVideo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalVideoList) Reset() {
	*x = SignalVideoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalVideoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalVideoList) ProtoMessage() {}

func (x *SignalVideoList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalVideoList.ProtoReflect.Descriptor instead.
func (*SignalVideoList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{48}
}

func (x *SignalVideoList) GetItems() []*SignalVideo {
	if x != nil {
		return x.Items
	}
	return nil
}

type Ai struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal              *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalAcquisition   *SignalAcquisition `protobuf:"bytes,2,opt,name=signalAcquisition,proto3" json:"signalAcquisition,omitempty"`
	SignalAi            *SignalAi          `protobuf:"bytes,3,opt,name=signalAi,proto3" json:"signalAi,omitempty"`
	SignalThreshold     []*SignalThreshold `protobuf:"bytes,4,rep,name=signalThreshold,proto3" json:"signalThreshold,omitempty"`
	SignalBindConfigure *Configure         `protobuf:"bytes,5,opt,name=signalBindConfigure,proto3" json:"signalBindConfigure,omitempty"`
}

func (x *Ai) Reset() {
	*x = Ai{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ai) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ai) ProtoMessage() {}

func (x *Ai) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ai.ProtoReflect.Descriptor instead.
func (*Ai) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{49}
}

func (x *Ai) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Ai) GetSignalAcquisition() *SignalAcquisition {
	if x != nil {
		return x.SignalAcquisition
	}
	return nil
}

func (x *Ai) GetSignalAi() *SignalAi {
	if x != nil {
		return x.SignalAi
	}
	return nil
}

func (x *Ai) GetSignalThreshold() []*SignalThreshold {
	if x != nil {
		return x.SignalThreshold
	}
	return nil
}

func (x *Ai) GetSignalBindConfigure() *Configure {
	if x != nil {
		return x.SignalBindConfigure
	}
	return nil
}

type AiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Ai `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AiList) Reset() {
	*x = AiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AiList) ProtoMessage() {}

func (x *AiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AiList.ProtoReflect.Descriptor instead.
func (*AiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{50}
}

func (x *AiList) GetItems() []*Ai {
	if x != nil {
		return x.Items
	}
	return nil
}

type Di struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal              *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalAcquisition   *SignalAcquisition `protobuf:"bytes,2,opt,name=signalAcquisition,proto3" json:"signalAcquisition,omitempty"`
	SignalDi            *SignalDi          `protobuf:"bytes,3,opt,name=signalDi,proto3" json:"signalDi,omitempty"`
	SignalThreshold     []*SignalThreshold `protobuf:"bytes,4,rep,name=signalThreshold,proto3" json:"signalThreshold,omitempty"`
	SignalBindConfigure *Configure         `protobuf:"bytes,5,opt,name=signalBindConfigure,proto3" json:"signalBindConfigure,omitempty"`
}

func (x *Di) Reset() {
	*x = Di{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Di) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Di) ProtoMessage() {}

func (x *Di) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Di.ProtoReflect.Descriptor instead.
func (*Di) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{51}
}

func (x *Di) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Di) GetSignalAcquisition() *SignalAcquisition {
	if x != nil {
		return x.SignalAcquisition
	}
	return nil
}

func (x *Di) GetSignalDi() *SignalDi {
	if x != nil {
		return x.SignalDi
	}
	return nil
}

func (x *Di) GetSignalThreshold() []*SignalThreshold {
	if x != nil {
		return x.SignalThreshold
	}
	return nil
}

func (x *Di) GetSignalBindConfigure() *Configure {
	if x != nil {
		return x.SignalBindConfigure
	}
	return nil
}

type DiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Di `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DiList) Reset() {
	*x = DiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiList) ProtoMessage() {}

func (x *DiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiList.ProtoReflect.Descriptor instead.
func (*DiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{52}
}

func (x *DiList) GetItems() []*Di {
	if x != nil {
		return x.Items
	}
	return nil
}

type Si struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal              *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalAcquisition   *SignalAcquisition `protobuf:"bytes,2,opt,name=signalAcquisition,proto3" json:"signalAcquisition,omitempty"`
	SignalSi            *SignalSi          `protobuf:"bytes,3,opt,name=signalSi,proto3" json:"signalSi,omitempty"`
	SignalBindConfigure *Configure         `protobuf:"bytes,4,opt,name=signalBindConfigure,proto3" json:"signalBindConfigure,omitempty"`
}

func (x *Si) Reset() {
	*x = Si{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Si) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Si) ProtoMessage() {}

func (x *Si) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Si.ProtoReflect.Descriptor instead.
func (*Si) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{53}
}

func (x *Si) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Si) GetSignalAcquisition() *SignalAcquisition {
	if x != nil {
		return x.SignalAcquisition
	}
	return nil
}

func (x *Si) GetSignalSi() *SignalSi {
	if x != nil {
		return x.SignalSi
	}
	return nil
}

func (x *Si) GetSignalBindConfigure() *Configure {
	if x != nil {
		return x.SignalBindConfigure
	}
	return nil
}

type SiList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Si `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SiList) Reset() {
	*x = SiList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiList) ProtoMessage() {}

func (x *SiList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiList.ProtoReflect.Descriptor instead.
func (*SiList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{54}
}

func (x *SiList) GetItems() []*Si {
	if x != nil {
		return x.Items
	}
	return nil
}

type VAi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal          *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalVirtual   *SignalVirtual     `protobuf:"bytes,2,opt,name=signalVirtual,proto3" json:"signalVirtual,omitempty"`
	SignalAi        *SignalAi          `protobuf:"bytes,3,opt,name=signalAi,proto3" json:"signalAi,omitempty"`
	SignalThreshold []*SignalThreshold `protobuf:"bytes,4,rep,name=signalThreshold,proto3" json:"signalThreshold,omitempty"`
}

func (x *VAi) Reset() {
	*x = VAi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VAi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VAi) ProtoMessage() {}

func (x *VAi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VAi.ProtoReflect.Descriptor instead.
func (*VAi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{55}
}

func (x *VAi) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *VAi) GetSignalVirtual() *SignalVirtual {
	if x != nil {
		return x.SignalVirtual
	}
	return nil
}

func (x *VAi) GetSignalAi() *SignalAi {
	if x != nil {
		return x.SignalAi
	}
	return nil
}

func (x *VAi) GetSignalThreshold() []*SignalThreshold {
	if x != nil {
		return x.SignalThreshold
	}
	return nil
}

type VAIList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VAi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VAIList) Reset() {
	*x = VAIList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VAIList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VAIList) ProtoMessage() {}

func (x *VAIList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VAIList.ProtoReflect.Descriptor instead.
func (*VAIList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{56}
}

func (x *VAIList) GetItems() []*VAi {
	if x != nil {
		return x.Items
	}
	return nil
}

type VDi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal          *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalVirtual   *SignalVirtual     `protobuf:"bytes,2,opt,name=signalVirtual,proto3" json:"signalVirtual,omitempty"`
	SignalDi        *SignalDi          `protobuf:"bytes,3,opt,name=signalDi,proto3" json:"signalDi,omitempty"`
	SignalThreshold []*SignalThreshold `protobuf:"bytes,4,rep,name=signalThreshold,proto3" json:"signalThreshold,omitempty"`
}

func (x *VDi) Reset() {
	*x = VDi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VDi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDi) ProtoMessage() {}

func (x *VDi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDi.ProtoReflect.Descriptor instead.
func (*VDi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{57}
}

func (x *VDi) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *VDi) GetSignalVirtual() *SignalVirtual {
	if x != nil {
		return x.SignalVirtual
	}
	return nil
}

func (x *VDi) GetSignalDi() *SignalDi {
	if x != nil {
		return x.SignalDi
	}
	return nil
}

func (x *VDi) GetSignalThreshold() []*SignalThreshold {
	if x != nil {
		return x.SignalThreshold
	}
	return nil
}

type VDIList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VDi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VDIList) Reset() {
	*x = VDIList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VDIList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VDIList) ProtoMessage() {}

func (x *VDIList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VDIList.ProtoReflect.Descriptor instead.
func (*VDIList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{58}
}

func (x *VDIList) GetItems() []*VDi {
	if x != nil {
		return x.Items
	}
	return nil
}

type VSi struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal        *Signal        `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalVirtual *SignalVirtual `protobuf:"bytes,2,opt,name=signalVirtual,proto3" json:"signalVirtual,omitempty"`
	SignalSi      *SignalSi      `protobuf:"bytes,3,opt,name=signalSi,proto3" json:"signalSi,omitempty"`
}

func (x *VSi) Reset() {
	*x = VSi{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VSi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VSi) ProtoMessage() {}

func (x *VSi) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VSi.ProtoReflect.Descriptor instead.
func (*VSi) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{59}
}

func (x *VSi) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *VSi) GetSignalVirtual() *SignalVirtual {
	if x != nil {
		return x.SignalVirtual
	}
	return nil
}

func (x *VSi) GetSignalSi() *SignalSi {
	if x != nil {
		return x.SignalSi
	}
	return nil
}

type VSIList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*VSi `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VSIList) Reset() {
	*x = VSIList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VSIList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VSIList) ProtoMessage() {}

func (x *VSIList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VSIList.ProtoReflect.Descriptor instead.
func (*VSIList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{60}
}

func (x *VSIList) GetItems() []*VSi {
	if x != nil {
		return x.Items
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal              *Signal            `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalAcquisition   *SignalAcquisition `protobuf:"bytes,2,opt,name=signalAcquisition,proto3" json:"signalAcquisition,omitempty"`
	SignalBindConfigure *Configure         `protobuf:"bytes,4,opt,name=signalBindConfigure,proto3" json:"signalBindConfigure,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{61}
}

func (x *Output) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Output) GetSignalAcquisition() *SignalAcquisition {
	if x != nil {
		return x.SignalAcquisition
	}
	return nil
}

func (x *Output) GetSignalBindConfigure() *Configure {
	if x != nil {
		return x.SignalBindConfigure
	}
	return nil
}

type OutputList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Output `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OutputList) Reset() {
	*x = OutputList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputList) ProtoMessage() {}

func (x *OutputList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputList.ProtoReflect.Descriptor instead.
func (*OutputList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{62}
}

func (x *OutputList) GetItems() []*Output {
	if x != nil {
		return x.Items
	}
	return nil
}

type Video struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signal             *Signal      `protobuf:"bytes,1,opt,name=signal,proto3" json:"signal,omitempty"`
	SignalVideo        *SignalVideo `protobuf:"bytes,2,opt,name=signalVideo,proto3" json:"signalVideo,omitempty"`
	VideoBindConfigure *Configure   `protobuf:"bytes,3,opt,name=videoBindConfigure,proto3" json:"videoBindConfigure,omitempty"`
}

func (x *Video) Reset() {
	*x = Video{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Video) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Video) ProtoMessage() {}

func (x *Video) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Video.ProtoReflect.Descriptor instead.
func (*Video) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{63}
}

func (x *Video) GetSignal() *Signal {
	if x != nil {
		return x.Signal
	}
	return nil
}

func (x *Video) GetSignalVideo() *SignalVideo {
	if x != nil {
		return x.SignalVideo
	}
	return nil
}

func (x *Video) GetVideoBindConfigure() *Configure {
	if x != nil {
		return x.VideoBindConfigure
	}
	return nil
}

type VideoList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Video `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VideoList) Reset() {
	*x = VideoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoList) ProtoMessage() {}

func (x *VideoList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoList.ProtoReflect.Descriptor instead.
func (*VideoList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{64}
}

func (x *VideoList) GetItems() []*Video {
	if x != nil {
		return x.Items
	}
	return nil
}

type SignalUnification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"signalUnificationId" gorm:"primary_key;AUTO_INCREMENT" structs:"signal_unification_id"
	SignalUnificationId int32 `protobuf:"varint,1,opt,name=signal_unification_id,json=signalUnificationId,proto3" json:"signalUnificationId" gorm:"primary_key;AUTO_INCREMENT" structs:"signal_unification_id"`
	//@gotags: json:"signalUnificationName" structs:"signal_unification_name"
	SignalUnificationName string `protobuf:"bytes,2,opt,name=signal_unification_name,json=signalUnificationName,proto3" json:"signalUnificationName" structs:"signal_unification_name"`
	//@gotags: json:"signalUnificationAlias" structs:"signal_unification_alias"
	SignalUnificationAlias string `protobuf:"bytes,3,opt,name=signal_unification_alias,json=signalUnificationAlias,proto3" json:"signalUnificationAlias" structs:"signal_unification_alias"`
	//@gotags: json:"signalUnificationRelatedSignalId" structs:"signal_unification_related_signal_id"
	SignalUnificationRelatedSignalId int32 `protobuf:"varint,4,opt,name=signal_unification_related_signal_id,json=signalUnificationRelatedSignalId,proto3" json:"signalUnificationRelatedSignalId" structs:"signal_unification_related_signal_id"`
	//@gotags: json:"signalUnificationNote" structs:"signal_unification_note"
	SignalUnificationNote string `protobuf:"bytes,5,opt,name=signal_unification_note,json=signalUnificationNote,proto3" json:"signalUnificationNote" structs:"signal_unification_note"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,7,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,9,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,12,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *SignalUnification) Reset() {
	*x = SignalUnification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalUnification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalUnification) ProtoMessage() {}

func (x *SignalUnification) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalUnification.ProtoReflect.Descriptor instead.
func (*SignalUnification) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{65}
}

func (x *SignalUnification) GetSignalUnificationId() int32 {
	if x != nil {
		return x.SignalUnificationId
	}
	return 0
}

func (x *SignalUnification) GetSignalUnificationName() string {
	if x != nil {
		return x.SignalUnificationName
	}
	return ""
}

func (x *SignalUnification) GetSignalUnificationAlias() string {
	if x != nil {
		return x.SignalUnificationAlias
	}
	return ""
}

func (x *SignalUnification) GetSignalUnificationRelatedSignalId() int32 {
	if x != nil {
		return x.SignalUnificationRelatedSignalId
	}
	return 0
}

func (x *SignalUnification) GetSignalUnificationNote() string {
	if x != nil {
		return x.SignalUnificationNote
	}
	return ""
}

func (x *SignalUnification) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SignalUnification) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *SignalUnification) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SignalUnification) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *SignalUnification) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *SignalUnification) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SignalUnification) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type SignalUnificationList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*SignalUnification `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SignalUnificationList) Reset() {
	*x = SignalUnificationList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalUnificationList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalUnificationList) ProtoMessage() {}

func (x *SignalUnificationList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalUnificationList.ProtoReflect.Descriptor instead.
func (*SignalUnificationList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{66}
}

func (x *SignalUnificationList) GetItems() []*SignalUnification {
	if x != nil {
		return x.Items
	}
	return nil
}

type Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"agentId" gorm:"primary_key;AUTO_INCREMENT" structs:"agent_id"
	AgentId int32 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agentId" gorm:"primary_key;AUTO_INCREMENT" structs:"agent_id"`
	//@gotags: json:"agentName" structs:"agent_name"
	AgentName string `protobuf:"bytes,2,opt,name=agent_name,json=agentName,proto3" json:"agentName" structs:"agent_name"`
	//@gotags: json:"agentNote" structs:"agent_note"
	AgentNote string `protobuf:"bytes,3,opt,name=agent_note,json=agentNote,proto3" json:"agentNote" structs:"agent_note"`
	//@gotags: json:"metadataId" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,4,opt,name=metadata_id,json=metadataId,proto3" json:"metadataId" structs:"metadata_id"`
	//@gotags: json:"configureId" structs:"configure_id"
	ConfigureId int32 `protobuf:"varint,5,opt,name=configure_id,json=configureId,proto3" json:"configureId" structs:"configure_id"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,7,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,9,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,12,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Agent) Reset() {
	*x = Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Agent) ProtoMessage() {}

func (x *Agent) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Agent.ProtoReflect.Descriptor instead.
func (*Agent) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{67}
}

func (x *Agent) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *Agent) GetAgentName() string {
	if x != nil {
		return x.AgentName
	}
	return ""
}

func (x *Agent) GetAgentNote() string {
	if x != nil {
		return x.AgentNote
	}
	return ""
}

func (x *Agent) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *Agent) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *Agent) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Agent) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Agent) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Agent) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Agent) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Agent) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Agent) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type AgentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Agent `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AgentList) Reset() {
	*x = AgentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentList) ProtoMessage() {}

func (x *AgentList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentList.ProtoReflect.Descriptor instead.
func (*AgentList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{68}
}

func (x *AgentList) GetItems() []*Agent {
	if x != nil {
		return x.Items
	}
	return nil
}

type FsuType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"fsuTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"fsu_type_id"
	FsuTypeId int32 `protobuf:"varint,1,opt,name=fsu_type_id,json=fsuTypeId,proto3" json:"fsuTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"fsu_type_id"`
	//@gotags: json:"fsuTypeName" structs:"fsu_type_name"
	FsuTypeName string `protobuf:"bytes,2,opt,name=fsu_type_name,json=fsuTypeName,proto3" json:"fsuTypeName" structs:"fsu_type_name"`
	//@gotags: json:"dataAnalysisMode" structs:"data_analysis_mode"
	DataAnalysisMode int32 `protobuf:"varint,3,opt,name=data_analysis_mode,json=dataAnalysisMode,proto3" json:"dataAnalysisMode" structs:"data_analysis_mode"`
	//@gotags: json:"newInstanceName" structs:"new_instance_name"
	NewInstanceName string `protobuf:"bytes,4,opt,name=new_instance_name,json=newInstanceName,proto3" json:"newInstanceName" structs:"new_instance_name"`
	//@gotags: json:"metadataId" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,5,opt,name=metadata_id,json=metadataId,proto3" json:"metadataId" structs:"metadata_id"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,7,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,9,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,10,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,12,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *FsuType) Reset() {
	*x = FsuType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsuType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsuType) ProtoMessage() {}

func (x *FsuType) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsuType.ProtoReflect.Descriptor instead.
func (*FsuType) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{69}
}

func (x *FsuType) GetFsuTypeId() int32 {
	if x != nil {
		return x.FsuTypeId
	}
	return 0
}

func (x *FsuType) GetFsuTypeName() string {
	if x != nil {
		return x.FsuTypeName
	}
	return ""
}

func (x *FsuType) GetDataAnalysisMode() int32 {
	if x != nil {
		return x.DataAnalysisMode
	}
	return 0
}

func (x *FsuType) GetNewInstanceName() string {
	if x != nil {
		return x.NewInstanceName
	}
	return ""
}

func (x *FsuType) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *FsuType) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FsuType) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *FsuType) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *FsuType) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *FsuType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *FsuType) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *FsuType) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type FsuTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FsuType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FsuTypeList) Reset() {
	*x = FsuTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsuTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsuTypeList) ProtoMessage() {}

func (x *FsuTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsuTypeList.ProtoReflect.Descriptor instead.
func (*FsuTypeList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{70}
}

func (x *FsuTypeList) GetItems() []*FsuType {
	if x != nil {
		return x.Items
	}
	return nil
}

type Fsu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"fsuId" gorm:"primary_key;AUTO_INCREMENT" structs:"fsu_id"
	FsuId int32 `protobuf:"varint,1,opt,name=fsu_id,json=fsuId,proto3" json:"fsuId" gorm:"primary_key;AUTO_INCREMENT" structs:"fsu_id"`
	//@gotags: json:"fsuTypeId" structs:"fsu_type_id"
	FsuTypeId int32 `protobuf:"varint,2,opt,name=fsu_type_id,json=fsuTypeId,proto3" json:"fsuTypeId" structs:"fsu_type_id"`
	//@gotags: json:"fsuName" structs:"fsu_name"
	FsuName string `protobuf:"bytes,3,opt,name=fsu_name,json=fsuName,proto3" json:"fsuName" structs:"fsu_name"`
	//@gotags: json:"metadataId" structs:"metadata_id"
	MetadataId int32 `protobuf:"varint,4,opt,name=metadata_id,json=metadataId,proto3" json:"metadataId" structs:"metadata_id"`
	//@gotags: json:"configureId" structs:"configure_id"
	ConfigureId int32 `protobuf:"varint,5,opt,name=configure_id,json=configureId,proto3" json:"configureId" structs:"configure_id"`
	//@gotags: json:"agentId" structs:"agent_id"
	AgentId int32 `protobuf:"varint,6,opt,name=agent_id,json=agentId,proto3" json:"agentId" structs:"agent_id"`
	//@gotags: json:"relatedMetadataId" structs:"related_metadata_id"
	RelatedMetadataId int32 `protobuf:"varint,7,opt,name=related_metadata_id,json=relatedMetadataId,proto3" json:"relatedMetadataId" structs:"related_metadata_id"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,9,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,11,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,14,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Fsu) Reset() {
	*x = Fsu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fsu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fsu) ProtoMessage() {}

func (x *Fsu) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fsu.ProtoReflect.Descriptor instead.
func (*Fsu) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{71}
}

func (x *Fsu) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *Fsu) GetFsuTypeId() int32 {
	if x != nil {
		return x.FsuTypeId
	}
	return 0
}

func (x *Fsu) GetFsuName() string {
	if x != nil {
		return x.FsuName
	}
	return ""
}

func (x *Fsu) GetMetadataId() int32 {
	if x != nil {
		return x.MetadataId
	}
	return 0
}

func (x *Fsu) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *Fsu) GetAgentId() int32 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

func (x *Fsu) GetRelatedMetadataId() int32 {
	if x != nil {
		return x.RelatedMetadataId
	}
	return 0
}

func (x *Fsu) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Fsu) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Fsu) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Fsu) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Fsu) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Fsu) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Fsu) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type FsuList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Fsu `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FsuList) Reset() {
	*x = FsuList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsuList) ProtoMessage() {}

func (x *FsuList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsuList.ProtoReflect.Descriptor instead.
func (*FsuList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{72}
}

func (x *FsuList) GetItems() []*Fsu {
	if x != nil {
		return x.Items
	}
	return nil
}

type DriverType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"driverTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"driver_type_id"
	DriverTypeId int32 `protobuf:"varint,1,opt,name=driver_type_id,json=driverTypeId,proto3" json:"driverTypeId" gorm:"primary_key;AUTO_INCREMENT" structs:"driver_type_id"`
	//@gotags: json:"driverTypeName" structs:"driver_type_name"
	DriverTypeName string `protobuf:"bytes,2,opt,name=driver_type_name,json=driverTypeName,proto3" json:"driverTypeName" structs:"driver_type_name"`
	//@gotags: json:"driverTypeFileName" structs:"driver_type_file_name"
	DriverTypeFileName string `protobuf:"bytes,3,opt,name=driver_type_file_name,json=driverTypeFileName,proto3" json:"driverTypeFileName" structs:"driver_type_file_name"`
	//@gotags: json:"driverTypeParameterMetadataId" structs:"driver_type_parameter_metadata_id"
	DriverTypeParameterMetadataId int32 `protobuf:"varint,4,opt,name=driver_type_parameter_metadata_id,json=driverTypeParameterMetadataId,proto3" json:"driverTypeParameterMetadataId" structs:"driver_type_parameter_metadata_id"`
	//@gotags: json:"driverTypeNote" structs:"driver_type_note"
	DriverTypeNote string `protobuf:"bytes,5,opt,name=driver_type_note,json=driverTypeNote,proto3" json:"driverTypeNote" structs:"driver_type_note"`
	//@gotags: json:"driverTypeAcquisitePeriod" structs:"driver_type_acquisite_period"
	DriverTypeAcquisitePeriod int32 `protobuf:"varint,6,opt,name=driver_type_acquisite_period,json=driverTypeAcquisitePeriod,proto3" json:"driverTypeAcquisitePeriod" structs:"driver_type_acquisite_period"`
	//@gotags: json:"driverTypeTimeoutCount" structs:"driver_type_timeout_count"
	DriverTypeTimeoutCount int32 `protobuf:"varint,7,opt,name=driver_type_timeout_count,json=driverTypeTimeoutCount,proto3" json:"driverTypeTimeoutCount" structs:"driver_type_timeout_count"`
	//@gotags: json:"driverTypeResetCount" structs:"driver_type_reset_count"
	DriverTypeResetCount int32 `protobuf:"varint,8,opt,name=driver_type_reset_count,json=driverTypeResetCount,proto3" json:"driverTypeResetCount" structs:"driver_type_reset_count"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,10,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,12,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,13,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,15,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *DriverType) Reset() {
	*x = DriverType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverType) ProtoMessage() {}

func (x *DriverType) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverType.ProtoReflect.Descriptor instead.
func (*DriverType) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{73}
}

func (x *DriverType) GetDriverTypeId() int32 {
	if x != nil {
		return x.DriverTypeId
	}
	return 0
}

func (x *DriverType) GetDriverTypeName() string {
	if x != nil {
		return x.DriverTypeName
	}
	return ""
}

func (x *DriverType) GetDriverTypeFileName() string {
	if x != nil {
		return x.DriverTypeFileName
	}
	return ""
}

func (x *DriverType) GetDriverTypeParameterMetadataId() int32 {
	if x != nil {
		return x.DriverTypeParameterMetadataId
	}
	return 0
}

func (x *DriverType) GetDriverTypeNote() string {
	if x != nil {
		return x.DriverTypeNote
	}
	return ""
}

func (x *DriverType) GetDriverTypeAcquisitePeriod() int32 {
	if x != nil {
		return x.DriverTypeAcquisitePeriod
	}
	return 0
}

func (x *DriverType) GetDriverTypeTimeoutCount() int32 {
	if x != nil {
		return x.DriverTypeTimeoutCount
	}
	return 0
}

func (x *DriverType) GetDriverTypeResetCount() int32 {
	if x != nil {
		return x.DriverTypeResetCount
	}
	return 0
}

func (x *DriverType) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DriverType) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *DriverType) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DriverType) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *DriverType) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *DriverType) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *DriverType) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DriverTypeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*DriverType `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DriverTypeList) Reset() {
	*x = DriverTypeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverTypeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverTypeList) ProtoMessage() {}

func (x *DriverTypeList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverTypeList.ProtoReflect.Descriptor instead.
func (*DriverTypeList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{74}
}

func (x *DriverTypeList) GetItems() []*DriverType {
	if x != nil {
		return x.Items
	}
	return nil
}

type Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"driverId" gorm:"primary_key;AUTO_INCREMENT" structs:"driver_id"
	DriverId int32 `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driverId" gorm:"primary_key;AUTO_INCREMENT" structs:"driver_id"`
	//@gotags: json:"driverTypeId" structs:"driver_type_id"
	DriverTypeId int32 `protobuf:"varint,2,opt,name=driver_type_id,json=driverTypeId,proto3" json:"driverTypeId" structs:"driver_type_id"`
	//@gotags: json:"fsuId" structs:"fsu_id"
	FsuId int32 `protobuf:"varint,3,opt,name=fsu_id,json=fsuId,proto3" json:"fsuId" structs:"fsu_id"`
	//@gotags: json:"relatedFlagConfigureId" structs:"related_flag_configure_id"
	RelatedFlagConfigureId int32 `protobuf:"varint,4,opt,name=related_flag_configure_id,json=relatedFlagConfigureId,proto3" json:"relatedFlagConfigureId" structs:"related_flag_configure_id"`
	//@gotags: json:"driverName" structs:"driver_name"
	DriverName string `protobuf:"bytes,5,opt,name=driver_name,json=driverName,proto3" json:"driverName" structs:"driver_name"`
	//@gotags: json:"driverParameterMetadataId" structs:"driver_parameter_metadata_id"
	DriverParameterMetadataId int32 `protobuf:"varint,6,opt,name=driver_parameter_metadata_id,json=driverParameterMetadataId,proto3" json:"driverParameterMetadataId" structs:"driver_parameter_metadata_id"`
	//@gotags: json:"driverParameterConfigureId" structs:"driver_parameter_configure_id"
	DriverParameterConfigureId int32 `protobuf:"varint,7,opt,name=driver_parameter_configure_id,json=driverParameterConfigureId,proto3" json:"driverParameterConfigureId" structs:"driver_parameter_configure_id"`
	//@gotags: json:"driverAcquisitePeriod" structs:"driver_acquisite_period"
	DriverAcquisitePeriod int32 `protobuf:"varint,8,opt,name=driver_acquisite_period,json=driverAcquisitePeriod,proto3" json:"driverAcquisitePeriod" structs:"driver_acquisite_period"`
	//@gotags: json:"driverTimeoutCount" structs:"driver_timeout_count"
	DriverTimeoutCount int32 `protobuf:"varint,9,opt,name=driver_timeout_count,json=driverTimeoutCount,proto3" json:"driverTimeoutCount" structs:"driver_timeout_count"`
	//@gotags: json:"driverResetCount" structs:"driver_reset_count"
	DriverResetCount int32 `protobuf:"varint,10,opt,name=driver_reset_count,json=driverResetCount,proto3" json:"driverResetCount" structs:"driver_reset_count"`
	//@gotags: json:"isWriteLog" structs:"is_write_log"
	IsWriteLog bool `protobuf:"varint,11,opt,name=is_write_log,json=isWriteLog,proto3" json:"isWriteLog" structs:"is_write_log"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,13,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,15,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,16,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,17,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,18,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Driver) Reset() {
	*x = Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{75}
}

func (x *Driver) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *Driver) GetDriverTypeId() int32 {
	if x != nil {
		return x.DriverTypeId
	}
	return 0
}

func (x *Driver) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *Driver) GetRelatedFlagConfigureId() int32 {
	if x != nil {
		return x.RelatedFlagConfigureId
	}
	return 0
}

func (x *Driver) GetDriverName() string {
	if x != nil {
		return x.DriverName
	}
	return ""
}

func (x *Driver) GetDriverParameterMetadataId() int32 {
	if x != nil {
		return x.DriverParameterMetadataId
	}
	return 0
}

func (x *Driver) GetDriverParameterConfigureId() int32 {
	if x != nil {
		return x.DriverParameterConfigureId
	}
	return 0
}

func (x *Driver) GetDriverAcquisitePeriod() int32 {
	if x != nil {
		return x.DriverAcquisitePeriod
	}
	return 0
}

func (x *Driver) GetDriverTimeoutCount() int32 {
	if x != nil {
		return x.DriverTimeoutCount
	}
	return 0
}

func (x *Driver) GetDriverResetCount() int32 {
	if x != nil {
		return x.DriverResetCount
	}
	return 0
}

func (x *Driver) GetIsWriteLog() bool {
	if x != nil {
		return x.IsWriteLog
	}
	return false
}

func (x *Driver) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Driver) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Driver) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Driver) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Driver) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Driver) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Driver) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DriverList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Driver `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DriverList) Reset() {
	*x = DriverList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverList) ProtoMessage() {}

func (x *DriverList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverList.ProtoReflect.Descriptor instead.
func (*DriverList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{76}
}

func (x *DriverList) GetItems() []*Driver {
	if x != nil {
		return x.Items
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSuccess bool      `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"is_success,omitempty"`
	ErrorCode int32     `protobuf:"varint,2,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorDesc string    `protobuf:"bytes,3,opt,name=error_desc,json=errorDesc,proto3" json:"error_desc,omitempty"`
	ErrorRaw  string    `protobuf:"bytes,4,opt,name=error_raw,json=errorRaw,proto3" json:"error_raw,omitempty"`
	Result    *any1.Any `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{77}
}

func (x *Response) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *Response) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Response) GetErrorDesc() string {
	if x != nil {
		return x.ErrorDesc
	}
	return ""
}

func (x *Response) GetErrorRaw() string {
	if x != nil {
		return x.ErrorRaw
	}
	return ""
}

func (x *Response) GetResult() *any1.Any {
	if x != nil {
		return x.Result
	}
	return nil
}

type Department struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"departmentId" gorm:"primary_key;AUTO_INCREMENT" structs:"department_id"
	DepartmentId int32 `protobuf:"varint,1,opt,name=department_id,json=departmentId,proto3" json:"departmentId" gorm:"primary_key;AUTO_INCREMENT" structs:"department_id"`
	//@gotags: json:"parentDepartmentId" structs:"parent_department_id"
	ParentDepartmentId int32 `protobuf:"varint,2,opt,name=parent_department_id,json=parentDepartmentId,proto3" json:"parentDepartmentId" structs:"parent_department_id"`
	//@gotags: json:"departmentName" structs:"department_name"
	DepartmentName string `protobuf:"bytes,3,opt,name=department_name,json=departmentName,proto3" json:"departmentName" structs:"department_name"`
	//@gotags: json:"positionAmongBrothers" structs:"position_among_brothers"
	PositionAmongBrothers int32 `protobuf:"varint,4,opt,name=position_among_brothers,json=positionAmongBrothers,proto3" json:"positionAmongBrothers" structs:"position_among_brothers"`
	//@gotags: json:"leaderName" structs:"leader_name"
	LeaderName string `protobuf:"bytes,5,opt,name=leader_name,json=leaderName,proto3" json:"leaderName" structs:"leader_name"`
	//@gotags: json:"phone" structs:"phone"
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone" structs:"phone"`
	//@gotags: json:"Email" structs:"email"
	Email string `protobuf:"bytes,7,opt,name=email,proto3" json:"Email" structs:"email"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,9,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,11,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,12,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,13,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,14,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Department) Reset() {
	*x = Department{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Department) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Department) ProtoMessage() {}

func (x *Department) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Department.ProtoReflect.Descriptor instead.
func (*Department) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{78}
}

func (x *Department) GetDepartmentId() int32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *Department) GetParentDepartmentId() int32 {
	if x != nil {
		return x.ParentDepartmentId
	}
	return 0
}

func (x *Department) GetDepartmentName() string {
	if x != nil {
		return x.DepartmentName
	}
	return ""
}

func (x *Department) GetPositionAmongBrothers() int32 {
	if x != nil {
		return x.PositionAmongBrothers
	}
	return 0
}

func (x *Department) GetLeaderName() string {
	if x != nil {
		return x.LeaderName
	}
	return ""
}

func (x *Department) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Department) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Department) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Department) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Department) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Department) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Department) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Department) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Department) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type DepartmentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Department `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *DepartmentList) Reset() {
	*x = DepartmentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DepartmentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DepartmentList) ProtoMessage() {}

func (x *DepartmentList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DepartmentList.ProtoReflect.Descriptor instead.
func (*DepartmentList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{79}
}

func (x *DepartmentList) GetItems() []*Department {
	if x != nil {
		return x.Items
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userId" gorm:"primary_key;AUTO_INCREMENT" structs:"user_id"
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"userId" gorm:"primary_key;AUTO_INCREMENT" structs:"user_id"`
	//@gotags: json:"departmentId" structs:"department_id"
	DepartmentId int32 `protobuf:"varint,2,opt,name=department_id,json=departmentId,proto3" json:"departmentId" structs:"department_id"`
	//@gotags: json:"userName" structs:"user_name"
	UserName string `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"userName" structs:"user_name"`
	//@gotags: json:"userNick" structs:"user_nick"
	UserNick string `protobuf:"bytes,4,opt,name=user_nick,json=userNick,proto3" json:"userNick" structs:"user_nick"`
	//@gotags: json:"phone" structs:"phone"
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone" structs:"phone"`
	//@gotags: json:"email" structs:"email"
	Email string `protobuf:"bytes,6,opt,name=email,proto3" json:"email" structs:"email"`
	//@gotags: json:"sex" structs:"sex"
	Sex int32 `protobuf:"varint,7,opt,name=sex,proto3" json:"sex" structs:"sex"`
	//@gotags: json:"avatar" structs:"avatar"
	Avatar string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar" structs:"avatar"`
	//@gotags: json:"password" structs:"password"
	Password string `protobuf:"bytes,9,opt,name=password,proto3" json:"password" structs:"password"`
	//@gotags: json:"status" structs:"status"
	Status int32 `protobuf:"varint,10,opt,name=status,proto3" json:"status" structs:"status"`
	//@gotags: json:"remark" structs:"remark"
	Remark string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark" structs:"remark"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,13,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,15,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,16,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,17,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,18,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{80}
}

func (x *User) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *User) GetDepartmentId() int32 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetUserNick() string {
	if x != nil {
		return x.UserNick
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *User) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *User) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *User) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *User) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *User) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *User) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *User) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *User) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *User) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*User `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{81}
}

func (x *UserList) GetItems() []*User {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserAlias struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userId"
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"userId"`
	//@gotags: json:"userNick"
	UserNick string `protobuf:"bytes,2,opt,name=user_nick,json=userNick,proto3" json:"userNick"`
}

func (x *UserAlias) Reset() {
	*x = UserAlias{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAlias) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAlias) ProtoMessage() {}

func (x *UserAlias) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAlias.ProtoReflect.Descriptor instead.
func (*UserAlias) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{82}
}

func (x *UserAlias) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserAlias) GetUserNick() string {
	if x != nil {
		return x.UserNick
	}
	return ""
}

type UserAliasList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserAlias `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserAliasList) Reset() {
	*x = UserAliasList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserAliasList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserAliasList) ProtoMessage() {}

func (x *UserAliasList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserAliasList.ProtoReflect.Descriptor instead.
func (*UserAliasList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{83}
}

func (x *UserAliasList) GetItems() []*UserAlias {
	if x != nil {
		return x.Items
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userName"
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"userName"`
	//@gotags: json:"password"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{84}
}

func (x *LoginRequest) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"token"
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token"`
	User  *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{85}
}

func (x *LoginResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type UserVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userName"
	UserName string `protobuf:"bytes,1,opt,name=user_name,json=userName,proto3" json:"userName"`
	//@gotags: json:"password"
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password"`
}

func (x *UserVerify) Reset() {
	*x = UserVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVerify) ProtoMessage() {}

func (x *UserVerify) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVerify.ProtoReflect.Descriptor instead.
func (*UserVerify) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{86}
}

func (x *UserVerify) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *UserVerify) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserVerifyResponse) Reset() {
	*x = UserVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserVerifyResponse) ProtoMessage() {}

func (x *UserVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserVerifyResponse.ProtoReflect.Descriptor instead.
func (*UserVerifyResponse) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{87}
}

func (x *UserVerifyResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"menuId" gorm:"primary_key" structs:"menu_id"
	MenuId int32 `protobuf:"varint,1,opt,name=menu_id,json=menuId,proto3" json:"menuId" gorm:"primary_key" structs:"menu_id"`
	//@gotags: json:"parentMenuId" structs:"parent_menu_id"
	ParentMenuId int32 `protobuf:"varint,2,opt,name=parent_menu_id,json=parentMenuId,proto3" json:"parentMenuId" structs:"parent_menu_id"`
	//@gotags: json:"menuName" structs:"menu_name"
	MenuName string `protobuf:"bytes,3,opt,name=menu_name,json=menuName,proto3" json:"menuName" structs:"menu_name"`
	//@gotags: json:"menuAlias" structs:"menu_alias"
	MenuAlias string `protobuf:"bytes,4,opt,name=menu_alias,json=menuAlias,proto3" json:"menuAlias" structs:"menu_alias"`
	//@gotags: json:"menuLevel" structs:"menu_level"
	MenuLevel int32 `protobuf:"varint,5,opt,name=menu_level,json=menuLevel,proto3" json:"menuLevel" structs:"menu_level"`
	//@gotags: json:"path" structs:"path"
	Path string `protobuf:"bytes,6,opt,name=path,proto3" json:"path" structs:"path"`
	//@gotags: json:"url" structs:"url"
	Url string `protobuf:"bytes,7,opt,name=url,proto3" json:"url" structs:"url"`
	//@gotags: json:"component" structs:"component"
	Component string `protobuf:"bytes,8,opt,name=component,proto3" json:"component" structs:"component"`
	//@gotags: json:"title" structs:"title"
	Title string `protobuf:"bytes,9,opt,name=title,proto3" json:"title" structs:"title"`
	//@gotags: json:"icon" structs:"icon"
	Icon string `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon" structs:"icon"`
	//@gotags: json:"sidebar" structs:"sidebar"
	Sidebar string `protobuf:"bytes,11,opt,name=sidebar,proto3" json:"sidebar" structs:"sidebar"`
	//@gotags: json:"isShow" structs:"is_show"
	IsShow bool `protobuf:"varint,12,opt,name=is_show,json=isShow,proto3" json:"isShow" structs:"is_show"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,14,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,16,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,17,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,18,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,19,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Menu) Reset() {
	*x = Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Menu) ProtoMessage() {}

func (x *Menu) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Menu.ProtoReflect.Descriptor instead.
func (*Menu) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{88}
}

func (x *Menu) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *Menu) GetParentMenuId() int32 {
	if x != nil {
		return x.ParentMenuId
	}
	return 0
}

func (x *Menu) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *Menu) GetMenuAlias() string {
	if x != nil {
		return x.MenuAlias
	}
	return ""
}

func (x *Menu) GetMenuLevel() int32 {
	if x != nil {
		return x.MenuLevel
	}
	return 0
}

func (x *Menu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Menu) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Menu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *Menu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Menu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Menu) GetSidebar() string {
	if x != nil {
		return x.Sidebar
	}
	return ""
}

func (x *Menu) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *Menu) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Menu) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Menu) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Menu) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Menu) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Menu) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Menu) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type MenuList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Menu `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MenuList) Reset() {
	*x = MenuList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuList) ProtoMessage() {}

func (x *MenuList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuList.ProtoReflect.Descriptor instead.
func (*MenuList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{89}
}

func (x *MenuList) GetItems() []*Menu {
	if x != nil {
		return x.Items
	}
	return nil
}

type Action struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"actionId" gorm:"primary_key;AUTO_INCREMENT" structs:"action_id"
	ActionId int32 `protobuf:"varint,1,opt,name=action_id,json=actionId,proto3" json:"actionId" gorm:"primary_key;AUTO_INCREMENT" structs:"action_id"`
	//@gotags: json:"actionName" structs:"action_name"
	ActionName string `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"actionName" structs:"action_name"`
	//@gotags: json:"actionAlias" structs:"action_alias"
	ActionAlias string `protobuf:"bytes,3,opt,name=action_alias,json=actionAlias,proto3" json:"actionAlias" structs:"action_alias"`
	//@gotags: json:"menuIdForGroup" structs:"action_group_id"
	ActionGroupId int32 `protobuf:"varint,4,opt,name=action_group_id,json=actionGroupId,proto3" json:"menuIdForGroup" structs:"action_group_id"`
	//@gotags: json:"url" structs:"url"
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url" structs:"url"`
	//@gotags: json:"method" structs:"method"
	Method string `protobuf:"bytes,6,opt,name=method,proto3" json:"method" structs:"method"`
	//@gotags: json:"actionType" structs:"action_type"
	ActionType int32 `protobuf:"varint,7,opt,name=action_type,json=actionType,proto3" json:"actionType" structs:"action_type"`
	//@gotags: json:"affectedServer" structs:"affected_server"
	AffectedServer int32 `protobuf:"varint,8,opt,name=affected_server,json=affectedServer,proto3" json:"affectedServer" structs:"affected_server"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,10,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,12,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,13,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,14,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,15,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Action) Reset() {
	*x = Action{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Action) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Action) ProtoMessage() {}

func (x *Action) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Action.ProtoReflect.Descriptor instead.
func (*Action) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{90}
}

func (x *Action) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *Action) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *Action) GetActionAlias() string {
	if x != nil {
		return x.ActionAlias
	}
	return ""
}

func (x *Action) GetActionGroupId() int32 {
	if x != nil {
		return x.ActionGroupId
	}
	return 0
}

func (x *Action) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Action) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *Action) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *Action) GetAffectedServer() int32 {
	if x != nil {
		return x.AffectedServer
	}
	return 0
}

func (x *Action) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Action) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Action) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Action) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Action) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Action) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Action) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type ActionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Action `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ActionList) Reset() {
	*x = ActionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionList) ProtoMessage() {}

func (x *ActionList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionList.ProtoReflect.Descriptor instead.
func (*ActionList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{91}
}

func (x *ActionList) GetItems() []*Action {
	if x != nil {
		return x.Items
	}
	return nil
}

type Role struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"roleId" gorm:"primary_key;AUTO_INCREMENT" structs:"role_id"
	RoleId int32 `protobuf:"varint,1,opt,name=role_id,json=roleId,proto3" json:"roleId" gorm:"primary_key;AUTO_INCREMENT" structs:"role_id"`
	//@gotags: json:"roleName" structs:"role_name"
	RoleName string `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"roleName" structs:"role_name"`
	//@gotags: json:"roleAlias" structs:"role_alias"
	RoleAlias string `protobuf:"bytes,3,opt,name=role_alias,json=roleAlias,proto3" json:"roleAlias" structs:"role_alias"`
	//@gotags: json:"roleNote" structs:"role_note"
	RoleNote string `protobuf:"bytes,4,opt,name=role_note,json=roleNote,proto3" json:"roleNote" structs:"role_note"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,6,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,8,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,11,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *Role) Reset() {
	*x = Role{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Role) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Role) ProtoMessage() {}

func (x *Role) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Role.ProtoReflect.Descriptor instead.
func (*Role) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{92}
}

func (x *Role) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *Role) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *Role) GetRoleAlias() string {
	if x != nil {
		return x.RoleAlias
	}
	return ""
}

func (x *Role) GetRoleNote() string {
	if x != nil {
		return x.RoleNote
	}
	return ""
}

func (x *Role) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Role) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Role) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Role) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *Role) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Role) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *Role) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type RoleList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Role `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *RoleList) Reset() {
	*x = RoleList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoleList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleList) ProtoMessage() {}

func (x *RoleList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleList.ProtoReflect.Descriptor instead.
func (*RoleList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{93}
}

func (x *RoleList) GetItems() []*Role {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userId"
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"userId"`
	//@gotags: json:"actionId"
	ActionId int32 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"actionId"`
	//@gotags: json:"method"
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method"`
}

func (x *UserPolicy) Reset() {
	*x = UserPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicy) ProtoMessage() {}

func (x *UserPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicy.ProtoReflect.Descriptor instead.
func (*UserPolicy) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{94}
}

func (x *UserPolicy) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserPolicy) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *UserPolicy) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type UserPolicyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*UserPolicy `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserPolicyList) Reset() {
	*x = UserPolicyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPolicyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPolicyList) ProtoMessage() {}

func (x *UserPolicyList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPolicyList.ProtoReflect.Descriptor instead.
func (*UserPolicyList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{95}
}

func (x *UserPolicyList) GetItems() []*UserPolicy {
	if x != nil {
		return x.Items
	}
	return nil
}

type GroupPolicy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"groupId"
	GroupId int32 `protobuf:"varint,1,opt,name=group_id,json=groupId,proto3" json:"groupId"`
	//@gotags: json:"actionId"
	ActionId int32 `protobuf:"varint,2,opt,name=action_id,json=actionId,proto3" json:"actionId"`
	//@gotags: json:"method"
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method"`
}

func (x *GroupPolicy) Reset() {
	*x = GroupPolicy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPolicy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPolicy) ProtoMessage() {}

func (x *GroupPolicy) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPolicy.ProtoReflect.Descriptor instead.
func (*GroupPolicy) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{96}
}

func (x *GroupPolicy) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *GroupPolicy) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *GroupPolicy) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

type GroupPolicyList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*GroupPolicy `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GroupPolicyList) Reset() {
	*x = GroupPolicyList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupPolicyList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupPolicyList) ProtoMessage() {}

func (x *GroupPolicyList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupPolicyList.ProtoReflect.Descriptor instead.
func (*GroupPolicyList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{97}
}

func (x *GroupPolicyList) GetItems() []*GroupPolicy {
	if x != nil {
		return x.Items
	}
	return nil
}

type JoinGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userId"
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"userId"`
	//@gotags: json:"groupId"
	GroupId int32 `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"groupId"`
}

func (x *JoinGroup) Reset() {
	*x = JoinGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroup) ProtoMessage() {}

func (x *JoinGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroup.ProtoReflect.Descriptor instead.
func (*JoinGroup) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{98}
}

func (x *JoinGroup) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *JoinGroup) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

type JoinGroupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*JoinGroup `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *JoinGroupList) Reset() {
	*x = JoinGroupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinGroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinGroupList) ProtoMessage() {}

func (x *JoinGroupList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinGroupList.ProtoReflect.Descriptor instead.
func (*JoinGroupList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{99}
}

func (x *JoinGroupList) GetItems() []*JoinGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

type GrantResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"isSuccess"
	IsSuccess bool `protobuf:"varint,1,opt,name=is_success,json=isSuccess,proto3" json:"isSuccess"`
	//@gotags: json:"desc"
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc"`
}

func (x *GrantResult) Reset() {
	*x = GrantResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantResult) ProtoMessage() {}

func (x *GrantResult) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantResult.ProtoReflect.Descriptor instead.
func (*GrantResult) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{100}
}

func (x *GrantResult) GetIsSuccess() bool {
	if x != nil {
		return x.IsSuccess
	}
	return false
}

func (x *GrantResult) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type ActionGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"actionGroupId" gorm:"primary_key" structs:"action_group_id"
	ActionGroupId int32 `protobuf:"varint,1,opt,name=action_group_id,json=actionGroupId,proto3" json:"actionGroupId" gorm:"primary_key" structs:"action_group_id"`
	//@gotags: json:"parentActoinGroupId" structs:"parent_action_group_id"
	ParentActionGroupId int32 `protobuf:"varint,2,opt,name=parent_action_group_id,json=parentActionGroupId,proto3" json:"parentActoinGroupId" structs:"parent_action_group_id"`
	//@gotags: json:"actionGroupName" structs:"action_group_name"
	ActionGroupName string `protobuf:"bytes,3,opt,name=action_group_name,json=actionGroupName,proto3" json:"actionGroupName" structs:"action_group_name"`
	//@gotags: json:"actionGroupAlias" structs:"action_group_alias"
	ActionGroupAlias string `protobuf:"bytes,4,opt,name=action_group_alias,json=actionGroupAlias,proto3" json:"actionGroupAlias" structs:"action_group_alias"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,6,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,8,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,10,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,11,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *ActionGroup) Reset() {
	*x = ActionGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGroup) ProtoMessage() {}

func (x *ActionGroup) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGroup.ProtoReflect.Descriptor instead.
func (*ActionGroup) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{101}
}

func (x *ActionGroup) GetActionGroupId() int32 {
	if x != nil {
		return x.ActionGroupId
	}
	return 0
}

func (x *ActionGroup) GetParentActionGroupId() int32 {
	if x != nil {
		return x.ParentActionGroupId
	}
	return 0
}

func (x *ActionGroup) GetActionGroupName() string {
	if x != nil {
		return x.ActionGroupName
	}
	return ""
}

func (x *ActionGroup) GetActionGroupAlias() string {
	if x != nil {
		return x.ActionGroupAlias
	}
	return ""
}

func (x *ActionGroup) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActionGroup) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *ActionGroup) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActionGroup) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *ActionGroup) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *ActionGroup) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *ActionGroup) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type ActionGroupList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ActionGroup `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ActionGroupList) Reset() {
	*x = ActionGroupList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionGroupList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionGroupList) ProtoMessage() {}

func (x *ActionGroupList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionGroupList.ProtoReflect.Descriptor instead.
func (*ActionGroupList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{102}
}

func (x *ActionGroupList) GetItems() []*ActionGroup {
	if x != nil {
		return x.Items
	}
	return nil
}

type MenuAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"menuActionId" gorm:"primary_key;AUTO_INCREMENT" structs:"menu_action_id"
	MenuActionId int32 `protobuf:"varint,1,opt,name=menu_action_id,json=menuActionId,proto3" json:"menuActionId" gorm:"primary_key;AUTO_INCREMENT" structs:"menu_action_id"`
	//@gotags: json:"menuName" structs:"menu_name"
	MenuName string `protobuf:"bytes,2,opt,name=menu_name,json=menuName,proto3" json:"menuName" structs:"menu_name"`
	//@gotags: json:"actionName" structs:"action_name"
	ActionName string `protobuf:"bytes,3,opt,name=action_name,json=actionName,proto3" json:"actionName" structs:"action_name"`
	//@gotags: json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"createdAt" gorm:"serializer:pbtimestamp;type:time" structs:"created_at"`
	//@gotags: json:"createdBy" structs:"created_by"
	CreatedBy int32 `protobuf:"varint,5,opt,name=created_by,json=createdBy,proto3" json:"createdBy" structs:"created_by"`
	//@gotags: json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updatedAt" gorm:"serializer:pbtimestamp;type:time" structs:"updated_at"`
	//@gotags: json:"updatedBy" structs:"updated_by"
	UpdatedBy int32 `protobuf:"varint,7,opt,name=updated_by,json=updatedBy,proto3" json:"updatedBy" structs:"updated_by"`
	//@gotags: json:"isDeleted" structs:"is_deleted"
	IsDeleted bool `protobuf:"varint,8,opt,name=is_deleted,json=isDeleted,proto3" json:"isDeleted" structs:"is_deleted"`
	//@gotags: json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"
	DeletedAt *timestamp.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3" json:"deletedAt" gorm:"serializer:pbtimestamp;type:time" structs:"deleted_at"`
	//@gotags: json:"deletedBy" structs:"deleted_by"
	DeletedBy int32 `protobuf:"varint,10,opt,name=deleted_by,json=deletedBy,proto3" json:"deletedBy" structs:"deleted_by"`
}

func (x *MenuAction) Reset() {
	*x = MenuAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuAction) ProtoMessage() {}

func (x *MenuAction) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuAction.ProtoReflect.Descriptor instead.
func (*MenuAction) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{103}
}

func (x *MenuAction) GetMenuActionId() int32 {
	if x != nil {
		return x.MenuActionId
	}
	return 0
}

func (x *MenuAction) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *MenuAction) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *MenuAction) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *MenuAction) GetCreatedBy() int32 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *MenuAction) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MenuAction) GetUpdatedBy() int32 {
	if x != nil {
		return x.UpdatedBy
	}
	return 0
}

func (x *MenuAction) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *MenuAction) GetDeletedAt() *timestamp.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *MenuAction) GetDeletedBy() int32 {
	if x != nil {
		return x.DeletedBy
	}
	return 0
}

type MenuActionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*MenuAction `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MenuActionList) Reset() {
	*x = MenuActionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuActionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuActionList) ProtoMessage() {}

func (x *MenuActionList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuActionList.ProtoReflect.Descriptor instead.
func (*MenuActionList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{104}
}

func (x *MenuActionList) GetItems() []*MenuAction {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserActions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActionName []string `protobuf:"bytes,1,rep,name=actionName,proto3" json:"actionName,omitempty"`
}

func (x *UserActions) Reset() {
	*x = UserActions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserActions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserActions) ProtoMessage() {}

func (x *UserActions) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserActions.ProtoReflect.Descriptor instead.
func (*UserActions) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{105}
}

func (x *UserActions) GetActionName() []string {
	if x != nil {
		return x.ActionName
	}
	return nil
}

type UserModifyPasword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"userId" gorm:"primary_key;AUTO_INCREMENT" structs:"user_id"
	UserId int32 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"userId" gorm:"primary_key;AUTO_INCREMENT" structs:"user_id"`
	//@gotags: json:"oldPassword" structs:"old_password"
	OldPassword string `protobuf:"bytes,2,opt,name=old_password,json=oldPassword,proto3" json:"oldPassword" structs:"old_password"`
	//@gotags: json:"newPassword" structs:"new_password"
	NewPassword string `protobuf:"bytes,3,opt,name=new_password,json=newPassword,proto3" json:"newPassword" structs:"new_password"`
	//@gotags: json:"newRepeatPassword" structs:"new_repeat_password"
	NewRepeatPassword string `protobuf:"bytes,4,opt,name=new_repeat_password,json=newRepeatPassword,proto3" json:"newRepeatPassword" structs:"new_repeat_password"`
}

func (x *UserModifyPasword) Reset() {
	*x = UserModifyPasword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserModifyPasword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserModifyPasword) ProtoMessage() {}

func (x *UserModifyPasword) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserModifyPasword.ProtoReflect.Descriptor instead.
func (*UserModifyPasword) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{106}
}

func (x *UserModifyPasword) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserModifyPasword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *UserModifyPasword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

func (x *UserModifyPasword) GetNewRepeatPassword() string {
	if x != nil {
		return x.NewRepeatPassword
	}
	return ""
}

type SignalRawValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FsuId             int32                `protobuf:"varint,1,opt,name=fsu_id,json=fsuId,proto3" json:"fsu_id,omitempty"`
	ConfigureId       int32                `protobuf:"varint,2,opt,name=configure_id,json=configureId,proto3" json:"configure_id,omitempty"`
	ValueOccurredTime *timestamp.Timestamp `protobuf:"bytes,3,opt,name=value_occurred_time,json=valueOccurredTime,proto3" json:"value_occurred_time,omitempty"`
	SignalValueState  SignalValueStateEnum `protobuf:"varint,4,opt,name=signal_value_state,json=signalValueState,proto3,enum=message.SignalValueStateEnum" json:"signal_value_state,omitempty"`
	SignalValueType   SignalValueTypeEnum  `protobuf:"varint,5,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signal_value_type,omitempty"`
	DigitalValue      int32                `protobuf:"varint,6,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue       float64              `protobuf:"fixed64,7,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	StringValue       []byte               `protobuf:"bytes,8,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *SignalRawValue) Reset() {
	*x = SignalRawValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignalRawValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalRawValue) ProtoMessage() {}

func (x *SignalRawValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalRawValue.ProtoReflect.Descriptor instead.
func (*SignalRawValue) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{107}
}

func (x *SignalRawValue) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *SignalRawValue) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *SignalRawValue) GetValueOccurredTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValueOccurredTime
	}
	return nil
}

func (x *SignalRawValue) GetSignalValueState() SignalValueStateEnum {
	if x != nil {
		return x.SignalValueState
	}
	return SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN
}

func (x *SignalRawValue) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *SignalRawValue) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *SignalRawValue) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *SignalRawValue) GetStringValue() []byte {
	if x != nil {
		return x.StringValue
	}
	return nil
}

type ChannelValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId          int32                `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	X                 int32                `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                 int32                `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Z                 int32                `protobuf:"varint,4,opt,name=z,proto3" json:"z,omitempty"`
	ValueOccurredTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=value_occurred_time,json=valueOccurredTime,proto3" json:"value_occurred_time,omitempty"`
	SignalValueState  SignalValueStateEnum `protobuf:"varint,6,opt,name=signal_value_state,json=signalValueState,proto3,enum=message.SignalValueStateEnum" json:"signal_value_state,omitempty"`
	SignalValueType   SignalValueTypeEnum  `protobuf:"varint,7,opt,name=signal_value_type,json=signalValueType,proto3,enum=message.SignalValueTypeEnum" json:"signal_value_type,omitempty"`
	DigitalValue      int32                `protobuf:"varint,8,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue       float64              `protobuf:"fixed64,9,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	StringValue       string               `protobuf:"bytes,10,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *ChannelValue) Reset() {
	*x = ChannelValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelValue) ProtoMessage() {}

func (x *ChannelValue) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelValue.ProtoReflect.Descriptor instead.
func (*ChannelValue) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{108}
}

func (x *ChannelValue) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *ChannelValue) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *ChannelValue) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *ChannelValue) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *ChannelValue) GetValueOccurredTime() *timestamp.Timestamp {
	if x != nil {
		return x.ValueOccurredTime
	}
	return nil
}

func (x *ChannelValue) GetSignalValueState() SignalValueStateEnum {
	if x != nil {
		return x.SignalValueState
	}
	return SignalValueStateEnum_SIGNAL_VALUE_STATE_UNKNOWN
}

func (x *ChannelValue) GetSignalValueType() SignalValueTypeEnum {
	if x != nil {
		return x.SignalValueType
	}
	return SignalValueTypeEnum_SIGNAL_VALUE_TYPE_UNKNOWN
}

func (x *ChannelValue) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *ChannelValue) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *ChannelValue) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

type CommandParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlCommandSerialNumber string                 `protobuf:"bytes,1,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"control_command_serial_number,omitempty"`
	OperatorUserId             int32                  `protobuf:"varint,2,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	OperatorUserName           string                 `protobuf:"bytes,3,opt,name=operator_user_name,json=operatorUserName,proto3" json:"operator_user_name,omitempty"`
	SignalId                   int32                  `protobuf:"varint,4,opt,name=signal_id,json=signalId,proto3" json:"signal_id,omitempty"`
	ControlCommandType         ControlCommandTypeEnum `protobuf:"varint,5,opt,name=control_command_type,json=controlCommandType,proto3,enum=message.ControlCommandTypeEnum" json:"control_command_type,omitempty"`
	Delay                      int32                  `protobuf:"varint,6,opt,name=delay,proto3" json:"delay,omitempty"`
	DigitalValue               int32                  `protobuf:"varint,7,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue                float64                `protobuf:"fixed64,8,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	StringValue                string                 `protobuf:"bytes,9,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *CommandParam) Reset() {
	*x = CommandParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandParam) ProtoMessage() {}

func (x *CommandParam) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandParam.ProtoReflect.Descriptor instead.
func (*CommandParam) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{109}
}

func (x *CommandParam) GetControlCommandSerialNumber() string {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return ""
}

func (x *CommandParam) GetOperatorUserId() int32 {
	if x != nil {
		return x.OperatorUserId
	}
	return 0
}

func (x *CommandParam) GetOperatorUserName() string {
	if x != nil {
		return x.OperatorUserName
	}
	return ""
}

func (x *CommandParam) GetSignalId() int32 {
	if x != nil {
		return x.SignalId
	}
	return 0
}

func (x *CommandParam) GetControlCommandType() ControlCommandTypeEnum {
	if x != nil {
		return x.ControlCommandType
	}
	return ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_UNKNOWN
}

func (x *CommandParam) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *CommandParam) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *CommandParam) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *CommandParam) GetStringValue() string {
	if x != nil {
		return x.StringValue
	}
	return ""
}

type BottomCommandParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FsuId              int32                  `protobuf:"varint,1,opt,name=fsu_id,json=fsuId,proto3" json:"fsu_id,omitempty"`
	ConfigureId        int32                  `protobuf:"varint,2,opt,name=configure_id,json=configureId,proto3" json:"configure_id,omitempty"`
	OperateTime        *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=operate_time,json=operateTime,proto3" json:"operate_time,omitempty"`
	ControlCommandType ControlCommandTypeEnum `protobuf:"varint,4,opt,name=control_command_type,json=controlCommandType,proto3,enum=message.ControlCommandTypeEnum" json:"control_command_type,omitempty"`
	Delay              int32                  `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
	DigitalValue       int32                  `protobuf:"varint,6,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue        float64                `protobuf:"fixed64,7,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	StringValue        []byte                 `protobuf:"bytes,8,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *BottomCommandParam) Reset() {
	*x = BottomCommandParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BottomCommandParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BottomCommandParam) ProtoMessage() {}

func (x *BottomCommandParam) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BottomCommandParam.ProtoReflect.Descriptor instead.
func (*BottomCommandParam) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{110}
}

func (x *BottomCommandParam) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *BottomCommandParam) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *BottomCommandParam) GetOperateTime() *timestamp.Timestamp {
	if x != nil {
		return x.OperateTime
	}
	return nil
}

func (x *BottomCommandParam) GetControlCommandType() ControlCommandTypeEnum {
	if x != nil {
		return x.ControlCommandType
	}
	return ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_UNKNOWN
}

func (x *BottomCommandParam) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *BottomCommandParam) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *BottomCommandParam) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *BottomCommandParam) GetStringValue() []byte {
	if x != nil {
		return x.StringValue
	}
	return nil
}

type BottomControlCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorUserId             []byte              `protobuf:"bytes,1,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	OperatorUserName           []byte              `protobuf:"bytes,2,opt,name=operator_user_name,json=operatorUserName,proto3" json:"operator_user_name,omitempty"`
	ControlCommandSerialNumber []byte              `protobuf:"bytes,3,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"control_command_serial_number,omitempty"`
	ControlParam               *BottomCommandParam `protobuf:"bytes,4,opt,name=control_param,json=controlParam,proto3" json:"control_param,omitempty"`
	RecoverParam               *BottomCommandParam `protobuf:"bytes,5,opt,name=recover_param,json=recoverParam,proto3" json:"recover_param,omitempty"`
}

func (x *BottomControlCommandRequest) Reset() {
	*x = BottomControlCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BottomControlCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BottomControlCommandRequest) ProtoMessage() {}

func (x *BottomControlCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BottomControlCommandRequest.ProtoReflect.Descriptor instead.
func (*BottomControlCommandRequest) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{111}
}

func (x *BottomControlCommandRequest) GetOperatorUserId() []byte {
	if x != nil {
		return x.OperatorUserId
	}
	return nil
}

func (x *BottomControlCommandRequest) GetOperatorUserName() []byte {
	if x != nil {
		return x.OperatorUserName
	}
	return nil
}

func (x *BottomControlCommandRequest) GetControlCommandSerialNumber() []byte {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return nil
}

func (x *BottomControlCommandRequest) GetControlParam() *BottomCommandParam {
	if x != nil {
		return x.ControlParam
	}
	return nil
}

func (x *BottomControlCommandRequest) GetRecoverParam() *BottomCommandParam {
	if x != nil {
		return x.RecoverParam
	}
	return nil
}

type CenterCommandParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId           int32                  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	X                  int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y                  int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Z                  int32                  `protobuf:"varint,4,opt,name=z,proto3" json:"z,omitempty"`
	OperateTime        *timestamp.Timestamp   `protobuf:"bytes,7,opt,name=operate_time,json=operateTime,proto3" json:"operate_time,omitempty"`
	ControlCommandType ControlCommandTypeEnum `protobuf:"varint,8,opt,name=control_command_type,json=controlCommandType,proto3,enum=message.ControlCommandTypeEnum" json:"control_command_type,omitempty"`
	Delay              int32                  `protobuf:"varint,9,opt,name=delay,proto3" json:"delay,omitempty"`
	DigitalValue       int32                  `protobuf:"varint,10,opt,name=digital_value,json=digitalValue,proto3" json:"digital_value,omitempty"`
	AnalogValue        float64                `protobuf:"fixed64,11,opt,name=analog_value,json=analogValue,proto3" json:"analog_value,omitempty"`
	StringValue        []byte                 `protobuf:"bytes,12,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
}

func (x *CenterCommandParam) Reset() {
	*x = CenterCommandParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CenterCommandParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CenterCommandParam) ProtoMessage() {}

func (x *CenterCommandParam) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CenterCommandParam.ProtoReflect.Descriptor instead.
func (*CenterCommandParam) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{112}
}

func (x *CenterCommandParam) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *CenterCommandParam) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CenterCommandParam) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *CenterCommandParam) GetZ() int32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *CenterCommandParam) GetOperateTime() *timestamp.Timestamp {
	if x != nil {
		return x.OperateTime
	}
	return nil
}

func (x *CenterCommandParam) GetControlCommandType() ControlCommandTypeEnum {
	if x != nil {
		return x.ControlCommandType
	}
	return ControlCommandTypeEnum_CONTROL_COMMAND_TYPE_UNKNOWN
}

func (x *CenterCommandParam) GetDelay() int32 {
	if x != nil {
		return x.Delay
	}
	return 0
}

func (x *CenterCommandParam) GetDigitalValue() int32 {
	if x != nil {
		return x.DigitalValue
	}
	return 0
}

func (x *CenterCommandParam) GetAnalogValue() float64 {
	if x != nil {
		return x.AnalogValue
	}
	return 0
}

func (x *CenterCommandParam) GetStringValue() []byte {
	if x != nil {
		return x.StringValue
	}
	return nil
}

type CenterControlCommandRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorUserId             []byte              `protobuf:"bytes,1,opt,name=operator_user_id,json=operatorUserId,proto3" json:"operator_user_id,omitempty"`
	OperatorUserName           []byte              `protobuf:"bytes,2,opt,name=operator_user_name,json=operatorUserName,proto3" json:"operator_user_name,omitempty"`
	ControlCommandSerialNumber []byte              `protobuf:"bytes,3,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"control_command_serial_number,omitempty"`
	ControlParam               *CenterCommandParam `protobuf:"bytes,4,opt,name=control_param,json=controlParam,proto3" json:"control_param,omitempty"`
	RecoverParam               *CenterCommandParam `protobuf:"bytes,5,opt,name=recover_param,json=recoverParam,proto3" json:"recover_param,omitempty"`
}

func (x *CenterControlCommandRequest) Reset() {
	*x = CenterControlCommandRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CenterControlCommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CenterControlCommandRequest) ProtoMessage() {}

func (x *CenterControlCommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CenterControlCommandRequest.ProtoReflect.Descriptor instead.
func (*CenterControlCommandRequest) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{113}
}

func (x *CenterControlCommandRequest) GetOperatorUserId() []byte {
	if x != nil {
		return x.OperatorUserId
	}
	return nil
}

func (x *CenterControlCommandRequest) GetOperatorUserName() []byte {
	if x != nil {
		return x.OperatorUserName
	}
	return nil
}

func (x *CenterControlCommandRequest) GetControlCommandSerialNumber() []byte {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return nil
}

func (x *CenterControlCommandRequest) GetControlParam() *CenterCommandParam {
	if x != nil {
		return x.ControlParam
	}
	return nil
}

func (x *CenterControlCommandRequest) GetRecoverParam() *CenterCommandParam {
	if x != nil {
		return x.RecoverParam
	}
	return nil
}

type ControlCommandReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ControlCommandSerialNumber       []byte                   `protobuf:"bytes,1,opt,name=control_command_serial_number,json=controlCommandSerialNumber,proto3" json:"control_command_serial_number,omitempty"`
	ControlCommandReportOccurredTime *timestamp.Timestamp     `protobuf:"bytes,2,opt,name=control_command_report_occurred_time,json=controlCommandReportOccurredTime,proto3" json:"control_command_report_occurred_time,omitempty"`
	ControlCommandResultType         ControlCommandResultEnum `protobuf:"varint,3,opt,name=control_command_result_type,json=controlCommandResultType,proto3,enum=message.ControlCommandResultEnum" json:"control_command_result_type,omitempty"`
	ControlCommandExecuteDescription []byte                   `protobuf:"bytes,4,opt,name=control_command_execute_description,json=controlCommandExecuteDescription,proto3" json:"control_command_execute_description,omitempty"`
}

func (x *ControlCommandReport) Reset() {
	*x = ControlCommandReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlCommandReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlCommandReport) ProtoMessage() {}

func (x *ControlCommandReport) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlCommandReport.ProtoReflect.Descriptor instead.
func (*ControlCommandReport) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{114}
}

func (x *ControlCommandReport) GetControlCommandSerialNumber() []byte {
	if x != nil {
		return x.ControlCommandSerialNumber
	}
	return nil
}

func (x *ControlCommandReport) GetControlCommandReportOccurredTime() *timestamp.Timestamp {
	if x != nil {
		return x.ControlCommandReportOccurredTime
	}
	return nil
}

func (x *ControlCommandReport) GetControlCommandResultType() ControlCommandResultEnum {
	if x != nil {
		return x.ControlCommandResultType
	}
	return ControlCommandResultEnum_CONTROL_COMMAND_RESULT_UNKNOWN
}

func (x *ControlCommandReport) GetControlCommandExecuteDescription() []byte {
	if x != nil {
		return x.ControlCommandExecuteDescription
	}
	return nil
}

type FSUStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"fsuId"
	FsuId int32 `protobuf:"varint,1,opt,name=fsu_id,json=fsuId,proto3" json:"fsuId"`
	//@gotags: json:"fsuName"
	FsuName string `protobuf:"bytes,2,opt,name=fsu_name,json=fsuName,proto3" json:"fsuName"`
	//@gotags: json:"fsuType"
	FsuType string `protobuf:"bytes,3,opt,name=fsu_type,json=fsuType,proto3" json:"fsuType"`
	//@gotags: json:"subChannelName"
	SubChannelName string `protobuf:"bytes,4,opt,name=sub_channel_name,json=subChannelName,proto3" json:"subChannelName"`
	//@gotags: json:"lastReceiveTime"
	LastReceiveTime int64 `protobuf:"varint,5,opt,name=last_receive_time,json=lastReceiveTime,proto3" json:"lastReceiveTime"`
	//@gotags: json:"fsuStatus"
	FsuStatus int32 `protobuf:"varint,6,opt,name=fsu_status,json=fsuStatus,proto3" json:"fsuStatus"`
	//@gotags: json:"subChannelStatus"
	SubChannelStatus int32 `protobuf:"varint,7,opt,name=sub_channel_status,json=subChannelStatus,proto3" json:"subChannelStatus"`
	//@gotags: json:"statusDesc"
	StatusDesc string `protobuf:"bytes,8,opt,name=status_desc,json=statusDesc,proto3" json:"statusDesc"`
}

func (x *FSUStatus) Reset() {
	*x = FSUStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSUStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSUStatus) ProtoMessage() {}

func (x *FSUStatus) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSUStatus.ProtoReflect.Descriptor instead.
func (*FSUStatus) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{115}
}

func (x *FSUStatus) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *FSUStatus) GetFsuName() string {
	if x != nil {
		return x.FsuName
	}
	return ""
}

func (x *FSUStatus) GetFsuType() string {
	if x != nil {
		return x.FsuType
	}
	return ""
}

func (x *FSUStatus) GetSubChannelName() string {
	if x != nil {
		return x.SubChannelName
	}
	return ""
}

func (x *FSUStatus) GetLastReceiveTime() int64 {
	if x != nil {
		return x.LastReceiveTime
	}
	return 0
}

func (x *FSUStatus) GetFsuStatus() int32 {
	if x != nil {
		return x.FsuStatus
	}
	return 0
}

func (x *FSUStatus) GetSubChannelStatus() int32 {
	if x != nil {
		return x.SubChannelStatus
	}
	return 0
}

func (x *FSUStatus) GetStatusDesc() string {
	if x != nil {
		return x.StatusDesc
	}
	return ""
}

type FSUStatusList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*FSUStatus `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *FSUStatusList) Reset() {
	*x = FSUStatusList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FSUStatusList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FSUStatusList) ProtoMessage() {}

func (x *FSUStatusList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FSUStatusList.ProtoReflect.Descriptor instead.
func (*FSUStatusList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{116}
}

func (x *FSUStatusList) GetItems() []*FSUStatus {
	if x != nil {
		return x.Items
	}
	return nil
}

type DriverToFsu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId    int32  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	FsuId       int32  `protobuf:"varint,2,opt,name=fsu_id,json=fsuId,proto3" json:"fsu_id,omitempty"`
	ConfigureId int32  `protobuf:"varint,3,opt,name=configure_id,json=configureId,proto3" json:"configure_id,omitempty"`
	Request     []byte `protobuf:"bytes,4,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *DriverToFsu) Reset() {
	*x = DriverToFsu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DriverToFsu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DriverToFsu) ProtoMessage() {}

func (x *DriverToFsu) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DriverToFsu.ProtoReflect.Descriptor instead.
func (*DriverToFsu) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{117}
}

func (x *DriverToFsu) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *DriverToFsu) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *DriverToFsu) GetConfigureId() int32 {
	if x != nil {
		return x.ConfigureId
	}
	return 0
}

func (x *DriverToFsu) GetRequest() []byte {
	if x != nil {
		return x.Request
	}
	return nil
}

type FsuToDriver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DriverId int32  `protobuf:"varint,1,opt,name=driver_id,json=driverId,proto3" json:"driver_id,omitempty"`
	FsuId    int32  `protobuf:"varint,2,opt,name=fsu_id,json=fsuId,proto3" json:"fsu_id,omitempty"`
	Response []byte `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
}

func (x *FsuToDriver) Reset() {
	*x = FsuToDriver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsuToDriver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsuToDriver) ProtoMessage() {}

func (x *FsuToDriver) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsuToDriver.ProtoReflect.Descriptor instead.
func (*FsuToDriver) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{118}
}

func (x *FsuToDriver) GetDriverId() int32 {
	if x != nil {
		return x.DriverId
	}
	return 0
}

func (x *FsuToDriver) GetFsuId() int32 {
	if x != nil {
		return x.FsuId
	}
	return 0
}

func (x *FsuToDriver) GetResponse() []byte {
	if x != nil {
		return x.Response
	}
	return nil
}

type RealdataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignalIds []int32 `protobuf:"varint,1,rep,packed,name=signal_ids,json=signalIds,proto3" json:"signal_ids,omitempty"`
}

func (x *RealdataRequest) Reset() {
	*x = RealdataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealdataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealdataRequest) ProtoMessage() {}

func (x *RealdataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealdataRequest.ProtoReflect.Descriptor instead.
func (*RealdataRequest) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{119}
}

func (x *RealdataRequest) GetSignalIds() []int32 {
	if x != nil {
		return x.SignalIds
	}
	return nil
}

type FsuStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FsuIds []int32 `protobuf:"varint,1,rep,packed,name=fsu_ids,json=fsuIds,proto3" json:"fsu_ids,omitempty"`
}

func (x *FsuStatusRequest) Reset() {
	*x = FsuStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FsuStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FsuStatusRequest) ProtoMessage() {}

func (x *FsuStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FsuStatusRequest.ProtoReflect.Descriptor instead.
func (*FsuStatusRequest) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{120}
}

func (x *FsuStatusRequest) GetFsuIds() []int32 {
	if x != nil {
		return x.FsuIds
	}
	return nil
}

type WebsocketMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageType string    `protobuf:"bytes,1,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	Message     *any1.Any `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *WebsocketMessage) Reset() {
	*x = WebsocketMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsocketMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsocketMessage) ProtoMessage() {}

func (x *WebsocketMessage) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsocketMessage.ProtoReflect.Descriptor instead.
func (*WebsocketMessage) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{121}
}

func (x *WebsocketMessage) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *WebsocketMessage) GetMessage() *any1.Any {
	if x != nil {
		return x.Message
	}
	return nil
}

type OperationLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//@gotags: json:"logId" gorm:"primary_key;AUTO_INCREMENT" structs:"log_id"
	LogId int32 `protobuf:"varint,1,opt,name=log_id,json=logId,proto3" json:"logId" gorm:"primary_key;AUTO_INCREMENT" structs:"log_id"`
	//@gotags: json:"userId" structs:"user_id"
	UserId int32 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"userId" structs:"user_id"`
	//@gotags: json:"userNick" structs:"user_nick"
	UserNick string `protobuf:"bytes,3,opt,name=user_nick,json=userNick,proto3" json:"userNick" structs:"user_nick"`
	//@gotags: json:"actionId" structs:"action_id"
	ActionId int32 `protobuf:"varint,4,opt,name=action_id,json=actionId,proto3" json:"actionId" structs:"action_id"`
	//@gotags: json:"actionName" structs:"action_name"
	ActionName string `protobuf:"bytes,5,opt,name=action_name,json=actionName,proto3" json:"actionName" structs:"action_name"`
	//@gotags: json:"actionAlias" structs:"action_alias"
	ActionAlias string `protobuf:"bytes,6,opt,name=action_alias,json=actionAlias,proto3" json:"actionAlias" structs:"action_alias"`
	//@gotags: json:"actionType" structs:"action_type"
	ActionType int32 `protobuf:"varint,7,opt,name=action_type,json=actionType,proto3" json:"actionType" structs:"action_type"`
	//@gotags: json:"operationTime" gorm:"serializer:pbtimestamp;type:time" structs:"operation_time"
	OperationTime *timestamp.Timestamp `protobuf:"bytes,8,opt,name=operation_time,json=operationTime,proto3" json:"operationTime" gorm:"serializer:pbtimestamp;type:time" structs:"operation_time"`
}

func (x *OperationLog) Reset() {
	*x = OperationLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLog) ProtoMessage() {}

func (x *OperationLog) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLog.ProtoReflect.Descriptor instead.
func (*OperationLog) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{122}
}

func (x *OperationLog) GetLogId() int32 {
	if x != nil {
		return x.LogId
	}
	return 0
}

func (x *OperationLog) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *OperationLog) GetUserNick() string {
	if x != nil {
		return x.UserNick
	}
	return ""
}

func (x *OperationLog) GetActionId() int32 {
	if x != nil {
		return x.ActionId
	}
	return 0
}

func (x *OperationLog) GetActionName() string {
	if x != nil {
		return x.ActionName
	}
	return ""
}

func (x *OperationLog) GetActionAlias() string {
	if x != nil {
		return x.ActionAlias
	}
	return ""
}

func (x *OperationLog) GetActionType() int32 {
	if x != nil {
		return x.ActionType
	}
	return 0
}

func (x *OperationLog) GetOperationTime() *timestamp.Timestamp {
	if x != nil {
		return x.OperationTime
	}
	return nil
}

type OperationLogList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*OperationLog `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *OperationLogList) Reset() {
	*x = OperationLogList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_little_bee_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationLogList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationLogList) ProtoMessage() {}

func (x *OperationLogList) ProtoReflect() protoreflect.Message {
	mi := &file_message_little_bee_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationLogList.ProtoReflect.Descriptor instead.
func (*OperationLogList) Descriptor() ([]byte, []int) {
	return file_message_little_bee_proto_rawDescGZIP(), []int{123}
}

func (x *OperationLogList) GetItems() []*OperationLog {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_message_little_bee_proto protoreflect.FileDescriptor

var file_message_little_bee_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65,
	0x5f, 0x62, 0x65, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x01, 0x0a,
	0x0d, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f,
	0x0a, 0x14, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x65, 0x6e,
	0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x31, 0x0a, 0x15, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x6c, 0x69,
	0x61, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x65, 0x6e, 0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xb5, 0x04, 0x0a, 0x11, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x5a, 0x0a,
	0x17, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4e, 0x0a, 0x13, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x11, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x65, 0x6e, 0x75,
	0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x75,
	0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0d, 0x65, 0x6e, 0x75, 0x6d,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x79, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1b, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x41, 0x72,
	0x72, 0x61, 0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a, 0x1e, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xdc, 0x03,
	0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x6c, 0x69,
	0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x37, 0x0a, 0x0c,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa3, 0x03, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x39, 0x0a, 0x0d, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2e, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0xd1, 0x06, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x52, 0x61, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x4a, 0x0a, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x12, 0x48, 0x0a, 0x11,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x12,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x17, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61,
	0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xf1, 0x02, 0x0a, 0x12, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x4b,
	0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x68, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xb2,
	0x06, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x32, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b,
	0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0e, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x68, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x4a, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x8d, 0x04, 0x0a, 0x0a, 0x41,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a,
	0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3b, 0x0a, 0x0e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe7, 0x07, 0x0a, 0x05, 0x41, 0x6c, 0x61, 0x72,
	0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x17, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x41,
	0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d,
	0x41, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x08, 0x61, 0x63,
	0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x61, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0b, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a,
	0x0d, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x31, 0x0a, 0x09, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0xf6, 0x05, 0x0a, 0x0a, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x6c,
	0x61, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x36,
	0x0a, 0x17, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f,
	0x6c, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x68, 0x6f, 0x6c, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x44, 0x69, 0x67, 0x69, 0x74, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x41,
	0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x6f, 0x63, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfe, 0x01,
	0x0a, 0x08, 0x45, 0x6e, 0x64, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x6c,
	0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d,
	0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x40, 0x0a,
	0x0e, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x22, 0x98,
	0x02, 0x0a, 0x08, 0x41, 0x63, 0x6b, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x61,
	0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e,
	0x61, 0x6c, 0x61, 0x72, 0x6d, 0x42, 0x65, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x61, 0x63, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x61, 0x63,
	0x6b, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x6b, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x75, 0x0a, 0x11, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x67, 0x65, 0x12, 0x24,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x22, 0xba, 0x04, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x10,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49,
	0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x51, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52,
	0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x57, 0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c,
	0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74,
	0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61,
	0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4f, 0x0a,
	0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa0,
	0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x43, 0x0a, 0x1e,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xd3, 0x05, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x6f, 0x67,
	0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x41, 0x6c,
	0x69, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x16, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x14, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x6d, 0x6f, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f,
	0x6e, 0x67, 0x42, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x6f, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x41,
	0x72, 0x65, 0x61, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x72, 0x65, 0x61, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x72, 0x65, 0x61, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x22, 0x39, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x63,
	0x41, 0x72, 0x65, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x79, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x3d, 0x0a,
	0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf1, 0x01, 0x0a,
	0x11, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x12, 0x36, 0x0a, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x0b, 0x6c,
	0x6f, 0x67, 0x69, 0x63, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x09, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x41, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x63, 0x41, 0x72, 0x65,
	0x61, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x41, 0x72, 0x65, 0x61, 0x12, 0x36, 0x0a, 0x0b,
	0x6c, 0x6f, 0x67, 0x69, 0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x63, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x0b, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x22, 0xa5, 0x03, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a,
	0x0c, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x37, 0x0a, 0x0c, 0x41, 0x72, 0x65, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xb3, 0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3b, 0x0a, 0x0e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x80, 0x05, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x61, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x41, 0x69, 0x12, 0x2c, 0x0a, 0x12, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x64,
	0x69, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x44, 0x69, 0x12, 0x50, 0x0a, 0x13, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x12, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x74,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x61, 0x64, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x11, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x44, 0x65, 0x61, 0x64, 0x41, 0x72, 0x65, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x6c, 0x61, 0x72,
	0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x70, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x61, 0x6c, 0x61, 0x72, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x61,
	0x72, 0x6d, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb4,
	0x05, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x6e,
	0x64, 0x75, 0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x6e, 0x64, 0x75,
	0x73, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x32, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x69, 0x63, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x42, 0x72, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x33, 0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9d, 0x01, 0x0a, 0x08, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x66, 0x6c, 0x69, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x6c, 0x69, 0x70, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x69, 0x67, 0x68, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6c, 0x6f, 0x77, 0x44, 0x65, 0x73, 0x63, 0x22, 0x37, 0x0a, 0x0c, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0c, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x52, 0x61,
	0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x64, 0x65,
	0x63, 0x69, 0x6d, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x22, 0x37, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x41, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x4c, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x37, 0x0a,
	0x0c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x99, 0x02, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x01, 0x7a, 0x12, 0x35, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6e,
	0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x14, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x49, 0x64, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75,
	0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75, 0x69,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x53, 0x0a,
	0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbe, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12,
	0x35, 0x0a, 0x17, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x02, 0x41, 0x69, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x41, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69, 0x12, 0x42,
	0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x44, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x22, 0x2b, 0x0a, 0x06, 0x41, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x69, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x02, 0x44, 0x69, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x44, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x12, 0x42,
	0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c,
	0x64, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x12, 0x44, 0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x22, 0x2b, 0x0a, 0x06, 0x44, 0x69, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x21, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x02, 0x53, 0x69, 0x12, 0x27, 0x0a, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41,
	0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x53, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x12, 0x44,
	0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x22, 0x2b, 0x0a, 0x06, 0x53, 0x69, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xdf, 0x01, 0x0a, 0x03, 0x56, 0x41, 0x69, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c,
	0x12, 0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x41, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x69, 0x12,
	0x42, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x22, 0x2d, 0x0a, 0x07, 0x56, 0x41, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x41, 0x69, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xdf, 0x01, 0x0a, 0x03, 0x56, 0x44, 0x69, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x44, 0x69,
	0x12, 0x42, 0x0a, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68,
	0x6f, 0x6c, 0x64, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x68, 0x72, 0x65, 0x73,
	0x68, 0x6f, 0x6c, 0x64, 0x22, 0x2d, 0x0a, 0x07, 0x56, 0x44, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x44, 0x69, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x03, 0x56, 0x53, 0x69, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x3c, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74,
	0x75, 0x61, 0x6c, 0x52, 0x0d, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53, 0x69, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x53,
	0x69, 0x22, 0x2d, 0x0a, 0x07, 0x56, 0x53, 0x49, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x53, 0x69, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xc1, 0x01, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x41, 0x63,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44,
	0x0a, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x42, 0x69, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x22, 0x33, 0x0a, 0x0a, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x05, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x12, 0x36, 0x0a, 0x0b,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x12, 0x42, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x12, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x69, 0x6e, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x22, 0x31, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xee, 0x04, 0x0a, 0x11,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f,
	0x75, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x4e, 0x0a, 0x24, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x20, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x49, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd1, 0x03, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x31, 0x0a, 0x09, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf5,
	0x03, 0x0a, 0x07, 0x46, 0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x66, 0x73,
	0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x66, 0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x66, 0x73,
	0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x66, 0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x61, 0x74, 0x61,
	0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x6e, 0x65, 0x77, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x77, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x35, 0x0a, 0x0b, 0x46, 0x73, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46,
	0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x93, 0x04,
	0x0a, 0x03, 0x46, 0x73, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b,
	0x66, 0x73, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x66, 0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x73, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x73, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x22, 0x2d, 0x0a, 0x07, 0x46, 0x73, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x73, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xe3, 0x05, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x31, 0x0a, 0x15, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x1d, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73,
	0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3b, 0x0a, 0x0e, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa9, 0x06, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x46, 0x6c, 0x61, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x19, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x41, 0x0a, 0x1d, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x17, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x70,
	0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x41, 0x63, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x50, 0x65, 0x72, 0x69,
	0x6f, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42,
	0x79, 0x22, 0x33, 0x0a, 0x0a, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x61, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x61, 0x77, 0x12, 0x2c, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x41, 0x6e, 0x79, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x04, 0x0a, 0x0a,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x65, 0x70, 0x61,
	0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x6f, 0x6e, 0x67, 0x5f, 0x62, 0x72, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6d, 0x6f, 0x6e, 0x67, 0x42, 0x72, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3b, 0x0a, 0x0e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xcd, 0x04, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x2f, 0x0a, 0x08, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x41, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x22, 0x39, 0x0a,
	0x0d, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x22, 0x48, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x45, 0x0a, 0x0a, 0x55,
	0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x22, 0x37, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xee, 0x04, 0x0a, 0x04,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x75, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x69, 0x64, 0x65, 0x62, 0x61, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x2f, 0x0a, 0x08,
	0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb2, 0x04,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62,
	0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x42, 0x79, 0x22, 0x33, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa5, 0x03, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x6f, 0x6c, 0x65,
	0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6c, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22,
	0x2f, 0x0a, 0x08, 0x52, 0x6f, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x5a, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x3b, 0x0a, 0x0e,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69,
	0x63, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5d, 0x0a, 0x0b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x22, 0x3d, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3f, 0x0a, 0x09, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x40, 0x0a, 0x0b, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x22, 0xf1, 0x03, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x16, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x61,
	0x6c, 0x69, 0x61, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x41, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3d, 0x0a, 0x0f, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9d, 0x03, 0x0a, 0x0a, 0x4d, 0x65, 0x6e,
	0x75, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x65, 0x6e, 0x75, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x39,
	0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x42, 0x79, 0x22, 0x3b, 0x0a, 0x0e, 0x4d, 0x65, 0x6e, 0x75,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa2, 0x01, 0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x50, 0x61, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x6e, 0x65, 0x77,
	0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x65, 0x77, 0x52, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x98, 0x03, 0x0a, 0x0e, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73,
	0x75, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x4a, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67,
	0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xa3, 0x03, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c,
	0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x12, 0x4a, 0x0a, 0x13,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x11, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x4f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x52, 0x10, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1c, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0f,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61, 0x6c,
	0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x9a, 0x03, 0x0a, 0x0c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x41, 0x0a, 0x1d, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x6c, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe1, 0x02, 0x0a, 0x12, 0x42, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x73, 0x75, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61,
	0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x1b,
	0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xee, 0x02, 0x0a, 0x12, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0c,
	0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x7a, 0x12, 0x3d, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x51, 0x0a, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x64, 0x65,
	0x6c, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x64, 0x65, 0x6c, 0x61, 0x79,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x61, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x61, 0x6c, 0x6f, 0x67, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x6e, 0x61,
	0x6c, 0x6f, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b,
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbc, 0x02, 0x0a, 0x1b,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x40, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x0c, 0x72, 0x65,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xf6, 0x02, 0x0a, 0x14, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x41, 0x0a, 0x1d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x1a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x6a, 0x0a, 0x24, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x60, 0x0a, 0x1b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x18, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x23, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x20, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9c, 0x02, 0x0a, 0x09, 0x46, 0x53, 0x55, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x73, 0x75, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x73, 0x75, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x73, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x73, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x73, 0x75, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x66, 0x73, 0x75, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x73, 0x75, 0x62, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65,
	0x73, 0x63, 0x22, 0x39, 0x0a, 0x0d, 0x46, 0x53, 0x55, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x53, 0x55,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7e, 0x0a,
	0x0b, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x46, 0x73, 0x75, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5d, 0x0a,
	0x0b, 0x46, 0x73, 0x75, 0x54, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x73, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x73, 0x75, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x0f,
	0x52, 0x65, 0x61, 0x6c, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x73, 0x22, 0x2b,
	0x0a, 0x10, 0x46, 0x73, 0x75, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x73, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x66, 0x73, 0x75, 0x49, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x10, 0x57,
	0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x69, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x69, 0x63, 0x6b,
	0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x69, 0x61,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x3f, 0x0a, 0x10, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x67, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x2a, 0x41, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c,
	0x44, 0x69, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x44, 0x49, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x30,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x44, 0x49, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x31, 0x10, 0x01, 0x2a, 0x6c, 0x0a, 0x13, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d,
	0x12, 0x1d, 0x0a, 0x19, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x1b, 0x0a, 0x17, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x2a, 0xf7, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x41, 0x49, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x10, 0x03, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41,
	0x4f, 0x10, 0x04, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x44, 0x4f, 0x10, 0x05, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x49, 0x47, 0x4e, 0x41,
	0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x4f, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x41, 0x49, 0x10, 0x07,
	0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x56, 0x44, 0x49, 0x10, 0x08, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x53, 0x49, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10,
	0x0a, 0x2a, 0x8f, 0x01, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x49, 0x47,
	0x4e, 0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x49, 0x47, 0x4e,
	0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e,
	0x41, 0x4c, 0x4f, 0x47, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x49, 0x47, 0x49,
	0x54, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f,
	0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e,
	0x47, 0x10, 0x03, 0x2a, 0x74, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x02, 0x2a, 0x6b, 0x0a, 0x12, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x6c, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x1c, 0x0a, 0x18, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b, 0x0a,
	0x17, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x5f, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x41,
	0x4c, 0x41, 0x52, 0x4d, 0x10, 0x02, 0x2a, 0x70, 0x0a, 0x11, 0x41, 0x6c, 0x61, 0x72, 0x6d, 0x41,
	0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x17, 0x41,
	0x4c, 0x41, 0x52, 0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x4c, 0x41, 0x52,
	0x4d, 0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x46,
	0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1f, 0x0a, 0x1b, 0x41, 0x4c, 0x41, 0x52, 0x4d,
	0x5f, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x43, 0x4f, 0x4e,
	0x46, 0x49, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x2a, 0xe2, 0x01, 0x0a, 0x16, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x6e, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c,
	0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x52,
	0x55, 0x4e, 0x5f, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x4e, 0x54, 0x52,
	0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x54, 0x52, 0x55, 0x4e, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4b, 0x45, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x4c, 0x4f, 0x47, 0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b,
	0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x2a, 0x97, 0x02,
	0x0a, 0x18, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x23,
	0x0a, 0x1f, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45,
	0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x44, 0x45,
	0x4c, 0x49, 0x56, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f,
	0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45,
	0x53, 0x55, 0x4c, 0x54, 0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x22,
	0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e,
	0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x04, 0x12, 0x1f, 0x0a, 0x1b, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43, 0x4f,
	0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x05, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x4e, 0x54, 0x52, 0x4f, 0x4c, 0x5f, 0x43,
	0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x5f, 0x54, 0x49,
	0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x2a, 0x95, 0x01, 0x0a, 0x16, 0x54, 0x68, 0x72, 0x65,
	0x73, 0x68, 0x6f, 0x6c, 0x64, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6e,
	0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f,
	0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x1c, 0x0a, 0x18, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44,
	0x5f, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x53, 0x53, 0x10,
	0x01, 0x12, 0x1d, 0x0a, 0x19, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x44,
	0x49, 0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x47, 0x52, 0x45, 0x41, 0x54, 0x10, 0x02,
	0x12, 0x1d, 0x0a, 0x19, 0x54, 0x48, 0x52, 0x45, 0x53, 0x48, 0x4f, 0x4c, 0x44, 0x5f, 0x44, 0x49,
	0x52, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x51, 0x55, 0x41, 0x4c, 0x10, 0x03, 0x2a,
	0x7f, 0x0a, 0x16, 0x46, 0x73, 0x75, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x72, 0x73, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x1d, 0x46, 0x53, 0x55,
	0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x20, 0x0a, 0x1c,
	0x46, 0x53, 0x55, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x49, 0x4e, 0x47,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x54, 0x54, 0x4f, 0x4d, 0x10, 0x01, 0x12, 0x20,
	0x0a, 0x1c, 0x46, 0x53, 0x55, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x50, 0x41, 0x52, 0x53, 0x49,
	0x4e, 0x47, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10, 0x02,
	0x2a, 0xdb, 0x01, 0x0a, 0x0f, 0x46, 0x73, 0x75, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x53, 0x55, 0x5f, 0x52, 0x55, 0x4e, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x46, 0x53, 0x55, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x1c, 0x0a,
	0x18, 0x46, 0x53, 0x55, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1b, 0x0a, 0x17, 0x46,
	0x53, 0x55, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x46, 0x53, 0x55, 0x5f,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x44, 0x49, 0x53, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x53, 0x55, 0x5f,
	0x52, 0x55, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x4e,
	0x47, 0x10, 0x05, 0x12, 0x19, 0x0a, 0x15, 0x46, 0x53, 0x55, 0x5f, 0x52, 0x55, 0x4e, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x10, 0x06, 0x2a, 0xcd,
	0x01, 0x0a, 0x18, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x54, 0x72, 0x65, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x1f, 0x53,
	0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x22, 0x0a, 0x1e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54,
	0x52, 0x45, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x41, 0x52, 0x45, 0x41, 0x10, 0x02, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c,
	0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x53, 0x49,
	0x47, 0x4e, 0x41, 0x4c, 0x5f, 0x54, 0x52, 0x45, 0x45, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x4c, 0x10, 0x04, 0x2a, 0x96,
	0x01, 0x0a, 0x13, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x25, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f,
	0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x55, 0x52, 0x56,
	0x45, 0x49, 0x4c, 0x4c, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x10,
	0x00, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x46, 0x53, 0x55, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x5f, 0x4f, 0x42, 0x4a, 0x45, 0x43, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44,
	0x52, 0x49, 0x56, 0x45, 0x52, 0x10, 0x03, 0x2a, 0xa9, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x1f, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54,
	0x41, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x4d, 0x45,
	0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x21,
	0x0a, 0x1d, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x54, 0x54, 0x52, 0x49,
	0x42, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x52, 0x52, 0x41, 0x59, 0x10,
	0x02, 0x12, 0x20, 0x0a, 0x1c, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x41, 0x54,
	0x54, 0x52, 0x49, 0x42, 0x55, 0x54, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4e, 0x55,
	0x4d, 0x10, 0x03, 0x2a, 0xf3, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a,
	0x1b, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x1b,
	0x0a, 0x17, 0x4d, 0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x4d,
	0x45, 0x54, 0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x54,
	0x41, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x4c, 0x4f, 0x41, 0x54, 0x10, 0x03, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x54, 0x41,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x44, 0x4f, 0x55, 0x42, 0x4c, 0x45, 0x10, 0x04, 0x12, 0x1e, 0x0a, 0x1a, 0x4d, 0x45, 0x54, 0x41,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x54, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x12, 0x1f, 0x0a, 0x1b, 0x4d, 0x45, 0x54, 0x41,
	0x44, 0x41, 0x54, 0x41, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x06, 0x32, 0xbe, 0x03, 0x0a, 0x15, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x6c, 0x52, 0x61, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x14, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x61, 0x77,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x17, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x6c, 0x52, 0x61, 0x77, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x4b,
	0x0a, 0x18, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x15, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x3f, 0x0a, 0x0f, 0x46,
	0x53, 0x55, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x12,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x53, 0x55, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x28, 0x01, 0x12, 0x65, 0x0a, 0x1a,
	0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x28,
	0x01, 0x30, 0x01, 0x12, 0x65, 0x0a, 0x1a, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x1a, 0x24, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x28, 0x01, 0x30, 0x01, 0x32, 0x57, 0x0a, 0x14, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x65, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x3f, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x12, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x46, 0x73, 0x75, 0x1a, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x46, 0x73, 0x75, 0x54, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x28,
	0x01, 0x30, 0x01, 0x42, 0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2f, 0x6c, 0x69, 0x74, 0x74, 0x6c, 0x65, 0x62, 0x65, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_message_little_bee_proto_rawDescOnce sync.Once
	file_message_little_bee_proto_rawDescData = file_message_little_bee_proto_rawDesc
)

func file_message_little_bee_proto_rawDescGZIP() []byte {
	file_message_little_bee_proto_rawDescOnce.Do(func() {
		file_message_little_bee_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_little_bee_proto_rawDescData)
	})
	return file_message_little_bee_proto_rawDescData
}

var file_message_little_bee_proto_enumTypes = make([]protoimpl.EnumInfo, 16)
var file_message_little_bee_proto_msgTypes = make([]protoimpl.MessageInfo, 124)
var file_message_little_bee_proto_goTypes = []interface{}{
	(SignalDiValueEnum)(0),              // 0: message.SignalDiValueEnum
	(SignalEventTypeEnum)(0),            // 1: message.SignalEventTypeEnum
	(SignalTypeEnum)(0),                 // 2: message.SignalTypeEnum
	(SignalValueTypeEnum)(0),            // 3: message.SignalValueTypeEnum
	(SignalValueStateEnum)(0),           // 4: message.SignalValueStateEnum
	(SignalRunStateEnum)(0),             // 5: message.SignalRunStateEnum
	(AlarmAckStateEnum)(0),              // 6: message.AlarmAckStateEnum
	(ControlCommandTypeEnum)(0),         // 7: message.ControlCommandTypeEnum
	(ControlCommandResultEnum)(0),       // 8: message.ControlCommandResultEnum
	(ThresholdDirectionEnum)(0),         // 9: message.ThresholdDirectionEnum
	(FsuDataParsingTypeEnum)(0),         // 10: message.FsuDataParsingTypeEnum
	(FsuRunStateEnum)(0),                // 11: message.FsuRunStateEnum
	(SignalTreeObjectTypeEnum)(0),       // 12: message.SignalTreeObjectTypeEnum
	(AgentObjectTypeEnum)(0),            // 13: message.AgentObjectTypeEnum
	(MetadataAttributeTypeEnum)(0),      // 14: message.MetadataAttributeTypeEnum
	(MetadataValueTypeEnum)(0),          // 15: message.MetadataValueTypeEnum
	(*EnumValueItem)(nil),               // 16: message.EnumValueItem
	(*MetadataAttribute)(nil),           // 17: message.MetadataAttribute
	(*Metadata)(nil),                    // 18: message.Metadata
	(*MetadataList)(nil),                // 19: message.MetadataList
	(*Configure)(nil),                   // 20: message.Configure
	(*ConfigureList)(nil),               // 21: message.ConfigureList
	(*SignalIdsList)(nil),               // 22: message.SignalIdsList
	(*SignalRawEvent)(nil),              // 23: message.SignalRawEvent
	(*SignalCurrentStata)(nil),          // 24: message.SignalCurrentStata
	(*SignalRealValue)(nil),             // 25: message.SignalRealValue
	(*SignalRealValueList)(nil),         // 26: message.SignalRealValueList
	(*AlarmLevel)(nil),                  // 27: message.AlarmLevel
	(*AlarmLevelList)(nil),              // 28: message.AlarmLevelList
	(*Alarm)(nil),                       // 29: message.Alarm
	(*AlarmList)(nil),                   // 30: message.AlarmList
	(*BeginAlarm)(nil),                  // 31: message.BeginAlarm
	(*EndAlarm)(nil),                    // 32: message.EndAlarm
	(*AckAlarm)(nil),                    // 33: message.AckAlarm
	(*AlarmListWithPage)(nil),           // 34: message.AlarmListWithPage
	(*ControlCommandRecord)(nil),        // 35: message.ControlCommandRecord
	(*ControlCommandRecordList)(nil),    // 36: message.ControlCommandRecordList
	(*ControlCommandResponse)(nil),      // 37: message.ControlCommandResponse
	(*LogicObject)(nil),                 // 38: message.LogicObject
	(*LogicObjectList)(nil),             // 39: message.LogicObjectList
	(*LogicArea)(nil),                   // 40: message.LogicArea
	(*LogicAreaList)(nil),               // 41: message.LogicAreaList
	(*LogicDevice)(nil),                 // 42: message.LogicDevice
	(*LogicDeviceList)(nil),             // 43: message.LogicDeviceList
	(*LogicObjectExtend)(nil),           // 44: message.LogicObjectExtend
	(*AreaType)(nil),                    // 45: message.AreaType
	(*AreaTypeList)(nil),                // 46: message.AreaTypeList
	(*DeviceType)(nil),                  // 47: message.DeviceType
	(*DeviceTypeList)(nil),              // 48: message.DeviceTypeList
	(*SignalThreshold)(nil),             // 49: message.SignalThreshold
	(*SignalThresholdList)(nil),         // 50: message.SignalThresholdList
	(*Signal)(nil),                      // 51: message.Signal
	(*SignalList)(nil),                  // 52: message.SignalList
	(*SignalDi)(nil),                    // 53: message.SignalDi
	(*SignalDiList)(nil),                // 54: message.SignalDiList
	(*SignalAi)(nil),                    // 55: message.SignalAi
	(*SignalAiList)(nil),                // 56: message.SignalAiList
	(*SignalSi)(nil),                    // 57: message.SignalSi
	(*SignalSiList)(nil),                // 58: message.SignalSiList
	(*SignalAcquisition)(nil),           // 59: message.SignalAcquisition
	(*SignalAcquisitionList)(nil),       // 60: message.SignalAcquisitionList
	(*SignalVirtual)(nil),               // 61: message.SignalVirtual
	(*SignalVirtualList)(nil),           // 62: message.SignalVirtualList
	(*SignalVideo)(nil),                 // 63: message.SignalVideo
	(*SignalVideoList)(nil),             // 64: message.SignalVideoList
	(*Ai)(nil),                          // 65: message.Ai
	(*AiList)(nil),                      // 66: message.AiList
	(*Di)(nil),                          // 67: message.Di
	(*DiList)(nil),                      // 68: message.DiList
	(*Si)(nil),                          // 69: message.Si
	(*SiList)(nil),                      // 70: message.SiList
	(*VAi)(nil),                         // 71: message.VAi
	(*VAIList)(nil),                     // 72: message.VAIList
	(*VDi)(nil),                         // 73: message.VDi
	(*VDIList)(nil),                     // 74: message.VDIList
	(*VSi)(nil),                         // 75: message.VSi
	(*VSIList)(nil),                     // 76: message.VSIList
	(*Output)(nil),                      // 77: message.Output
	(*OutputList)(nil),                  // 78: message.OutputList
	(*Video)(nil),                       // 79: message.Video
	(*VideoList)(nil),                   // 80: message.VideoList
	(*SignalUnification)(nil),           // 81: message.SignalUnification
	(*SignalUnificationList)(nil),       // 82: message.SignalUnificationList
	(*Agent)(nil),                       // 83: message.Agent
	(*AgentList)(nil),                   // 84: message.AgentList
	(*FsuType)(nil),                     // 85: message.FsuType
	(*FsuTypeList)(nil),                 // 86: message.FsuTypeList
	(*Fsu)(nil),                         // 87: message.Fsu
	(*FsuList)(nil),                     // 88: message.FsuList
	(*DriverType)(nil),                  // 89: message.DriverType
	(*DriverTypeList)(nil),              // 90: message.DriverTypeList
	(*Driver)(nil),                      // 91: message.Driver
	(*DriverList)(nil),                  // 92: message.DriverList
	(*Response)(nil),                    // 93: message.Response
	(*Department)(nil),                  // 94: message.Department
	(*DepartmentList)(nil),              // 95: message.DepartmentList
	(*User)(nil),                        // 96: message.User
	(*UserList)(nil),                    // 97: message.UserList
	(*UserAlias)(nil),                   // 98: message.UserAlias
	(*UserAliasList)(nil),               // 99: message.UserAliasList
	(*LoginRequest)(nil),                // 100: message.LoginRequest
	(*LoginResponse)(nil),               // 101: message.LoginResponse
	(*UserVerify)(nil),                  // 102: message.UserVerify
	(*UserVerifyResponse)(nil),          // 103: message.UserVerifyResponse
	(*Menu)(nil),                        // 104: message.Menu
	(*MenuList)(nil),                    // 105: message.MenuList
	(*Action)(nil),                      // 106: message.Action
	(*ActionList)(nil),                  // 107: message.ActionList
	(*Role)(nil),                        // 108: message.Role
	(*RoleList)(nil),                    // 109: message.RoleList
	(*UserPolicy)(nil),                  // 110: message.UserPolicy
	(*UserPolicyList)(nil),              // 111: message.UserPolicyList
	(*GroupPolicy)(nil),                 // 112: message.GroupPolicy
	(*GroupPolicyList)(nil),             // 113: message.GroupPolicyList
	(*JoinGroup)(nil),                   // 114: message.JoinGroup
	(*JoinGroupList)(nil),               // 115: message.JoinGroupList
	(*GrantResult)(nil),                 // 116: message.GrantResult
	(*ActionGroup)(nil),                 // 117: message.ActionGroup
	(*ActionGroupList)(nil),             // 118: message.ActionGroupList
	(*MenuAction)(nil),                  // 119: message.MenuAction
	(*MenuActionList)(nil),              // 120: message.MenuActionList
	(*UserActions)(nil),                 // 121: message.UserActions
	(*UserModifyPasword)(nil),           // 122: message.UserModifyPasword
	(*SignalRawValue)(nil),              // 123: message.SignalRawValue
	(*ChannelValue)(nil),                // 124: message.ChannelValue
	(*CommandParam)(nil),                // 125: message.CommandParam
	(*BottomCommandParam)(nil),          // 126: message.BottomCommandParam
	(*BottomControlCommandRequest)(nil), // 127: message.BottomControlCommandRequest
	(*CenterCommandParam)(nil),          // 128: message.CenterCommandParam
	(*CenterControlCommandRequest)(nil), // 129: message.CenterControlCommandRequest
	(*ControlCommandReport)(nil),        // 130: message.ControlCommandReport
	(*FSUStatus)(nil),                   // 131: message.FSUStatus
	(*FSUStatusList)(nil),               // 132: message.FSUStatusList
	(*DriverToFsu)(nil),                 // 133: message.DriverToFsu
	(*FsuToDriver)(nil),                 // 134: message.FsuToDriver
	(*RealdataRequest)(nil),             // 135: message.RealdataRequest
	(*FsuStatusRequest)(nil),            // 136: message.FsuStatusRequest
	(*WebsocketMessage)(nil),            // 137: message.WebsocketMessage
	(*OperationLog)(nil),                // 138: message.OperationLog
	(*OperationLogList)(nil),            // 139: message.OperationLogList
	(*timestamp.Timestamp)(nil),         // 140: google.protobuf.Timestamp
	(*any1.Any)(nil),                    // 141: google.protobuf.Any
	(*empty.Empty)(nil),                 // 142: google.protobuf.Empty
}
var file_message_little_bee_proto_depIdxs = []int32{
	14,  // 0: message.MetadataAttribute.metadata_attribute_type:type_name -> message.MetadataAttributeTypeEnum
	15,  // 1: message.MetadataAttribute.metadata_value_type:type_name -> message.MetadataValueTypeEnum
	16,  // 2: message.MetadataAttribute.enum_value_item:type_name -> message.EnumValueItem
	140, // 3: message.Metadata.created_at:type_name -> google.protobuf.Timestamp
	140, // 4: message.Metadata.updated_at:type_name -> google.protobuf.Timestamp
	140, // 5: message.Metadata.deleted_at:type_name -> google.protobuf.Timestamp
	18,  // 6: message.MetadataList.items:type_name -> message.Metadata
	140, // 7: message.Configure.created_at:type_name -> google.protobuf.Timestamp
	140, // 8: message.Configure.updated_at:type_name -> google.protobuf.Timestamp
	140, // 9: message.Configure.deleted_at:type_name -> google.protobuf.Timestamp
	20,  // 10: message.ConfigureList.items:type_name -> message.Configure
	2,   // 11: message.SignalRawEvent.signal_type:type_name -> message.SignalTypeEnum
	140, // 12: message.SignalRawEvent.event_occurred_time:type_name -> google.protobuf.Timestamp
	1,   // 13: message.SignalRawEvent.signal_event_type:type_name -> message.SignalEventTypeEnum
	140, // 14: message.SignalRawEvent.alarm_begin_time:type_name -> google.protobuf.Timestamp
	4,   // 15: message.SignalRawEvent.signal_value_state:type_name -> message.SignalValueStateEnum
	5,   // 16: message.SignalRawEvent.signal_run_state:type_name -> message.SignalRunStateEnum
	3,   // 17: message.SignalRawEvent.signal_value_type:type_name -> message.SignalValueTypeEnum
	4,   // 18: message.SignalCurrentStata.signal_value_state:type_name -> message.SignalValueStateEnum
	5,   // 19: message.SignalCurrentStata.signal_run_state:type_name -> message.SignalRunStateEnum
	140, // 20: message.SignalCurrentStata.alarm_begin_time:type_name -> google.protobuf.Timestamp
	2,   // 21: message.SignalRealValue.signal_type:type_name -> message.SignalTypeEnum
	4,   // 22: message.SignalRealValue.signal_value_state:type_name -> message.SignalValueStateEnum
	5,   // 23: message.SignalRealValue.signal_run_state:type_name -> message.SignalRunStateEnum
	140, // 24: message.SignalRealValue.value_occurred_time:type_name -> google.protobuf.Timestamp
	3,   // 25: message.SignalRealValue.signal_value_type:type_name -> message.SignalValueTypeEnum
	25,  // 26: message.SignalRealValueList.items:type_name -> message.SignalRealValue
	140, // 27: message.AlarmLevel.created_at:type_name -> google.protobuf.Timestamp
	140, // 28: message.AlarmLevel.updated_at:type_name -> google.protobuf.Timestamp
	140, // 29: message.AlarmLevel.deleted_at:type_name -> google.protobuf.Timestamp
	27,  // 30: message.AlarmLevelList.items:type_name -> message.AlarmLevel
	2,   // 31: message.Alarm.signal_type:type_name -> message.SignalTypeEnum
	140, // 32: message.Alarm.alarm_begin_time:type_name -> google.protobuf.Timestamp
	140, // 33: message.Alarm.alarm_end_time:type_name -> google.protobuf.Timestamp
	3,   // 34: message.Alarm.signal_value_type:type_name -> message.SignalValueTypeEnum
	6,   // 35: message.Alarm.ack_state:type_name -> message.AlarmAckStateEnum
	140, // 36: message.Alarm.ack_time:type_name -> google.protobuf.Timestamp
	29,  // 37: message.AlarmList.items:type_name -> message.Alarm
	2,   // 38: message.BeginAlarm.signal_type:type_name -> message.SignalTypeEnum
	140, // 39: message.BeginAlarm.alarm_begin_time:type_name -> google.protobuf.Timestamp
	3,   // 40: message.BeginAlarm.signal_value_type:type_name -> message.SignalValueTypeEnum
	140, // 41: message.EndAlarm.alarm_begin_time:type_name -> google.protobuf.Timestamp
	140, // 42: message.EndAlarm.alarm_end_time:type_name -> google.protobuf.Timestamp
	140, // 43: message.AckAlarm.alarm_begin_time:type_name -> google.protobuf.Timestamp
	140, // 44: message.AckAlarm.ack_time:type_name -> google.protobuf.Timestamp
	29,  // 45: message.AlarmListWithPage.items:type_name -> message.Alarm
	140, // 46: message.ControlCommandRecord.operate_time:type_name -> google.protobuf.Timestamp
	7,   // 47: message.ControlCommandRecord.control_command_type:type_name -> message.ControlCommandTypeEnum
	8,   // 48: message.ControlCommandRecord.control_command_result:type_name -> message.ControlCommandResultEnum
	35,  // 49: message.ControlCommandRecordList.items:type_name -> message.ControlCommandRecord
	140, // 50: message.LogicObject.created_at:type_name -> google.protobuf.Timestamp
	140, // 51: message.LogicObject.updated_at:type_name -> google.protobuf.Timestamp
	140, // 52: message.LogicObject.deleted_at:type_name -> google.protobuf.Timestamp
	38,  // 53: message.LogicObjectList.items:type_name -> message.LogicObject
	40,  // 54: message.LogicAreaList.items:type_name -> message.LogicArea
	42,  // 55: message.LogicDeviceList.items:type_name -> message.LogicDevice
	38,  // 56: message.LogicObjectExtend.logicObject:type_name -> message.LogicObject
	40,  // 57: message.LogicObjectExtend.logicArea:type_name -> message.LogicArea
	42,  // 58: message.LogicObjectExtend.logicDevice:type_name -> message.LogicDevice
	20,  // 59: message.LogicObjectExtend.logicConfigure:type_name -> message.Configure
	140, // 60: message.AreaType.created_at:type_name -> google.protobuf.Timestamp
	140, // 61: message.AreaType.updated_at:type_name -> google.protobuf.Timestamp
	140, // 62: message.AreaType.deleted_at:type_name -> google.protobuf.Timestamp
	45,  // 63: message.AreaTypeList.items:type_name -> message.AreaType
	140, // 64: message.DeviceType.created_at:type_name -> google.protobuf.Timestamp
	140, // 65: message.DeviceType.updated_at:type_name -> google.protobuf.Timestamp
	140, // 66: message.DeviceType.deleted_at:type_name -> google.protobuf.Timestamp
	47,  // 67: message.DeviceTypeList.items:type_name -> message.DeviceType
	2,   // 68: message.SignalThreshold.signal_type:type_name -> message.SignalTypeEnum
	9,   // 69: message.SignalThreshold.threshold_direction:type_name -> message.ThresholdDirectionEnum
	49,  // 70: message.SignalThresholdList.items:type_name -> message.SignalThreshold
	2,   // 71: message.Signal.signal_type:type_name -> message.SignalTypeEnum
	140, // 72: message.Signal.created_at:type_name -> google.protobuf.Timestamp
	140, // 73: message.Signal.updated_at:type_name -> google.protobuf.Timestamp
	140, // 74: message.Signal.deleted_at:type_name -> google.protobuf.Timestamp
	51,  // 75: message.SignalList.items:type_name -> message.Signal
	53,  // 76: message.SignalDiList.items:type_name -> message.SignalDi
	55,  // 77: message.SignalAiList.items:type_name -> message.SignalAi
	57,  // 78: message.SignalSiList.items:type_name -> message.SignalSi
	59,  // 79: message.SignalAcquisitionList.items:type_name -> message.SignalAcquisition
	61,  // 80: message.SignalVirtualList.items:type_name -> message.SignalVirtual
	63,  // 81: message.SignalVideoList.items:type_name -> message.SignalVideo
	51,  // 82: message.Ai.signal:type_name -> message.Signal
	59,  // 83: message.Ai.signalAcquisition:type_name -> message.SignalAcquisition
	55,  // 84: message.Ai.signalAi:type_name -> message.SignalAi
	49,  // 85: message.Ai.signalThreshold:type_name -> message.SignalThreshold
	20,  // 86: message.Ai.signalBindConfigure:type_name -> message.Configure
	65,  // 87: message.AiList.items:type_name -> message.Ai
	51,  // 88: message.Di.signal:type_name -> message.Signal
	59,  // 89: message.Di.signalAcquisition:type_name -> message.SignalAcquisition
	53,  // 90: message.Di.signalDi:type_name -> message.SignalDi
	49,  // 91: message.Di.signalThreshold:type_name -> message.SignalThreshold
	20,  // 92: message.Di.signalBindConfigure:type_name -> message.Configure
	67,  // 93: message.DiList.items:type_name -> message.Di
	51,  // 94: message.Si.signal:type_name -> message.Signal
	59,  // 95: message.Si.signalAcquisition:type_name -> message.SignalAcquisition
	57,  // 96: message.Si.signalSi:type_name -> message.SignalSi
	20,  // 97: message.Si.signalBindConfigure:type_name -> message.Configure
	69,  // 98: message.SiList.items:type_name -> message.Si
	51,  // 99: message.VAi.signal:type_name -> message.Signal
	61,  // 100: message.VAi.signalVirtual:type_name -> message.SignalVirtual
	55,  // 101: message.VAi.signalAi:type_name -> message.SignalAi
	49,  // 102: message.VAi.signalThreshold:type_name -> message.SignalThreshold
	71,  // 103: message.VAIList.items:type_name -> message.VAi
	51,  // 104: message.VDi.signal:type_name -> message.Signal
	61,  // 105: message.VDi.signalVirtual:type_name -> message.SignalVirtual
	53,  // 106: message.VDi.signalDi:type_name -> message.SignalDi
	49,  // 107: message.VDi.signalThreshold:type_name -> message.SignalThreshold
	73,  // 108: message.VDIList.items:type_name -> message.VDi
	51,  // 109: message.VSi.signal:type_name -> message.Signal
	61,  // 110: message.VSi.signalVirtual:type_name -> message.SignalVirtual
	57,  // 111: message.VSi.signalSi:type_name -> message.SignalSi
	75,  // 112: message.VSIList.items:type_name -> message.VSi
	51,  // 113: message.Output.signal:type_name -> message.Signal
	59,  // 114: message.Output.signalAcquisition:type_name -> message.SignalAcquisition
	20,  // 115: message.Output.signalBindConfigure:type_name -> message.Configure
	77,  // 116: message.OutputList.items:type_name -> message.Output
	51,  // 117: message.Video.signal:type_name -> message.Signal
	63,  // 118: message.Video.signalVideo:type_name -> message.SignalVideo
	20,  // 119: message.Video.videoBindConfigure:type_name -> message.Configure
	79,  // 120: message.VideoList.items:type_name -> message.Video
	140, // 121: message.SignalUnification.created_at:type_name -> google.protobuf.Timestamp
	140, // 122: message.SignalUnification.updated_at:type_name -> google.protobuf.Timestamp
	140, // 123: message.SignalUnification.deleted_at:type_name -> google.protobuf.Timestamp
	81,  // 124: message.SignalUnificationList.items:type_name -> message.SignalUnification
	140, // 125: message.Agent.created_at:type_name -> google.protobuf.Timestamp
	140, // 126: message.Agent.updated_at:type_name -> google.protobuf.Timestamp
	140, // 127: message.Agent.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 128: message.AgentList.items:type_name -> message.Agent
	140, // 129: message.FsuType.created_at:type_name -> google.protobuf.Timestamp
	140, // 130: message.FsuType.updated_at:type_name -> google.protobuf.Timestamp
	140, // 131: message.FsuType.deleted_at:type_name -> google.protobuf.Timestamp
	85,  // 132: message.FsuTypeList.items:type_name -> message.FsuType
	140, // 133: message.Fsu.created_at:type_name -> google.protobuf.Timestamp
	140, // 134: message.Fsu.updated_at:type_name -> google.protobuf.Timestamp
	140, // 135: message.Fsu.deleted_at:type_name -> google.protobuf.Timestamp
	87,  // 136: message.FsuList.items:type_name -> message.Fsu
	140, // 137: message.DriverType.created_at:type_name -> google.protobuf.Timestamp
	140, // 138: message.DriverType.updated_at:type_name -> google.protobuf.Timestamp
	140, // 139: message.DriverType.deleted_at:type_name -> google.protobuf.Timestamp
	89,  // 140: message.DriverTypeList.items:type_name -> message.DriverType
	140, // 141: message.Driver.created_at:type_name -> google.protobuf.Timestamp
	140, // 142: message.Driver.updated_at:type_name -> google.protobuf.Timestamp
	140, // 143: message.Driver.deleted_at:type_name -> google.protobuf.Timestamp
	91,  // 144: message.DriverList.items:type_name -> message.Driver
	141, // 145: message.Response.result:type_name -> google.protobuf.Any
	140, // 146: message.Department.created_at:type_name -> google.protobuf.Timestamp
	140, // 147: message.Department.updated_at:type_name -> google.protobuf.Timestamp
	140, // 148: message.Department.deleted_at:type_name -> google.protobuf.Timestamp
	94,  // 149: message.DepartmentList.items:type_name -> message.Department
	140, // 150: message.User.created_at:type_name -> google.protobuf.Timestamp
	140, // 151: message.User.updated_at:type_name -> google.protobuf.Timestamp
	140, // 152: message.User.deleted_at:type_name -> google.protobuf.Timestamp
	96,  // 153: message.UserList.items:type_name -> message.User
	98,  // 154: message.UserAliasList.items:type_name -> message.UserAlias
	96,  // 155: message.LoginResponse.user:type_name -> message.User
	96,  // 156: message.UserVerifyResponse.user:type_name -> message.User
	140, // 157: message.Menu.created_at:type_name -> google.protobuf.Timestamp
	140, // 158: message.Menu.updated_at:type_name -> google.protobuf.Timestamp
	140, // 159: message.Menu.deleted_at:type_name -> google.protobuf.Timestamp
	104, // 160: message.MenuList.items:type_name -> message.Menu
	140, // 161: message.Action.created_at:type_name -> google.protobuf.Timestamp
	140, // 162: message.Action.updated_at:type_name -> google.protobuf.Timestamp
	140, // 163: message.Action.deleted_at:type_name -> google.protobuf.Timestamp
	106, // 164: message.ActionList.items:type_name -> message.Action
	140, // 165: message.Role.created_at:type_name -> google.protobuf.Timestamp
	140, // 166: message.Role.updated_at:type_name -> google.protobuf.Timestamp
	140, // 167: message.Role.deleted_at:type_name -> google.protobuf.Timestamp
	108, // 168: message.RoleList.items:type_name -> message.Role
	110, // 169: message.UserPolicyList.items:type_name -> message.UserPolicy
	112, // 170: message.GroupPolicyList.items:type_name -> message.GroupPolicy
	114, // 171: message.JoinGroupList.items:type_name -> message.JoinGroup
	140, // 172: message.ActionGroup.created_at:type_name -> google.protobuf.Timestamp
	140, // 173: message.ActionGroup.updated_at:type_name -> google.protobuf.Timestamp
	140, // 174: message.ActionGroup.deleted_at:type_name -> google.protobuf.Timestamp
	117, // 175: message.ActionGroupList.items:type_name -> message.ActionGroup
	140, // 176: message.MenuAction.created_at:type_name -> google.protobuf.Timestamp
	140, // 177: message.MenuAction.updated_at:type_name -> google.protobuf.Timestamp
	140, // 178: message.MenuAction.deleted_at:type_name -> google.protobuf.Timestamp
	119, // 179: message.MenuActionList.items:type_name -> message.MenuAction
	140, // 180: message.SignalRawValue.value_occurred_time:type_name -> google.protobuf.Timestamp
	4,   // 181: message.SignalRawValue.signal_value_state:type_name -> message.SignalValueStateEnum
	3,   // 182: message.SignalRawValue.signal_value_type:type_name -> message.SignalValueTypeEnum
	140, // 183: message.ChannelValue.value_occurred_time:type_name -> google.protobuf.Timestamp
	4,   // 184: message.ChannelValue.signal_value_state:type_name -> message.SignalValueStateEnum
	3,   // 185: message.ChannelValue.signal_value_type:type_name -> message.SignalValueTypeEnum
	7,   // 186: message.CommandParam.control_command_type:type_name -> message.ControlCommandTypeEnum
	140, // 187: message.BottomCommandParam.operate_time:type_name -> google.protobuf.Timestamp
	7,   // 188: message.BottomCommandParam.control_command_type:type_name -> message.ControlCommandTypeEnum
	126, // 189: message.BottomControlCommandRequest.control_param:type_name -> message.BottomCommandParam
	126, // 190: message.BottomControlCommandRequest.recover_param:type_name -> message.BottomCommandParam
	140, // 191: message.CenterCommandParam.operate_time:type_name -> google.protobuf.Timestamp
	7,   // 192: message.CenterCommandParam.control_command_type:type_name -> message.ControlCommandTypeEnum
	128, // 193: message.CenterControlCommandRequest.control_param:type_name -> message.CenterCommandParam
	128, // 194: message.CenterControlCommandRequest.recover_param:type_name -> message.CenterCommandParam
	140, // 195: message.ControlCommandReport.control_command_report_occurred_time:type_name -> google.protobuf.Timestamp
	8,   // 196: message.ControlCommandReport.control_command_result_type:type_name -> message.ControlCommandResultEnum
	131, // 197: message.FSUStatusList.items:type_name -> message.FSUStatus
	141, // 198: message.WebsocketMessage.message:type_name -> google.protobuf.Any
	140, // 199: message.OperationLog.operation_time:type_name -> google.protobuf.Timestamp
	138, // 200: message.OperationLogList.items:type_name -> message.OperationLog
	123, // 201: message.SignalRawValueService.BottomRawValueStream:input_type -> message.SignalRawValue
	124, // 202: message.SignalRawValueService.CenterChannelValueStream:input_type -> message.ChannelValue
	131, // 203: message.SignalRawValueService.FSUStatusStream:input_type -> message.FSUStatus
	130, // 204: message.SignalRawValueService.BottomControlCommandStream:input_type -> message.ControlCommandReport
	130, // 205: message.SignalRawValueService.CenterControlCommandStream:input_type -> message.ControlCommandReport
	133, // 206: message.CenterAnalysePayload.PayloadStream:input_type -> message.DriverToFsu
	142, // 207: message.SignalRawValueService.BottomRawValueStream:output_type -> google.protobuf.Empty
	142, // 208: message.SignalRawValueService.CenterChannelValueStream:output_type -> google.protobuf.Empty
	142, // 209: message.SignalRawValueService.FSUStatusStream:output_type -> google.protobuf.Empty
	127, // 210: message.SignalRawValueService.BottomControlCommandStream:output_type -> message.BottomControlCommandRequest
	129, // 211: message.SignalRawValueService.CenterControlCommandStream:output_type -> message.CenterControlCommandRequest
	134, // 212: message.CenterAnalysePayload.PayloadStream:output_type -> message.FsuToDriver
	207, // [207:213] is the sub-list for method output_type
	201, // [201:207] is the sub-list for method input_type
	201, // [201:201] is the sub-list for extension type_name
	201, // [201:201] is the sub-list for extension extendee
	0,   // [0:201] is the sub-list for field type_name
}

func init() { file_message_little_bee_proto_init() }
func file_message_little_bee_proto_init() {
	if File_message_little_bee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_little_bee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValueItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataAttribute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Configure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalIdsList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRawEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalCurrentStata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRealValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRealValueList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmLevelList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Alarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeginAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckAlarm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlarmListWithPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCommandRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCommandRecordList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCommandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicObjectList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicArea); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicAreaList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicDeviceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogicObjectExtend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalThreshold); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalThresholdList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Signal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalDi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalDiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalAi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalAiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalSi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalSiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalAcquisition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalAcquisitionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalVirtual); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalVirtualList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalVideoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ai); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Di); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Si); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VAi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VAIList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VDi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VDIList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VSi); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VSIList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OutputList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Video); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalUnification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalUnificationList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsuType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsuTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fsu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsuList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverTypeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Department); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DepartmentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAlias); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserAliasList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Action); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Role); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoleList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPolicyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPolicy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupPolicyList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinGroupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionGroupList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuActionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserActions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserModifyPasword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignalRawValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BottomCommandParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BottomControlCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CenterCommandParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CenterControlCommandRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlCommandReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSUStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FSUStatusList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DriverToFsu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsuToDriver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealdataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FsuStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsocketMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_little_bee_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationLogList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_little_bee_proto_rawDesc,
			NumEnums:      16,
			NumMessages:   124,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_message_little_bee_proto_goTypes,
		DependencyIndexes: file_message_little_bee_proto_depIdxs,
		EnumInfos:         file_message_little_bee_proto_enumTypes,
		MessageInfos:      file_message_little_bee_proto_msgTypes,
	}.Build()
	File_message_little_bee_proto = out.File
	file_message_little_bee_proto_rawDesc = nil
	file_message_little_bee_proto_goTypes = nil
	file_message_little_bee_proto_depIdxs = nil
}
